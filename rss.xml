<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>infNaN</title>
  
  
  <link href="https://plusnan.me/rss.xml" rel="self"/>
  
  <link href="https://plusnan.me/"/>
  <updated>2021-01-16T16:08:30.971Z</updated>
  <id>https://plusnan.me/</id>
  
  <author>
    <name>infNaN</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>找回丢失的Word表格边框</title>
    <link href="https://plusnan.me/2020/09/14/word-table-border-recovery/"/>
    <id>https://plusnan.me/2020/09/14/word-table-border-recovery/</id>
    <published>2020-09-13T16:00:00.000Z</published>
    <updated>2021-01-16T16:08:30.971Z</updated>
    
    <content type="html"><![CDATA[<p>Word有一个奇葩bug，有很小的概率会发生表格边框全部消失的现象。但是我们的文档内容实在很多，挨个表格点击加边框不太现实，所以要用宏来解决这个问题。</p><a id="more"></a><h2 id="适用情况"><a href="#适用情况" class="headerlink" title="适用情况"></a>适用情况</h2><p>整篇文档的表格都使用了统一的表格边框样式，例如全部为“所有框线”。特殊案例需要跑完程序手工处理。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><ol><li>用鼠标右键点击功能区，在弹出菜单中选择“自定义功能区”。<br><img src="/img/2020-09-14-word-table-border-recovery/word1.png" alt=""></li><li>在弹出对话框中，右侧自定义功能区将“开发工具”打上对勾，确定。</li><li>在功能区出现了“开发工具”，点进去，然后选择最左面的“Visual Basic”。<br><img src="/img/2020-09-14-word-table-border-recovery/word2.png" alt=""></li><li>在弹出的Visual Basic中，选择“插入”菜单中的“模块”选项。</li><li>把本文后面的程序粘贴到里面。</li><li>点击“运行”菜单中的“运行子过程/用户窗体”，在弹出的对话框中选择“恢复丢失的表线”。</li><li>等程序运行完成。如果提示错误，那么需要回到Word，翻到指定页面手工处理一下。</li><li>回到Visual Basic，对着左侧的“模块1”点右键，选择移除，然后选择否，把代码删除，免得保存时候麻烦。<br><img src="/img/2020-09-14-word-table-border-recovery/word3.png" alt=""></li></ol><h2 id="程序内容"><a href="#程序内容" class="headerlink" title="程序内容"></a>程序内容</h2><h3 id="适用于“所有框线”"><a href="#适用于“所有框线”" class="headerlink" title="适用于“所有框线”"></a>适用于“所有框线”</h3><p><img src="/img/2020-09-14-word-table-border-recovery/table1.png" alt=""></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 恢复丢失的表线()</span><br><span class="line">    <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">GoTo</span> e</span><br><span class="line">    <span class="keyword">Dim</span> msg <span class="keyword">As</span> <span class="type">String</span>, t <span class="keyword">As</span> Table</span><br><span class="line">    msg = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> t <span class="keyword">In</span> ActiveDocument.Tables</span><br><span class="line">        t.<span class="keyword">Select</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderTop)</span><br><span class="line">            .LineStyle = Options.DefaultBorderLineStyle</span><br><span class="line">            .LineWidth = Options.DefaultBorderLineWidth</span><br><span class="line">            .Color = Options.DefaultBorderColor</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderLeft)</span><br><span class="line">            .LineStyle = Options.DefaultBorderLineStyle</span><br><span class="line">            .LineWidth = Options.DefaultBorderLineWidth</span><br><span class="line">            .Color = Options.DefaultBorderColor</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderBottom)</span><br><span class="line">            .LineStyle = Options.DefaultBorderLineStyle</span><br><span class="line">            .LineWidth = Options.DefaultBorderLineWidth</span><br><span class="line">            .Color = Options.DefaultBorderColor</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderRight)</span><br><span class="line">            .LineStyle = Options.DefaultBorderLineStyle</span><br><span class="line">            .LineWidth = Options.DefaultBorderLineWidth</span><br><span class="line">            .Color = Options.DefaultBorderColor</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderHorizontal)</span><br><span class="line">            .LineStyle = Options.DefaultBorderLineStyle</span><br><span class="line">            .LineWidth = Options.DefaultBorderLineWidth</span><br><span class="line">            .Color = Options.DefaultBorderColor</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderVertical)</span><br><span class="line">            .LineStyle = Options.DefaultBorderLineStyle</span><br><span class="line">            .LineWidth = Options.DefaultBorderLineWidth</span><br><span class="line">            .Color = Options.DefaultBorderColor</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> msg &lt;&gt; <span class="string">&quot;&quot;</span> <span class="keyword">Then</span></span><br><span class="line">        MsgBox <span class="string">&quot;处理以下页面时发生错误，请复查：&quot;</span> &amp; vbCrLf &amp; msg, vbExclamation</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Exit</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="symbol">e:</span></span><br><span class="line">    msg = msg &amp; Selection.Information(wdActiveEndAdjustedPageNumber) &amp; vbCrLf</span><br><span class="line">    <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h3 id="粗边框表格"><a href="#粗边框表格" class="headerlink" title="粗边框表格"></a>粗边框表格</h3><p>假定边框1.5磅，内部0.5磅：</p><p><img src="/img/2020-09-14-word-table-border-recovery/table2.png" alt=""></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 恢复丢失的表线()</span><br><span class="line">    <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">GoTo</span> e</span><br><span class="line">    <span class="keyword">Dim</span> msg <span class="keyword">As</span> <span class="type">String</span>, t <span class="keyword">As</span> Table</span><br><span class="line">    msg = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> t <span class="keyword">In</span> ActiveDocument.Tables</span><br><span class="line">        t.<span class="keyword">Select</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderLeft)</span><br><span class="line">            .LineStyle = wdLineStyleSingle</span><br><span class="line">            .LineWidth = wdLineWidth150pt</span><br><span class="line">            .Color = wdColorAutomatic</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderRight)</span><br><span class="line">            .LineStyle = wdLineStyleSingle</span><br><span class="line">            .LineWidth = wdLineWidth150pt</span><br><span class="line">            .Color = wdColorAutomatic</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderTop)</span><br><span class="line">            .LineStyle = wdLineStyleSingle</span><br><span class="line">            .LineWidth = wdLineWidth150pt</span><br><span class="line">            .Color = wdColorAutomatic</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderBottom)</span><br><span class="line">            .LineStyle = wdLineStyleSingle</span><br><span class="line">            .LineWidth = wdLineWidth150pt</span><br><span class="line">            .Color = wdColorAutomatic</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderHorizontal)</span><br><span class="line">            .LineStyle = wdLineStyleSingle</span><br><span class="line">            .LineWidth = wdLineWidth050pt</span><br><span class="line">            .Color = wdColorAutomatic</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderVertical)</span><br><span class="line">            .LineStyle = wdLineStyleSingle</span><br><span class="line">            .LineWidth = wdLineWidth050pt</span><br><span class="line">            .Color = wdColorAutomatic</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> msg &lt;&gt; <span class="string">&quot;&quot;</span> <span class="keyword">Then</span></span><br><span class="line">        MsgBox <span class="string">&quot;处理以下页面时发生错误，请复查：&quot;</span> &amp; vbCrLf &amp; msg, vbExclamation</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Exit</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="symbol">e:</span></span><br><span class="line">    msg = msg &amp; Selection.Information(wdActiveEndAdjustedPageNumber) &amp; vbCrLf</span><br><span class="line">    <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><h3 id="仅上、下和表头三条横线"><a href="#仅上、下和表头三条横线" class="headerlink" title="仅上、下和表头三条横线"></a>仅上、下和表头三条横线</h3><p>假定边框1.5磅，内部0.5磅：</p><p><img src="/img/2020-09-14-word-table-border-recovery/table3.png" alt=""></p><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Sub</span> 恢复丢失的表线()</span><br><span class="line">    <span class="keyword">On</span> <span class="keyword">Error</span> <span class="keyword">GoTo</span> e</span><br><span class="line">    <span class="keyword">Dim</span> msg <span class="keyword">As</span> <span class="type">String</span>, t <span class="keyword">As</span> Table</span><br><span class="line">    msg = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">For</span> <span class="keyword">Each</span> t <span class="keyword">In</span> ActiveDocument.Tables</span><br><span class="line">        t.<span class="keyword">Select</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderLeft)</span><br><span class="line">            .LineStyle = wdLineStyleSingle</span><br><span class="line">            .LineWidth = wdLineWidth150pt</span><br><span class="line">            .Color = wdColorAutomatic</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderRight)</span><br><span class="line">            .LineStyle = wdLineStyleSingle</span><br><span class="line">            .LineWidth = wdLineWidth150pt</span><br><span class="line">            .Color = wdColorAutomatic</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderTop)</span><br><span class="line">            .LineStyle = wdLineStyleSingle</span><br><span class="line">            .LineWidth = wdLineWidth150pt</span><br><span class="line">            .Color = wdColorAutomatic</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderBottom)</span><br><span class="line">            .LineStyle = wdLineStyleSingle</span><br><span class="line">            .LineWidth = wdLineWidth150pt</span><br><span class="line">            .Color = wdColorAutomatic</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderHorizontal)</span><br><span class="line">            .LineStyle = wdLineStyleSingle</span><br><span class="line">            .LineWidth = wdLineWidth050pt</span><br><span class="line">            .Color = wdColorAutomatic</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">        <span class="keyword">With</span> Selection.Borders(wdBorderVertical)</span><br><span class="line">            .LineStyle = wdLineStyleSingle</span><br><span class="line">            .LineWidth = wdLineWidth050pt</span><br><span class="line">            .Color = wdColorAutomatic</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">If</span> msg &lt;&gt; <span class="string">&quot;&quot;</span> <span class="keyword">Then</span></span><br><span class="line">        MsgBox <span class="string">&quot;处理以下页面时发生错误，请复查：&quot;</span> &amp; vbCrLf &amp; msg, vbExclamation</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Exit</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="symbol">e:</span></span><br><span class="line">    msg = msg &amp; Selection.Information(wdActiveEndAdjustedPageNumber) &amp; vbCrLf</span><br><span class="line">    <span class="keyword">Resume</span> <span class="keyword">Next</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Word有一个奇葩bug，有很小的概率会发生表格边框全部消失的现象。但是我们的文档内容实在很多，挨个表格点击加边框不太现实，所以要用宏来解决这个问题。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>社招招聘日记（三）：迷惑简历大赏</title>
    <link href="https://plusnan.me/2020/08/29/bad-resume/"/>
    <id>https://plusnan.me/2020/08/29/bad-resume/</id>
    <published>2020-08-28T16:00:00.000Z</published>
    <updated>2021-01-12T16:22:35.058Z</updated>
    
    <content type="html"><![CDATA[<p>本文收录个人在筛选简历时看到的令人哭笑不得的内容。在博君一笑的同时，希望也能引以为戒，不要因本可以避免的低级错误耽误前途。</p><p>为保护当事人隐私，本文会用文字转述简历内容，或者对简历内容进行处理后再截图。本文无意针对任何人，如果你发现简历内容是你写的，请保持低调并吸取教训，不要回怼，以免贻笑大方。不过本文也不全是反面案例，有些内容虽然不应该写到简历中，但是写了也无妨。</p><a id="more"></a><h1 id="与HR躲猫猫？"><a href="#与HR躲猫猫？" class="headerlink" title="与HR躲猫猫？"></a>与HR躲猫猫？</h1><ul><li><code>电话：130****5678  邮件：zhang***@163.com</code><ul><li><strong>点评：</strong>我对你的工作经验比较满意，请问如何通知你参加面试？</li></ul></li></ul><p>&nbsp;</p><ul><li><code>电话：1301234567</code><ul><li><strong>点评：</strong>同上。（电话位数错了，您拨打的电话是空号）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>电话：13012345678</code>（打了两三遍也打不通）<ul><li><strong>点评：</strong>比上面那两位强点，至少能把电话打出去了。（所以请保持电话畅通）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>邮件：123456789qq.com</code><ul><li><strong>点评：</strong>本来QQ邮箱就在鄙视链最底端，少写个@符号，鄙视链长度+1。</li></ul></li></ul><p>&nbsp;</p><ul><li>照片：<img src="/img/2020-08-29-bad-resume/modest-3.png" alt=""><ul><li><strong>点评：</strong>既不是三次元也不是二次元，失望。（请不要放照片！如果非要放照片，请放一张颜值高而且又不做作的照片）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>工作单位：20XX.X-20XX.X  保密</code><ul><li><strong>点评：</strong>简历审查结果——保密。（公司会对入职者进行背景调查。不核实学历和以往工作单位的话，公司是不敢录用的，怕在法律方面出问题。就算真在涉密单位工作过也是一样）</li></ul></li></ul><p>&nbsp;</p><h1 id="逼死强迫症症"><a href="#逼死强迫症症" class="headerlink" title="逼死强迫症症"></a>逼死强迫症症</h1><ul><li><code>了解Vue、BootStrep等框架</code><ul><li><strong>点评：</strong>很抱歉，我们公司使用Bootstrap框架进行开发。作为BootStrep开发者，您不适合我们公司的工作。（不要把关键词语写错）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>熟练使用postMan工具</code><ul><li><strong>点评：</strong>您也熟练地使用了<small>小</small>驼<small>峰</small>命名法？（IT行业有非常多的英文词语，请使用正确的大小写来拼写这些名字。该软件的正确写法是<code>Postman</code>，写成<code>postman</code>或<code>POSTMAN</code>会降低我们的好感度，写成<code>postMan</code>则直接PASS）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>利用Redis技术较少系统的压力</code><ul><li><strong>点评：</strong>输入法出买了你，增加了你求值的鸭梨。（别写错别字）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>掌握HTML5、javascript、CSS3、XML等WEb前段基础</code>、<code>具有良好的编码习惯，习惯在代码中加入注视说明</code><ul><li><strong>点评：</strong>“WEb前段”和“注视说明”是哪门子传统艺能？（中英文双语都有错字，绝了……）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>熟练SpringBoot、SpringCloud的使用</code><ul><li><strong>点评：</strong>熟练？你为什么会这么熟练啊？（请保证自己写的东西符合汉语语法）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>系统使用javaweb开发，后端使用springboot redis mybatis rabbitmq mysql进行调用。主要负责需求文档 设计文档 数据库设计 系统架构设计 功能开发 后端与vue.js前端交互</code><ul><li><strong>点评：</strong>大哥麻烦用一下标点符号否则句子那么长看起来很费劲而且简历是求职重要依据那么使用规范汉字和规范标点符号都是最起码的事情吧还有后面那堆词语都用空格分割了为什么前面的javaweb反倒没使用空格难道这是一个固定词语吗（请使用规范的标点符号）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>工作经历：XXXXX公司       XXXX.X-XXXX.X    开发攻城狮</code><ul><li><strong>点评：</strong>我们不是动物园，我们只招聘人类。（不要用外号描述工作。从面试环节了解你的性格之前，外号既可以理解成热爱工作，也可以理解成对现有工作的不满或嘲讽）</li></ul></li></ul><p>&nbsp;</p><ul><li>混合样式——<img src="/img/2020-08-29-bad-resume/mixed-1.png" alt="混合样式"><ul><li><strong>点评：</strong>既用半角标点<span style="display:none;">x</span>,又用全角标点<span style="display:none;">x</span>;既 要 留 空 格，<span style="letter-spacing: -0.2em;">又紧贴列表数字序号</span>；既使用<span style="font-family:'Times New Roman',Times,serif;">Times New Roman</span>，<span style="font-family:'Songti SC', STSong, NSimSun, SimSun, serif;">又使用宋体</span>；<big>有些字大</big>，<small>有些字小</small>……我的<em>强迫症</em>又<strong>发作</strong>了。（请统一字体、字号等格式，这是写文档最起码的要求之一）</li></ul></li></ul><p>&nbsp;</p><ul><li>高端Word模板——<img src="/img/2020-08-29-bad-resume/preview.png" alt=""><ul><li><strong>点评：</strong>你使用了高端大气上档次的简历模板，而我低调奢华有内涵的MacBook Pro却无法正确显示，实在可惜。（你不知道HR会用什么东西来看你的简历，所以请把简历转成全设备通用的PDF格式之后再投递）</li></ul></li></ul><p>&nbsp;</p><ul><li>躲开了上面两个坑，跳进了另一个坑：<img src="/img/2020-08-29-bad-resume/noformat.png" alt=""><ul><li><strong>点评：</strong>格式整齐，模板兼容性好，然而内容没有条理，看不清楚！（请注意使用空行、分割线、项目符号等形式把不同项目分割开，保持清晰）</li></ul></li></ul><p>&nbsp;</p><ul><li>简历表：<img src="/img/2020-08-29-bad-resume/table.png" alt=""><ul><li><strong>点评：</strong><br>| 项目        | 说明                               |<br>|——————|——————————————————|<br>| 总体排版    | 表格式简历看起来不舒服                 |<br>| 内容项      | 格式不一致，而且明明有表头，还在使用冒号 |<br>| 项目经历亮点 | 无                                 |<br>| 结论        | PASS                               |</li></ul></li></ul><p>&nbsp;</p><ul><li><code>システム処理功能开发，SpringMVC+Redis+Kafka予約受付実現。</code><ul><li><strong>点评：</strong><span style='font-family: "-apple-system", BlinkMacSystemFont, "Yu Gothic Medium", "游ゴシック Medium", YuGothic, "游ゴシック体", "Noto Sans Japanese", "ヒラギノ角ゴ Pro W3", "メイリオ", "Hiragino Kaku Gothic ProN", "MS PGothic", Osaka, "sans-serif";'>我們的、中国人的幹活。你的、日本語的、八格牙路、死啦死啦的！</span>（即使做过外国项目，也请用中国话来表达）</li></ul></li></ul><p>&nbsp;</p><h1 id="装◯不成反被◯"><a href="#装◯不成反被◯" class="headerlink" title="装◯不成反被◯"></a>装◯不成反被◯</h1><ul><li><code>精通Java</code><ul><li><strong>点评：</strong>只要你敢说精通，我就敢把面试问题准备到字节码那种等级。所以，除非你真的精通底层原理，否则不要用“精通”这个词语。</li></ul></li></ul><p>&nbsp;</p><ul><li><code>GitHub：https://github.com/xxxxxx</code><ul><li><strong>点评：</strong><img src="/img/2020-08-29-bad-resume/gayhub.png" alt="新账号"> GitHub网站是个人就能注册，所以有账号不代表你水平高。如果你想证明自己能力，请在找工作之前就在GitHub或个人博客放入一些有实质内容的、自己原创的东西，否则会被视为装◯。</li></ul></li></ul><p>&nbsp;</p><ul><li><code>Blog：https://xxxxxx.me</code><ul><li><strong>点评：</strong><img src="/img/2020-08-29-bad-resume/502.png" alt=""> 我们要通过你的Blog来判断你的能力，因此请保证网站状态正常，能够在中国进行访问，并且不要设置注册墙或付费墙（必须登录甚至付费之后才能看到内容），否则把地址贴出来就没有意义了。</li></ul></li></ul><p>&nbsp;</p><ul><li><code>最新版本简历参见boss直聘电子版</code><ul><li><strong>点评：</strong>请扫描以下二维码查看简历审核结果<br><img src="/img/2020-08-29-bad-resume/lazyguy.png" alt="扫描二维码获取简历审核结果"></li></ul></li></ul><p>&nbsp;</p><ul><li><code>期望从事职业：互联网软件工程师、数据库开发工程师、Java开发工程师</code> <ul><li><strong>点评：</strong>不要同时往一家公司的多个岗位投简历。顺便提醒一下，日常生活中不要同时搞多个对象，否则后果更严重——<a href="https://baike.baidu.com/item/%E7%99%BD%E5%AD%A6%E7%8E%B0%E5%9C%BA"><img src="/img/2020-08-29-bad-resume/wa2.jpg" alt=""></a></li></ul></li></ul><p>&nbsp;</p><ul><li><code>个人优势：熟悉spring框架，熟悉springmvc框架，熟悉oracle数据库，熟悉mybatis框架……（中间内容略）……写不下了……</code>（备注：此人直接使用BOSS直聘生成的电子简历）<ul><li><strong>点评：</strong>你太优秀，我们公司装不下了……</li></ul></li></ul><p>&nbsp;</p><ul><li><code>个人爱好：唱歌、跑步、篮球</code><ul><li><strong>点评：</strong>全民制作人们大家好，我是练习时长两年半的个人练习生蔡徐坤，喜欢唱、跳、rap、篮球，music……（鸡你太美～）<img src="/img/2020-08-29-bad-resume/chickenyoubeautiful.jpg" alt="鸡你太美"> 不建议写个人爱好，除非目标公司喜欢团建活动，而且你的爱好恰好可以与团建匹配。</li></ul></li></ul><p>&nbsp;</p><ul><li><code>证书奖项：XX学院社团活动积极分子、XX学院三等奖学金、计算机二级证书</code><ul><li><strong>点评：</strong>不要列举含金量比较低的奖项，也不要列举985/211学校中多数人都能拿到手的证书。（例外情况：如果大学拿过ACM区域赛等与软件工作相关，而且含金量较高的奖项，写在简历上可以加分）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>热爱生活，不接受加班</code><ul><li><strong>点评：</strong>我也热爱生活，但是为了守护我来之不易的幸福生活，我不接受你。（你以为我们愿意安排加班吗？）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>外包勿扰</code><ul><li><strong>点评：</strong>我们这些使唤外包的甲方大爷们浪费您宝贵的时间了，请谅解。（这类事情请提前调查好，或者先向公司确认，然后再决定是否投简历。不要把这种字眼写到简历里）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>个人简历：https://xxxx.github.io</code><ul><li><strong>点评：</strong><br>结局一：网站打不开，没有简历，Pass；<br>结局二：在网络上自我<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU0JUJBJUJBJUU4JTgyJTg5JUU2JTkwJTlDJUU3JUI0JUEy">出道<i class="fa fa-external-link-alt"></i></span>，工作还没找上门，却遭到了各类骚扰。<br>（虽然直接扔网址虽然是一种很装X的投递方法，但是GitHub Pages在中国访问不正常，而且有些公司不能直接上外网，看不了，所以该写的内容还得写）</li></ul></li></ul><p>&nbsp;</p><ul><li>（中英文双语简历）<code>20XX.X-20XX.X  XXX System  Android Development</code>、<code>20XX.X-20XX.X  XXX System  Background Development</code>、<code>analysed the whole process from points generation to points usage, designed relevant pages; finished pages development of xxx, xxx, xxx; optimized login process together with credits, database accessing and data updating</code><ul><li><strong>点评：</strong>Your English is too simple, sometimes naïve!（除非应聘外企，否则不要写英文简历。写英语时请使用地道的英语，不要用Chinglish）</li><li>顺便帮他纠正一下英语表达：<code>Android developer</code>、<code>backend developer</code>、<code>Analyzed the whole process from point production to point consumption and developed relevant pages; Developed pages of xxx, xxx, xxx; Improved the login program by optimizing database queries.</code>（最后一条，中英原文都看不懂，只好按自己理解编一个说法了）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>校学生会干部</code>、<code>校XX社团主席</code><ul><li><strong>点评：</strong>所以想证明自己虽然开发能力不行，但是可以陪用户喝酒？（都工作几年了，你觉得大学时候的事情还能用来证明工作能力吗）</li></ul></li></ul><p>&nbsp;</p><h1 id="谦虚是一种美德"><a href="#谦虚是一种美德" class="headerlink" title="谦虚是一种美德"></a>谦虚是一种美德</h1><ul><li>个人能力之一：<img src="/img/2020-08-29-bad-resume/modest.png" alt=""><ul><li><strong>点评：</strong>在简历方面，谦虚不会使人进步。（不要自曝缺点）</li></ul></li></ul><p>&nbsp;</p><ul><li>个人能力之二：<img src="/img/2020-08-29-bad-resume/modest-2.png" alt=""><ul><li><strong>点评：</strong>　　　　　　　　　　　　　　　　　　　　（　　　　　　　　　　　）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>学历：高中（本科为XXXX大学XX专业，因挂科较多，加上大四时家中发生了各类事情，未能拿到毕业证、学位证）</code><ul><li><strong>点评：</strong>学历是硬条件，没有大学毕业证，你一定找不到工作，但是，你还可以用自主创业的方法来延迟失业。正如那句话所说：当上帝关了这扇门，一定会为你打开另一扇窗，只不过窗户在十八楼。祝你好运！（没有本科学历，一般公司无法办入职手续。这种情况下只能去不正规的小公司，或者用创业的方式来延迟失业）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>自学成才</code><ul><li><strong>点评：</strong>失败了，知道因为啥失败吗？这一个厨师不看菜谱，看上兵法了，撤！（在招聘者眼中，无论实际情况如何，强调自学成才=学得不精）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>技能：Java [============........] 60%</code> 或 <code>技能：Java [============........] 熟悉</code><ul><li><strong>点评：</strong>进度条到100%之后会发生什么事情，报错吗？（不要用进度条表示掌握程度，因为你不可能界定100%的范围）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>我不仅学会了MySQL数据库，而且对Spring Boot框架有了一定的了解，同时意识到团队协作是项目成功不可或缺的部分</code><ul><li><strong>点评：</strong>请先补交你们学校的学费，拿到毕业证书，然后再来找工作。（企业是招人干活的，不是培训班，所以工作经历应该是讲自己完成了什么工作，解决了什么问题，给企业带来了什么成果，而不是自己学会了什么）</li></ul></li></ul><p>&nbsp;</p><ul><li>愿意学习先进的技术<ul><li><strong>点评：</strong>愿意学习 = 还没有实际工作能力，先想法混到一份工作，然后走一步看一步吧。（道理同上）</li></ul></li></ul><p>&nbsp;</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ul><li><code>政治面貌：中共党员</code><ul><li><strong>点评：</strong>找到一个可以让你996的正当理由了——不忘初心，牢记使命！（除非有特殊要求，软件开发工作中没人在乎你属于哪个党派。国企或事业单位除外）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>Blog：http://60.205.xxx.xxx:8090/</code>、<code>Blog：https://www.jianshu.com/u/202cb962ac59075b964</code><ul><li><strong>点评：</strong>小隐隐于野，中隐隐于市，大隐隐于朝……（虽然没毛病，也不会因此认为你怎么样，不过这种URL真的不太好看）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>工作经历：20XX.X-20XX.X  XXXX公司  Java开发工程师  15000元/月</code><ul><li><strong>点评：</strong>无论是起始工资、当前工资，还是预期工资，不要透露任何与工资有关系的情报，这对你未来谈薪非常不利。特别是今年，疫情导致求职者找工作更加困难，地位更低，谈薪资时招聘方可以把你的收入压得更狠。</li></ul></li></ul><p>&nbsp;</p><ul><li>南京岗位：<code>期望工作地点：南宁</code>、<code>期望工作地点：南昌</code><ul><li><strong>点评：</strong>要不要去南通、南平、南阳或南充工作？（请看清工作地点之后再投简历。有些工作的工作性质特殊，需要驻场或出差，工作地点与公司地点不一致，这种情况下建议主动询问工作地点，然后再投简历）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>期望薪资：1.5~2k/月</code>、<code>期望薪资：15~20元/年</code><ul><li><strong>点评：</strong>你还年轻，不要作贱自己！（不要写薪资，如果非要写，别把货币单位写错）</li></ul></li></ul><p>&nbsp;</p><ul><li>锟斤拷锟斤拷锟斤拷：<img src="/img/2020-08-29-bad-resume/luanma.png" alt=""><ul><li><strong>点评：</strong>锟斤拷锟斤拷锟斤拷锟MacBook斤拷锟斤拷锟斤拷（锟斤拷锟斤拷锟斤Word拷锟斤拷PDF锟斤拷拷拷）</li></ul></li></ul><p>&nbsp;</p><ul><li><code>由于XX部门与XX部门互相推诿，导致实际交付效果不理想</code><ul><li><strong>点评：</strong>你所写的负面内容已经成为本文中的一个负面案例，以便让其他人吸取教训。（不要写负面内容，就算要证明自己能够解决问题，也不要用负面语言来表达）</li><li>实践证明，经常散发消极情绪的人会对团队成员工作热情与稳定性造成负面影响，间接地危害项目交付质量，因此要设法改造或踢掉此类成员。</li></ul></li></ul><p>&nbsp;</p><ul><li><code>通过请求方法取得用户输入参数，在数据库查询用户XXX信息，存入PO对象。检查对象中的XXX字段，如果为0，说明无业务办理权限，程序应返回“没有操作权限”的错误提示；否则开启事务，生成XX信息，并更改XX表，将XX数据修改为XX，操作完成后提交事务，并返回“操作成功”信息，结束流程。</code><ul><li><strong>点评：</strong>请去培训班工作，不仅能挣到钱，还能帮助更多人失业，多好！（不要讲实现细节，容易泄漏商业机密，别人也没有兴趣看，而且会被认为简历写不出什么有含金量的事情所以只好凑数。像上面这个，直接说<code>用XX框架开发XX模块</code>就够了）</li></ul></li></ul><h1 id="本系列文章"><a href="#本系列文章" class="headerlink" title="本系列文章"></a>本系列文章</h1><ul><li><a href="/2020/08/16/resume-filtering/">作为招聘者，筛选简历的关注点</a></li><li><a href="/2020/08/20/resume-improvement/">来自招聘者的建议——如何优化简历</a></li><li><strong>迷惑简历大赏</strong></li><li>关于面试问题设计</li><li>面试禁忌</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文收录个人在筛选简历时看到的令人哭笑不得的内容。在博君一笑的同时，希望也能引以为戒，不要因本可以避免的低级错误耽误前途。&lt;/p&gt;
&lt;p&gt;为保护当事人隐私，本文会用文字转述简历内容，或者对简历内容进行处理后再截图。本文无意针对任何人，如果你发现简历内容是你写的，请保持低调并吸取教训，不要回怼，以免贻笑大方。不过本文也不全是反面案例，有些内容虽然不应该写到简历中，但是写了也无妨。&lt;/p&gt;</summary>
    
    
    
    <category term="工作日记" scheme="https://plusnan.me/categories/%E5%B7%A5%E4%BD%9C%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="招聘" scheme="https://plusnan.me/tags/%E6%8B%9B%E8%81%98/"/>
    
    <category term="简历" scheme="https://plusnan.me/tags/%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>社招招聘日记（二）：来自招聘者的建议——如何优化简历</title>
    <link href="https://plusnan.me/2020/08/20/resume-improvement/"/>
    <id>https://plusnan.me/2020/08/20/resume-improvement/</id>
    <published>2020-08-19T16:00:00.000Z</published>
    <updated>2020-09-16T09:30:40.608Z</updated>
    
    <content type="html"><![CDATA[<p>“是金子总会发光”不适用于招聘。为了提高简历通过率，你需要针对招聘者关心的东西来优化你的简历。</p><a id="more"></a><h1 id="优化整体格式"><a href="#优化整体格式" class="headerlink" title="优化整体格式"></a>优化整体格式</h1><p>不要忽略排版细节！收到简历时，良好的排版会给人留下良好的第一印象，而差劣的排版会让人怀疑此人是否能认真工作。</p><p>你的简历请满足以下要求：</p><ol><li>内容、版式简洁明了；</li><li>排版清晰，逻辑顺畅；</li><li>字体字号整齐，标点符号规范；</li><li>正确拼写英文单词，例如<code>MySQL</code>而非<code>mysql</code>、<code>Mysql</code>或<code>MySql</code>。</li></ol><p>请避免套用网上模板：下载量越多，说明用的人越多，也越容易让HR审美疲劳（甚至会让人觉得你参加过培训班）。“keep simple and naive”的设计也是可以的，例如只有标题加下划线、正文加项目符号、内容保持对齐三种样式，足够了。</p><p>以下问题会导致你直接出局：</p><ol><li>错别字和语病——中国话都写不好，说明你工作不认真；</li><li>篇幅过长，例如写了五六页内容——说明你表达能力和总结提炼的能力差；</li><li>页面版式太花哨，或者有背景色/背景图，让人难以阅读重要内容——面试时简历是要打印出来的；</li><li>使用了乱七八糟的文件格式，无法打开，或者打开之后乱码——浪费HR时间；</li></ol><p>投递简历时请将文件转为PDF格式，因为Word格式容易导致排版错乱。</p><h1 id="梳理项目经历"><a href="#梳理项目经历" class="headerlink" title="梳理项目经历"></a>梳理项目经历</h1><p>工作与项目经历是招聘者最关心的内容。通过项目经历，招聘者可以了解到：</p><ul><li>你的语言表达能力、总结提练能力如何？</li><li>有没有做过大型项目？</li><li>是否熟悉大型系统会遇到的问题（数据量大、并发量高，等等）？</li><li>有没有经历过完整、规范的工作流程？</li><li>独立完成，还是团队协作完成？</li><li>在项目中是凑数、普通成员，还是核心成员或救火队员？</li><li>曾经参与过哪些行业，是否与本公司一致？</li><li>实践过哪些技术栈（Vue/React，Spring Boot……）？只是肤浅地增删改查，还是深入研究、优化完善？</li><li>只做过开发工作，还是做过管理工作，或是多面手？</li><li>有没有个人思考？</li><li>……</li></ul><h2 id="反例与分析"><a href="#反例与分析" class="headerlink" title="反例与分析"></a>反例与分析</h2><p>先看几个非常典型的反面案例：</p><h3 id="案例一"><a href="#案例一" class="headerlink" title="案例一"></a>案例一</h3><ul><li>项目名称：XXX项目</li><li>项目简介：XXX……</li><li>工作职责：<ol><li>参与系统需求、设计</li><li>开发了XX模块、XX模块</li><li>系统部署与维护</li></ol></li></ul><p>分析：没有体现技术栈，我们无法得知你用了什么语言和技术，也无法得知你的参与程度，只能认为你在凑数。</p><h3 id="案例二"><a href="#案例二" class="headerlink" title="案例二"></a>案例二</h3><ul><li>项目名称：XXX项目</li><li>项目简介：XXX……</li><li>工作职责：<ol><li>参与系统需求、设计</li><li>开发了XX模块、XX模块，使用了Spring Boot+MyBatis+Redis+Kafka+XXXXXX</li><li>系统部署与维护，系统部署在Linux服务器，使用Tomcat+MySQL+XXX</li></ol></li></ul><p>分析：虽然介绍了技术栈，但只是简单地堆砌单词，没有结合项目具体工作描述，无法体现出你是如何利用这些技术的。</p><h3 id="案例三"><a href="#案例三" class="headerlink" title="案例三"></a>案例三</h3><ul><li>项目名称：XXX项目</li><li>项目简介：XXX……</li></ul><p>分析：只介绍了项目，没写自己做什么事情，怎么认定你有项目经验？（这就好比我把QQ、微信、支付宝等产品介绍写到简历中，我就是参与过大型互联网产品开发的人了）</p><h3 id="案例四"><a href="#案例四" class="headerlink" title="案例四"></a>案例四</h3><ul><li>项目名称：XXX项目</li><li>项目简介：XXX……</li><li>工作内容：<ul><li>针对XX功能进行判断：在A情况下，系统采取a措施，处理b数据，做出c操作，实现d效果；在E情况下，采用f方法，提示用户录入g数据，根据h规则与i规则进行j处理，得出k结果。</li></ul></li></ul><p>分析：请专注于技术，不要钻到业务细节中，一是招聘者不会关心具体业务（我们用不到你们的业务），二是你会泄露你们公司的商业机密。</p><h2 id="整理工作内容"><a href="#整理工作内容" class="headerlink" title="整理工作内容"></a>整理工作内容</h2><p>通过上面几个反例，你需要意识到合适的项目经历应该包含以下内容：</p><ul><li>项目名称</li><li>项目背景</li><li>技术栈</li><li>工作职责（说明不是凑数的）</li><li>个人亮点（说明不是应付工作的）</li></ul><h3 id="项目背景"><a href="#项目背景" class="headerlink" title="项目背景"></a>项目背景</h3><p>用简洁的语言交待项目背景：</p><ul><li>项目或产品大概是做什么事情的；</li><li>项目的意义或优势，例如政府项目可以是提高了信息化管理水平；</li><li>简要交待技术栈，用了什么框架，用了什么技术。</li></ul><p>目的是让他人对你项目的价值、技术有个基本的了解。</p><h3 id="工作职责"><a href="#工作职责" class="headerlink" title="工作职责"></a>工作职责</h3><p>简单讲一下自己在团队中的主要职责（例如开发人员），让招聘者知道你在项目中不是吃干饭的。当然，如果项目经历充实，不写角色也无妨。</p><h3 id="提炼亮点"><a href="#提炼亮点" class="headerlink" title="提炼亮点"></a>提炼亮点</h3><p>要想说明工作能力强，就要拿出实际的证据，例如解决了项目问题，或者干出了业绩，拿亮点闪瞎招聘者的眼睛。</p><p>工作内容应当尽量遵循“STAR法则”（情境、任务、行动、结果）来写，让人知道你不是机械地执行命令，而是有针对性地解决了实际问题：</p><ul><li>情境：需要解决什么问题，或者遇到了什么事情</li><li>任务：你的目标是什么</li><li>行动：你做了什么事情</li><li>结果：最后达到了什么效果。如果能量化，那么务必提供一个有说服力的数字，例如系统响应时间从2s降低到200ms，或者承担了30%的开发工作。</li></ul><p>举两个典型例子：</p><ul><li><p>开发XX、XX模块</p><ul><li>分析：只有“行动”，没有背景和结果，也无法体现XX模块的重要性，会让人认为只做了一些基础的增删改查。</li><li>优化：<ul><li>使用XXX框架、XX技术 <em>（行动：使用了XX技术）</em>，开发XX、XX等<strong>核心功能</strong>模块 <em>（如果是核心功能，强调核心）</em></li><li>使用XXX框架、XX技术 <em>（行动：使用了XX技术）</em>，开发XX、XX等模块，开发工作量占全系统的30%。<em>（如果不是核心功能，强调工作量）</em></li></ul></li></ul></li><li><p>SQL性能优化</p><ul><li>分析：优化怎么做的？有效果吗？</li><li>优化：<ul><li>通过慢查询日志、执行计划识别分析执行效率较低的SQL <em>（行动之一：通过两种方法发现问题）</em>，根据具体情况改写SQL，调整索引 <em>（行动之二：通过改SQL和建索引解决了这个问题）</em>，提高数据库查询效率，查询时间从平均xx降低到xx <em>（情境和结果：系统性能低，经过优化，系统性能提高）</em>。</li></ul></li></ul></li></ul><p>除主要工作外，为了提高工作效率而搞研究也是能接受的：</p><ul><li><p>编写Python脚本 <em>（行动：写Python脚本）</em>实现XX、XX等任务的自动化 <em>（目标：自动化）</em>，大幅提高团队工作效率，有效地避免了内容遗漏、操作失误等问题 <em>（情境和结果：解决了人工操作效率低、容易出错的问题）</em>。</p></li><li><p>在开发过程中指导其他员工，并进行了X次技术分享活动，主题包括XX、XX等。<em>（）</em></p></li></ul><p>如果是一个参与程度不高的项目，提练不出什么亮点，那么建议隐藏掉，只谈大项目。<!-- TODO 加分：系统架构、整体认知；带团队经历 ；忌讳：学习了XXX；写不熟悉东西 --></p><h3 id="加分项"><a href="#加分项" class="headerlink" title="加分项"></a>加分项</h3><p>以下事情会从侧面证明你的工作能力，如果与你参与的项目匹配，请在简历上进行体现：</p><ul><li>成型产品：有成型产品，说明系统已经上线了。如果产品评价好，说明系统做得不错，不是糊弄的。</li><li>技术栈：大家都喜欢新技术。用过各类新技术的员工更受欢迎。</li><li>团队规模：小团队工作可以随意一些，而大团队工作不规范就会变成屎山。在大型团队中工作，阅历应该更丰富了。</li><li>合同额、开发周期：项目制公司的话，合同额和开发周期也能证明软件规模。做过大型项目，阅历和规范程度应该会比较高。</li><li>用户量：道理同上。</li><li>相同行业：就算技术差点，至少业务知识不是零蛋。</li></ul><h3 id="如果技术栈太老旧"><a href="#如果技术栈太老旧" class="headerlink" title="如果技术栈太老旧"></a>如果技术栈太老旧</h3><p>因为商业项目更加追求稳定，所以很多项目仍然用比较旧的技术栈，甚至还在使用JDK 5，这是正常现象。不必隐瞒具体技术：老旧技术用熟了，能够掌握基本原理，切换起来也容易。</p><p>很多公司希望员工进去就能干活。完全没碰过新技术的话，找工作会非常吃亏，所以建议在简历中体现自己特意学习过某些新技术（例如因XX技术较为落后，曾自学XXX并尝试用新技术实践项目功能，让HR觉得你比较上进），或者直接假装自己项目是用新技术开发的。但是，除了在简历提及以外，你必须要确实实践过，否则面试会穿帮。</p><h2 id="优化结果"><a href="#优化结果" class="headerlink" title="优化结果"></a>优化结果</h2><p>根据以上建议，简历优化结果如下：</p><ul><li>项目名称：XXX项目</li><li>项目简介：XXX，目前用户访问量已达XXX万。项目使用了XXX、YYY、ZZZ等技术。<em>（把项目使用到，但是你自己没有深入使用过的技术框架放到项目简介里，让招聘者了解你们项目大体的技术栈）</em></li><li>工作职责：主要负责前期需求调研、需求编写、系统设计，以及XX与XX模块开发工作。<em>（让人知道你的主要职责是开发人员，而不是测试、运维或者PPT岗位）</em></li><li>工作内容：<em>（此处专注于展示亮点）</em><ul><li>作为项目主要成员，使用XX框架开发XX模块，实现XX、XX、XX等核心功能。</li><li>使用XXX作为消息队列服务，实现后台数据推送功能。</li><li>在技术选型过程中，考虑到XX功能会存在瞬时高并发场景，选择XX框架进行处理。实际开发过程中，利用XX框架，将XX数据进行XX处理，并发能力xx%。</li><li>通过慢查询日志、执行计划识别分析执行效率较低的SQL，根据具体情况改写SQL，调整索引，提高数据库查询效率，查询时间从平均xx降低到xx。</li><li>与其他同事合作，对项目进行拆分和重构，实现基于XXX的持续集成和自动化部署。</li><li>编写Python脚本实现XX、XX等任务的自动化，大幅提高团队工作效率，有效地避免了内容遗漏、操作失误等问题。</li><li>在开发过程中指导其他员工，并进行了X次技术分享活动，主题包括XX、XX等。</li></ul></li></ul><p>这样写，就算仍然找不到工作，至少会有更多公司通知你参加面试了。</p><h1 id="个人技能优化"><a href="#个人技能优化" class="headerlink" title="个人技能优化"></a>个人技能优化</h1><p>通常简历上还会写着“熟悉XXX”、“了解XXX”。这个地方也是有优化空间的：</p><ol><li>注意招聘中的招聘要求（JD），“熟悉”、“了解”的内容尽量贴近JD。碰到不太懂技术、会用Ctrl+F来检查单词的HR时不吃亏。</li><li>梳理你“熟悉”、“了解”的东西，确定这些技能的学习成本。尽量少写那些只需要几分钟或者一两天就能掌握的东西，多写一些需要时间积累才能熟练掌握的东西。</li><li>不要简单地“熟悉XX”、“了解XX”。熟悉了解之后要再写点东西，例如“熟悉JavaScript，掌握原型链、Promise等原理”，这样才能说明你真熟悉JavaScript。</li><li>如果你英语好，或者会翻墙（注意不要明说，以免因言获罪），或者有一些软件开发方面的个人爱好，也可以稍微提及。</li></ol><h1 id="了解其他加分项与减分项"><a href="#了解其他加分项与减分项" class="headerlink" title="了解其他加分项与减分项"></a>了解其他加分项与减分项</h1><h2 id="加分项-1"><a href="#加分项-1" class="headerlink" title="加分项"></a>加分项</h2><p>如果工作时间不长，大学英语六级过了，或者拿过ACM区域赛之类等含金量较高的奖项，请把它们写到简历中。</p><p>如果以下账号有实际内容，务必写到简历中：</p><ul><li>GitHub：例如参与过开源项目，提交过代码，或者自己的GitHub仓库被打了很多Star，我们会认为你有一定的能力。</li><li>个人博客：如果个人博客活跃，而且有一些写得好的原创文章，我们就知道你对技术有所思开，擅长总结。</li><li>技术论坛：例如活跃于Stack Overflow，我们会认为你对技术掌握比较好，有解决问题能力。</li></ul><p>注意：如果你在简历中写了社交媒体链接，那么我们一定会进入这些网站来核实真伪。假如你的GitHub或博客中缺乏原创内容，只有些helloworld级的练习文件，或者都是些转载或fork内容，或者在找工作时候才胡乱凑些东西，那么我们会认为你是在装X，然后把你的简历给Pass掉。</p><h2 id="减分项"><a href="#减分项" class="headerlink" title="减分项"></a>减分项</h2><ul><li>培训班经历：由于培训班培训内容经常与行业实际脱节，所以很多公司不喜欢招参加过培训班的人，甚至会直接将有培训班经历的人给Pass掉。实际工作中用到的技术知识基本上都是“实践型”知识，照着网上的培训教程就能学会基本用法，实在没必要去培训班。</li><li>外包公司经历：外包公司员工经常被安排做一些初级工作，接触不到核心功能与技术。如果简历中体现不出你有所思考，那么我们只能当作民工来使唤了。</li><li>小公司/非软件公司经历：小公司，或主业不是软件的公司（例如电子商务），通常缺乏标准开发规范，其中的开发者可能也缺乏规范意识。</li></ul><h1 id="最后的注意事项"><a href="#最后的注意事项" class="headerlink" title="最后的注意事项"></a>最后的注意事项</h1><p>写完之后务必从头到尾认真检查几遍。如果有信得过的哥们，可以再让他们帮忙检查一下简历。</p><p>只要你能把事情说得像自己做过一样，那么项目经历就可以稍微吹吹牛，毕竟我们不可能去你们公司系统里核实代码提交记录。但是，简历的内容会被拿来当作面试的话题，因此要提前想好实施细节（甚至包括版本号），而且不懂的东西不要乱编，以免被打脸。</p><h1 id="本系列文章"><a href="#本系列文章" class="headerlink" title="本系列文章"></a>本系列文章</h1><ul><li><a href="/2020/08/16/resume-filtering/">作为招聘者，筛选简历的关注点</a></li><li><strong>来自招聘者的建议——如何优化简历</strong></li><li><a href="/2020/08/29/bad-resume/">迷惑简历大赏</a></li><li>关于面试问题设计</li><li>面试禁忌</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;“是金子总会发光”不适用于招聘。为了提高简历通过率，你需要针对招聘者关心的东西来优化你的简历。&lt;/p&gt;</summary>
    
    
    
    <category term="工作日记" scheme="https://plusnan.me/categories/%E5%B7%A5%E4%BD%9C%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="招聘" scheme="https://plusnan.me/tags/%E6%8B%9B%E8%81%98/"/>
    
    <category term="简历" scheme="https://plusnan.me/tags/%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>社招招聘日记（一）：作为招聘者，筛选简历的关注点</title>
    <link href="https://plusnan.me/2020/08/16/resume-filtering/"/>
    <id>https://plusnan.me/2020/08/16/resume-filtering/</id>
    <published>2020-08-15T16:00:00.000Z</published>
    <updated>2020-09-20T13:23:13.920Z</updated>
    
    <content type="html"><![CDATA[<p>因公司业务发展，需要招聘一些初、中级Java开发人员。本系列文章将面向求职者，以招聘者的视角来进行讨论，希望能为疫情期间苦于找工作的求职者带来一些启发。</p><p>由于不同公司情况不同，有着急的，有不着急的，有舍得花钱的，有比周扒皮还抠门的，因此本系列文章意见仅供参考。</p><a id="more"></a><h1 id="招聘流程和分工"><a href="#招聘流程和分工" class="headerlink" title="招聘流程和分工"></a>招聘流程和分工</h1><p>正常情况下，招聘的流程如下：</p><ol><li>提出招聘需求，分配招聘指标</li><li>发布招聘广告、收简历等事务性工作</li><li>简历筛选</li><li>组织笔试、面试：很多单位不安排笔试，但一定会安排面试。有些单位还会组织多轮面试</li><li>发放Offer、背景调查、入职手续等事务性工作</li></ol><p>其中，发布招聘信息、筛选简历可能有以下几种情况：</p><ul><li>主流情况：人力资源部门发布信息、收取简历，人力资源初步筛选，然后将看起来合适的移交用人部门判断。用人单位再进一步筛选简历。</li><li>个别情况：用人部门在取得公司授权之后，自行发布招聘信息，收取简历、组织面试，人力部门辅助。考核通过后由人力部门办理背调、入职等手续。小公司缺乏人力部门，也会选择这样做。</li></ul><p>因此，收你简历并与你联系的，通常是代收者。</p><h1 id="同样的JD（Job-Description），不同的目的"><a href="#同样的JD（Job-Description），不同的目的" class="headerlink" title="同样的JD（Job Description），不同的目的"></a>同样的JD（Job Description），不同的目的</h1><p>在招聘网站上，各公司的JD（Job Description，岗位介绍）看起来都差不多，但关注点是不同的。</p><p>为了节约成本，公司会倾向于内部调配人员，实在无法调配才会去招聘，例如：</p><ul><li>业务扩张<ul><li>组建新团队</li><li>项目实施缺人，需要拉人干活</li></ul></li><li>有人辞职，需要从外面拉个接盘侠</li><li>需要特殊技能</li></ul><p>根据业务性质不同，对技能深度要求会有所不同。例如：</p><ul><li>小型政府项目，可能用户数不大，也可以要求业主堆硬件，出问题时用户也能有所容忍，这样对开发人员能力要求就不会特别高，能熟练使用一些东西就行。</li><li>互联网产品，用户数很大，一个微小的问题可能就会引发系统不稳定，而且用户无法容忍系统宕机，这样对开发人员基础知识要求就比较高，以免挖坑。</li><li>外包公司，员工只会被安排做些低级工作，对员工个人来说也没有前途，所以公司只要找个省钱能干的年轻人就行。</li></ul><p>对技能广度要求也有差异，例如：</p><ul><li>新公司、新团队或者并非专门做软件的公司会要一些复合型人才，例如“全栈工程师”，各类工作都要懂一些，这样可以少招人。</li><li>大型团队内部分工明确，只需要一些“螺丝钉”，最典型的就是专门的前端、后端、测试、DBA、运维等。</li></ul><p>在投递简历之前，可以通过各种途径了解一下公司，从而针对性地调整简历内容。</p><h1 id="用正确方法投递简历，我们才有机会看到你的简历"><a href="#用正确方法投递简历，我们才有机会看到你的简历" class="headerlink" title="用正确方法投递简历，我们才有机会看到你的简历"></a>用正确方法投递简历，我们才有机会看到你的简历</h1><p>首先，你需要用正确的方法投递简历。HR的邮箱总是堆满垃圾，如果投递方法错误，你的简历连被看的机会都没有，更不用说筛选和面试了。</p><h2 id="邮件投递"><a href="#邮件投递" class="headerlink" title="邮件投递"></a>邮件投递</h2><p>请注意邮件标题！邮箱里面总是堆满垃圾，如果你的邮件标题不能明显看出是应聘，我们可能会错过你的邮件。</p><p>建议邮件标题采用“【应聘】姓名-岗位名-3年工作经验”之类的格式，让我们一眼就能看出你是在应聘，而且能够一眼看出你的基本情况。附件文件名也采用类似格式，方便我们保存和查找。</p><p>发送邮件之前，请检查邮件发件人姓名，不要使用乱七八糟的网名，并且确认邮件中确实包含了简历附件。如果你害怕邮件内容有误，你可以先给自己发一封邮件，检查邮件内容是否正确，然后再发给HR。</p><p>邮件正文实际上是无所谓的。收到邮件，我们至少要看一下简历内容，不会单纯因为你没写正文或者在正文中又写了一遍简历内容就把你Pass掉。</p><h2 id="BOSS直聘-拉勾网"><a href="#BOSS直聘-拉勾网" class="headerlink" title="BOSS直聘 / 拉勾网"></a>BOSS直聘 / 拉勾网</h2><p>BOSS直聘 / 拉勾网的特殊之处在于你可以提前与HR（当然不是BOSS）进行一些简单的交流。建议维护一份在线简历，让招聘者能够简单地了解你的基本情况，然后决定收简历。</p><p>招聘经常是人力资源部门的人来做，所以请避免问工作细节，因为他们也不见得知道。</p><h2 id="内推"><a href="#内推" class="headerlink" title="内推"></a>内推</h2><p>如果你为人靠谱，而且有熟人，可以考虑走内推去他们的公司，省去一切麻烦事情。</p><p>注意，即便是内推，甚至内定入职，简历也要好好写，否则的话，轻则给人留下负面印象，重则容易失去面试和入职机会（到时你还有何面目去见替你内推的人？）</p><h2 id="简历文件格式"><a href="#简历文件格式" class="headerlink" title="简历文件格式"></a>简历文件格式</h2><p>请使用PDF格式！不要使用其他文件格式！</p><p>很多时候HR会用手机来登录邮箱或BOSS直聘，然后通过微信或QQ向同事传送文件。PDF格式不需要装插件，还可以保证样式稳定，而Word文件经常排版错乱，这会给我们留下极坏的第一印象。</p><h1 id="解读简历中的信息"><a href="#解读简历中的信息" class="headerlink" title="解读简历中的信息"></a>解读简历中的信息</h1><p>牢记：<strong>简历的目的是让招聘者认为你能够胜任他们的工作</strong>。简历内容务必围绕这个主题展开。</p><p>如果你的简历质量不高，缺乏有效信息，那么你就容易被Pass掉——连个人简历都写不好，如何保证以后能高质量地完成工作？</p><p>收到简历后，我们会在十几秒钟之内扫描你的简历。挖掘到有效信息，才会仔细阅读并通知你参加面试。</p><h2 id="页面排版"><a href="#页面排版" class="headerlink" title="页面排版"></a>页面排版</h2><p>简历模板请保持整体主题整洁、内容条理清晰、风格样式统一、字体字号得当。不要层次不清，也不要参差不齐，否则会给人留下很坏的印象，例如：</p><p><img src="/img/2020-08-29-bad-resume/mixed-1.png" alt="混合样式"></p><p>编程是一项注重细节的工作，而这一段话中，既有半角标点<span style="display:none;">x</span>,又有全角标点<span style="display:none;">x</span>;既 有 留 空 格，<span style="letter-spacing: -0.2em;">又有紧贴的数字序号</span>；既使用<span style="font-family:'Times New Roman',Times,serif;">Times New Roman</span>，<span style="font-family:'Songti SC', STSong, NSimSun, SimSun, serif;">又使用宋体</span>；<big>有些字大</big>，<small>有些字小</small>。这样会让人感觉此人“不拘小节”，爱给同事挖坑。</p><p>另外：</p><ul><li>页面篇幅不要太长，两三页就好。社招项目经验多，只写一页不见得能装得下，不用强求。</li><li>不要用填表式模板，不好看。</li><li>建议自己设计模板，不要用网上被用滥的模板。</li><li>简历请保持简约风格，不要太花哨，我们关心的是你的简历内容。</li></ul><h2 id="个人基本信息"><a href="#个人基本信息" class="headerlink" title="个人基本信息"></a>个人基本信息</h2><p>请写清姓名、电话、邮箱这三项内容，并保证联系方式畅通。电话用来向你发通知，邮箱用来发Offer，如果这两种联系方式都联系不上，对不起，你的工作机会没了。</p><p>其他信息例如籍贯、政治面貌、民族等，没有特殊要求的话不用写，我们不关心这些事情。如果应聘国企或事业单位，而且是党员或预备党员的话，可以把党员身份写上。</p><p>如果有软件开发相关的社交媒体账号，例如GitHub账号、CSDN账号、个人博客，而且有一定的成果，那么请务必写到简历中，这会成为一个重大加分项。但是，如果没有，千万别拿这些东西装X——我们会核实你的账号，发现没有什么实质内容的话，例如只有helloworld，或者只是些fork仓库或转载文章，那么社交媒体账号会成为扣分项。</p><h2 id="照片"><a href="#照片" class="headerlink" title="照片"></a>照片</h2><p>建议不要放照片，因为脸不是判断你适不适合工作的因素。</p><p>如果放照片，请放一张好看的照片。假如照片很难看，或者PS/美颜痕迹明显，那么你的第一印象就会崩坏，甚至会直接把我们“劝退”。</p><h2 id="年龄"><a href="#年龄" class="headerlink" title="年龄"></a>年龄</h2><p>注意：“不限年龄”或者不提年龄限制，不代表没有年龄限制。为规避法律风险，避免被举报就业歧视，招聘者往往会采用更加隐蔽的手段来进行限制，例如把年龄不合适的人直接筛掉。</p><p>软件行业是青春饭，30岁以下的年轻人，人傻、肯干、学习能力强，可以少发工资，而且简单工作的话年轻人稍微学习学习就能掌握，所以初中级岗位倾向于招年轻人。为了省钱，很多公司还会设法逼走年龄较大的员工，也就是所谓的“35岁危机”。</p><p>如果年龄超过30还想投递简历，除非应聘高级岗位，或者有稀缺技能，或者项目/行业经验非常出色，而且愿意少挣钱，否则没戏。在初中级岗位中，年长者比不过年轻人的。如果已经有10年或以上经验，建议找熟人内推，或者让猎头挖，不要再用普通招聘形式找工作。</p><h2 id="性别"><a href="#性别" class="headerlink" title="性别"></a>性别</h2><p>注意：“不招女性”也是就业歧视行为，而且明显违反劳动法，只要去劳动仲裁挥一挥女拳，公司必输。因此有些招聘者不会直说“不招女性”，而是把女性投递的简历直接筛掉，避免引来女拳麻烦。</p><p>因为人们对女性有着刻板印象，加上害怕女性怀孕（已经有孩子？那还要二胎吗？）、休产假影响团队整体工作，女性找工作本身就吃亏，所以要更加注意简历中项目经验的优化。</p><h2 id="教育信息"><a href="#教育信息" class="headerlink" title="教育信息"></a>教育信息</h2><p>请正确填写教育信息。学历从大专/大本开始往上写。虽然你学过的大学知识已经还给了老师，但是你的两个证（毕业证、学位证）还是有用的，不要弄丢。</p><h3 id="学历"><a href="#学历" class="headerlink" title="学历"></a>学历</h3><p>学历歧视也是存在的。通常情况下，不仅只接受本科生或研究生（博士生年龄太大，除非算法岗位，否则对应聘者和招聘者来说都不划算），而且只接受重点大学毕业生。本科还得是全日制的，因为光是本科生就够HR忍受的了。尽管大专、专升本或非全日制学生也有工作能力强都，但通常会被无视，而且应聘要求不会说得太明确，免得被举报。</p><p>从统计学意义上讲，学生个人素质通常是“重点大学&gt;普通大学&gt;三本专科”，从个人言谈举止方面也能看出比较明显的区别。当然，这只是一般规律：我们也认识到，即便是二本、三本、专科学校的毕业生，也能成为公司的业务或技术骨干，而985学校毕业生也有工作不认真、爱给同事挖坑的。所以，我们会考虑学校，但不会把学校当作唯一考察因素。</p><p>我们招聘时不太考虑专业，无论是否计算机软件专业都可以考虑。有些学生虽然非计算机专业毕业，但他们出于个人兴趣爱好选择了软件行业，这类人的个人能力往往比科班出身的人还强。但是，由于非计算机专业学生可能只学过写代码，底子较差，工程意识薄弱，在面试时要注意考察数据结构与算法之类的基础知识。相对的，这类人找工作之前也要补一下相关知识。</p><p>最后学历千万不要隐瞒或造假，如果背景调查时发现实际学历与简历内容不一致，那么不好意思，拜拜。</p><h3 id="培训班"><a href="#培训班" class="headerlink" title="培训班"></a>培训班</h3><p>如果参加过社会培训班，建议调整一下工作的时间节点，把这段经历隐藏掉。如果只参加过社会培训班，没有实际工作经验，那么请节哀，因为有经验的招聘者能看出来你只去过培训班，没有实际工作经历。</p><p>由于培训班培训内容经常与行业实际脱节，而且我们认为花钱进补习班=学习能力差，所以我们不喜欢招参加过培训班的人，甚至会直接将有培训班经历的人给Pass掉。</p><h3 id="在校期间表现"><a href="#在校期间表现" class="headerlink" title="在校期间表现"></a>在校期间表现</h3><p>如果毕业时间不长，而且在大学期间拿过ACM区域赛、全国数学建模竞赛、美国数学建模比赛、飞思卡尔智能车大赛等含金量较高的奖项，或者已经通过英语六级与更高水平的考试，建议将其写到简历上。我们会认为这类人比较有潜力。</p><p>其他表现没必要往简历上写。走向社会，学校期间的表现都是浮云了。</p><h2 id="工作单位"><a href="#工作单位" class="headerlink" title="工作单位"></a>工作单位</h2><p>在工作单位方面，我们关心：</p><ul><li>工作单位与行业：大厂出身更容易吸引人，而外包公司或小公司出身会让人敬而远之。<ul><li>外包公司：因为外包员工经常做技术含量不高的低级工作，无论工作多少年都只能折算成一年工作经验，除非项目经验感人，否则倾向于Pass。</li><li>小公司、创业公司或非软件公司：在这类公司工作的人，找工作时可能也会遇到困难，因为他们通常没经历过正规开发流程，缺乏规范意识。在面试时要注意考察他们的质量把控情况。</li></ul></li><li>跳槽频率：假如你频繁跳槽，一年跑一次，甚至不到一年就跑路，你说我们还敢招你吗？<ul><li>如果是不可控原因被迫跳槽，例如公司倒闭，建议标在简历上，以免被当成频繁跑路。</li></ul></li></ul><p>工作时间不要有断档。如果确实因为脱产进修、裸辞在家或出门环游世界等原因产生了空档，请把空档时间和原因写出来，否则会认为你“逆水行舟，不进则退”。</p><p>社招简历，除非是大厂，实习经验写不写都行，因为我们都清楚实习生其实没做什么实际工作。请用最近一两年的项目经历来证明自己工作能力。</p><p>请不要编造或隐瞒工作单位。公司会在你入职前后对你进行背景调查，核实工作经历，有可疑之处的话就拒绝录用你，以免遇到法律问题。</p><p>另外建议投简历之前在知乎、看准网等平台对即将投递简历的公司进行背景调查，免得刚逃出一个坑，又在不经意间跳进下一个坑。</p><h2 id="项目信息"><a href="#项目信息" class="headerlink" title="项目信息"></a>项目信息</h2><p>项目信息是简历的重点。我们需要通过你的项目信息来判断你的阅历与能力，例如：</p><ul><li>你的语言表达能力、总结提练能力如何？</li><li>有没有做过大型项目？</li><li>是否熟悉大型系统会遇到的问题（数据量大、并发量高，等等）？</li><li>有没有经历过完整、规范的工作流程？</li><li>独立完成，还是团队协作完成？</li><li>在项目中是凑数、普通成员，还是核心成员或救火队员？</li><li>曾经参与过哪些行业，是否与本公司一致？</li><li>实践过哪些技术栈（Vue/React，Spring Boot……）？只是肤浅地增删改查，还是深入研究、优化完善？</li><li>只做过开发工作，还是做过管理工作，或是多面手？</li><li>有没有个人思考？</li><li>……</li></ul><p>对于每个项目，请在不泄露商业机密的前提下简短地介绍一下项目是做什么的，否则我们这些外人会看得一头雾水。然后不要忘记写一下自己在项目中的角色与工作内容，让我们意识到你不是来“打酱油”的。</p><p>很多系统，从本质上讲就是一大堆的增删改查，或者说是“数据库前端”，因此工作内容不要只写“开发XX模块”，否则会被认为只做了些微小的增删改查工作。工作内容应当尽量遵循“STAR法则”（情境、任务、行动、结果）来写，让人知道你不是机械地执行命令，而是有针对性地解决了实际问题：</p><ul><li>情境：需要解决什么问题，或者遇到了什么事情</li><li>任务：你的目标是什么</li><li>行动：你做了什么事情</li><li>结果：最后达到了什么效果。如果能量化，那么务必提供一个有说服力的数字，例如系统响应时间从2s降低到200ms。</li></ul><p>举一个具体例子：“开发XX功能，用到了Redis”，这没什么意思，因为很多项目都会用这个东西。但是，如果你改写“针对项目XX功能具有瞬时高并发特点，使用Redis实现XX，解决XX问题”，那么就会成为一个亮点。<a href="/2020/08/20/resume-improvement/">后续</a>会专门介绍如何优化你的项目经验。</p><p>项目经历也可以稍微吹吹牛。假如你读过其他人写的代码，熟悉了它的内部逻辑，换成自己写，大体上也能搞出来，那么你完全可以“剽窃”他人的劳动成果，将其据为己有，反正我们又不可能去核实真假。无论实际开发工作是不是你做的，只要面试时候能把事情说得像你做的一样就行。</p><p>项目经历请按从新到旧的顺序写。两三年的事情可能已经记不清，而且当时你工作可能还没那么熟练，所以我们面试官也没必要再深究了。</p><p>在实际招聘过程中，我们发现大部分人未能正确地拼写他们所用的技术框架或工具，例如把“Spring Boot”写成“springboot”、“Springboot”，把“MySQL”写成“mysql”、“Mysql”、“MySql”……虽然很多招聘者并不会在意这个事情，但是花点时间查阅正确拼写肯定没有坏处。至少我们会觉得你更加专业。</p><h2 id="薪资"><a href="#薪资" class="headerlink" title="薪资"></a>薪资</h2><p>建议不要写任何有关薪资的内容，包括起始薪资、当前薪资和期望薪资。</p><ul><li>如果薪资写得低了，那么谈薪资的时候，我们会尽量在你写的范围往下压，这样你会吃亏。</li><li>如果薪资写得高了，我们会直接Pass你的简历（工资开不起），或者在面试的时候为难你，以便找理由压低工资，同样会让你吃亏。</li></ul><p>非要写薪资的话，如何写期望薪资才合适呢？先通过同学、同事、招聘网站等渠道，调查一下所在城市的行业平均收入水平，再估计一下自己实际能力，然后写一个区间，而且最低值不要低于平均水平。例如期望值15k，你写成17～20k（当然你要有这个水平），谈判时没有暴露心理预期，而且谈判失利，只得到16k，那么你实际上还赚了一千块。</p><h2 id="个人技能"><a href="#个人技能" class="headerlink" title="个人技能"></a>个人技能</h2><p>个人技能是一个“锦上添花”的东西。项目经历这个“锦”不好看的话，个人技能这些“花”也不会起太大作用。这个东西你可以认为是给那些外行HR们进行关键词匹配用的，对内行人来说作用不大。</p><p>根据掌握程度分类，通常分为三种程度：精通、熟悉、了解。除非你真的精通到了底层的程度，否则请写成“熟悉”。不熟悉的东西请写成“了解”。因为这些东西很可能会成为面试问题，所以不要写自己不熟悉的东西，以免面试翻车。</p><p>技能有容易上手的，也有难于上手的。例如XML、JSON数据格式或Postman工具用几分钟就能学会，而Linux系统操作技能需要花一些时间来积累，所以说自己熟悉JSON就没什么实际意义，而说自己熟悉Linux就会高人半等。尽量不要写那类容易上手的东西，没有意义，写多了还会让人找不到你的特长，结果只能是减分。</p><p>不要简单地“熟悉XX”、“了解XX”就结束了，后面要再写点东西，例如“熟悉JavaScript，熟悉原型链、Promise等原理”，这样才能说明你真熟悉JavaScript。另外个人技能不用局限于具体的工具或框架，像英语水平好、热爱研究开源软件、使用Google搜索这类事情都可以写（当然要和软件开发工作相关），只要简历和面试能自圆其说就行。</p><h2 id="自我评价"><a href="#自我评价" class="headerlink" title="自我评价"></a>自我评价</h2><p>别给自己做评价！</p><p>在见过各种年轻员工的工作能力和工作态度之后，我们眼里的自我评价是这样的——</p><ul><li>已通过英语四级——英语水平差，六级没过</li><li>有责任心，工作认真负责——员工做好本职工作，有什么可夸的？</li><li>学习能力强——实际上什么都不会，有事情都是去问百度</li><li>爱好广泛——没有特长</li><li>热爱编程——只会编程，不会别的事情（例如写文档、与用户沟通），无法胜任工作</li><li>自我驱动力强——天天刷微博、抖音，你敢说你自我驱动力强？</li><li>富有团队精神——个人能力差，工作需要“抱大腿”</li><li>热爱运动——技术水平烂，所以拿日常生活充数</li><li>能吃苦，肯加班——这可是你说的，后边不要食言！</li><li>愿与公司共同进步——找工作太难了，我今天放下身段，不图别的，只求能被贵司的HR大人录用</li><li>实现人生价值——钱给够才行，否则不会好好干活的（我们的想法：你先好好干活，我们才能给你涨工资）</li></ul><p>以上是玩笑。严肃地讲，因为大家写的基本上都是些固定的客套话，都会抱着谦虚的态度，所以“自我评价”没什么实际意义，我们也不会特意看，只会把说大话的简历给Pass掉。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>简历中不要出现错别字，不要把英语单词拼错，要使用规范汉字与规范标点符号，并且要符合中文语法，否则你的简历容易被直接Pass掉。要想避免这类细节错误，最简单的方法就是写完之后从头到尾认真检查两遍。</p><h2 id="最后一步"><a href="#最后一步" class="headerlink" title="最后一步"></a>最后一步</h2><p>请把简历转成PDF格式之后再发送，原因见前文解释。</p><h1 id="不要问我们收没收到简历，也不要傻等回复"><a href="#不要问我们收没收到简历，也不要傻等回复" class="headerlink" title="不要问我们收没收到简历，也不要傻等回复"></a>不要问我们收没收到简历，也不要傻等回复</h1><p>如果是研发部门直接招聘，那么你的简历发过来之后就会由研发部门直接筛选。如果是公司人力部门招聘，他们会对简历进行一个初选，筛掉看起来不靠谱的简历，再把看起来靠谱的简历交给研发部门精选。所以</p><ul><li>不要主动问收没收到简历。正常情况下，只要你的简历没有被当成垃圾邮件，那么你的简历肯定被收到了，但处置方法不同团队做法会不一样。你要是问我收没收到，这个我真不知道，而且这种事也不值得去浪费同事时间特意检查。</li><li>不要傻等我们回复。如果你的简历看起来合适，我们会很快联系你面试。然而大部分人的简历并不匹配，有些人的简历还是垃圾，这些简历我们会直接扔到垃圾箱里，无暇挨个回复。因此投完简历之后，应该马上去下一家公司投简历，不要一棵树上吊死。</li></ul><p>如果有事情，正常情况下应该会在工作日的白天联系你，因为HR不加班。碰到晚上或周末联系的，大概率是996公司，或者公司太小没有专业HR，建议敬而远之。</p><h1 id="本系列文章"><a href="#本系列文章" class="headerlink" title="本系列文章"></a>本系列文章</h1><ul><li><strong>作为招聘者，筛选简历的关注点</strong></li><li><a href="/2020/08/20/resume-improvement/">来自招聘者的建议——如何优化简历</a></li><li><a href="/2020/08/29/bad-resume/">迷惑简历大赏</a></li><li>关于面试问题设计</li><li>面试禁忌</li></ul><h1 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h1><ul><li><span class="exturl" data-url="aHR0cHM6Ly9wcm9ncmFtLXRoaW5rLmJsb2dzcG90LmNvbS8yMDA5LzA0L2RlZmVjdC1vZi1oaXJlLmh0bWw=">招聘的误区<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9wcm9ncmFtLXRoaW5rLmJsb2dzcG90LmNvbS8yMDExLzAzL2hpcmluZy1leHBlcmllbmNlLTAuaHRtbA==">俺的招聘经验 - 编程随想的博客<i class="fa fa-external-link-alt"></i></span></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;因公司业务发展，需要招聘一些初、中级Java开发人员。本系列文章将面向求职者，以招聘者的视角来进行讨论，希望能为疫情期间苦于找工作的求职者带来一些启发。&lt;/p&gt;
&lt;p&gt;由于不同公司情况不同，有着急的，有不着急的，有舍得花钱的，有比周扒皮还抠门的，因此本系列文章意见仅供参考。&lt;/p&gt;</summary>
    
    
    
    <category term="工作日记" scheme="https://plusnan.me/categories/%E5%B7%A5%E4%BD%9C%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="招聘" scheme="https://plusnan.me/tags/%E6%8B%9B%E8%81%98/"/>
    
    <category term="简历" scheme="https://plusnan.me/tags/%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>在macOS Catalina系统运行osu!</title>
    <link href="https://plusnan.me/2020/05/01/osu-on-mbp/"/>
    <id>https://plusnan.me/2020/05/01/osu-on-mbp/</id>
    <published>2020-04-30T16:00:00.000Z</published>
    <updated>2020-08-29T14:21:58.979Z</updated>
    
    <content type="html"><![CDATA[<p>如果有个Mac，而且不想切换双系统，也不想开虚拟机，如何在Mac系统运行osu？</p><a id="more"></a><h1 id="方案一：osu-lazer"><a href="#方案一：osu-lazer" class="headerlink" title="方案一：osu!lazer"></a>方案一：osu!lazer</h1><p>osu!lazer是osu的开源版本。peppy的计划是重新开发osu，待全部稳定之后便取代原版。尽管该计划已经咕了好几年，从未达到取代原版的程度，但是大体上已经可以玩了，而且目前lazer版已支持Linux、Mac、Android、iOS等系统。</p><p>可以通过brew安装：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install osu-development</span><br></pre></td></tr></table></figure><br>手工下载的话，下载地址为<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BweS9vc3UvcmVsZWFzZXM=">https://github.com/ppy/osu/releases<i class="fa fa-external-link-alt"></i></span>，其中的osu.app.zip就是Mac版。下载之后解压，然后将osu.app拖动到“应用程序”中即可。</p><h2 id="与稳定版主要区别"><a href="#与稳定版主要区别" class="headerlink" title="与稳定版主要区别"></a>与稳定版主要区别</h2><ul><li>界面风格变化很大。</li><li>目前不太支持自定义皮肤。</li><li>游戏成绩是Score v2，所以不计入个人Profile。</li><li>Editor功能不完善。</li><li>联机功能还不太灵活，需要事先把曲子选好，中途不能换。</li><li>osu!direct现在免费开放，不用捐钱即可使用。</li></ul><h2 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h2><p>osu不走代理，所以在中国登录账号或者使用osu!direct时网速会很慢，需要安装Proxifier让应用强制走代理。配置规则时，应用名为<code>osu!</code>。</p><h1 id="方案二：稳定版，懒人包（推荐）"><a href="#方案二：稳定版，懒人包（推荐）" class="headerlink" title="方案二：稳定版，懒人包（推荐）"></a>方案二：稳定版，懒人包（推荐）</h1><p>有人已经把Wineskin、wine32on64和osu封装好，做成了懒人包，可前往论坛下载（<span class="exturl" data-url="aHR0cHM6Ly9vc3UucHB5LnNoL2NvbW11bml0eS9mb3J1bXMvdG9waWNzLzY4MjE5Nz9zdGFydD03MzY3MjM5">下载地址<i class="fa fa-external-link-alt"></i></span>）。下载完成后，解压，再将 osu!.app 移动到应用程序中即可。</p><h2 id="第一次启动"><a href="#第一次启动" class="headerlink" title="第一次启动"></a>第一次启动</h2><p>第一次启动之前，需要重启电脑，并在开机时按住<kbd>Command+R</kbd>，进入Recovery模式关闭SIP，否则 wine 无法启动。</p><p>在Recovery模式操作步骤如下：</p><ol><li>登录</li><li>点击“实用工具”菜单中的“终端”</li><li>输入以下命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">csrutil <span class="built_in">disable</span></span><br></pre></td></tr></table></figure></li><li>重启电脑</li></ol><h3 id="如果有强迫症，不想关闭SIP"><a href="#如果有强迫症，不想关闭SIP" class="headerlink" title="如果有强迫症，不想关闭SIP"></a>如果有强迫症，不想关闭SIP</h3><p>如果不想关闭SIP，那么也可以修改内核启动参数。</p><p>也是进入Recovery模式，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvram boot-args=<span class="string">&quot;no32exec=0&quot;</span></span><br></pre></td></tr></table></figure><p>如果在主系统修改，那么需要把SIP关掉，否则会提示<code>nvram: Error setting variable -&#39;boot-args&#39;: (iokit/common) not permitted</code>。</p><h2 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h2><p>每次启动都会Crash，然后每次都要重新检查update。不想被中国网络卡到抓狂的话需要挂个Proxifier，强制让osu走代理。</p><h1 id="方案三：手工安装（不推荐）"><a href="#方案三：手工安装（不推荐）" class="headerlink" title="方案三：手工安装（不推荐）"></a>方案三：手工安装（不推荐）</h1><p>因为涉及wine，所以配置会很麻烦。强烈建议不要手工安装，除非你喜欢像折腾Linux一样折腾Mac。</p><p>不过，幸亏用的是Mac系统，所以不涉及没声音（缺少libalsa等库）、中日韩文字无法显示（缺字体）等问题。</p><h2 id="CrossOver-Stable-Fallback"><a href="#CrossOver-Stable-Fallback" class="headerlink" title="CrossOver + Stable-Fallback"></a>CrossOver + Stable-Fallback</h2><p>安装步骤如下：</p><h3 id="第一步：安装CrossOver"><a href="#第一步：安装CrossOver" class="headerlink" title="第一步：安装CrossOver"></a>第一步：安装CrossOver</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install crossover</span><br></pre></td></tr></table></figure><p>如果<span class="exturl" data-url="aHR0cHM6Ly93d3cuY29kZXdlYXZlcnMuY29t">从官网下载<i class="fa fa-external-link-alt"></i></span>，那么务必挂个梯子，让自己变外国IP，然后再把浏览器语言设置成外国话，否则官网会强制跳转到臭名昭著的思杰马克丁的界面。想购买正版，或者想通过买正版来为Wine项目捐款的人更要注意这一点，否则钱就让马克丁给黑掉了。</p><p>CrossOver试用期过期的话，只要：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -f ~/Library/Preferences/com.codeweavers.CrossOver.plist</span><br></pre></td></tr></table></figure><br>试用期就会重新变回14天。</p><p>或者修改这个文件，将FirstRunDate改成9102年，然后就可以无限期试用了。</p><h3 id="第二步：新建容器"><a href="#第二步：新建容器" class="headerlink" title="第二步：新建容器"></a>第二步：新建容器</h3><p>需要安装 .Net Framework 4.5 或更高版本。在安装4.5时安装程序会卡死，只要在卡住不动之后稍微等一会儿，再用任务管理器把Setup.exe、ngen.exe、mscorsvw.exe等进程关掉，安装就完成了。</p><p>后面假设容器名称为<code>osu</code>，容器所在目录为<code>~/Library/Application Support/CrossOver/Bottles/osu</code>。</p><h3 id="第三步：安装osu"><a href="#第三步：安装osu" class="headerlink" title="第三步：安装osu"></a>第三步：安装osu</h3><p><span class="exturl" data-url="aHR0cHM6Ly9vc3UucHB5LnNoLw==">从官网下载<i class="fa fa-external-link-alt"></i></span>。直接启动安装程序是起不来的，而且不出现任何画面。需要加环境变量<code>LC_ALL=C</code>之后安装程序才能正常启动。</p><p>把安装程序放在“下载”目录，然后去终端输入命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WINEPREFIX=<span class="string">&quot;<span class="variable">$HOME</span>/Library/Application Support/CrossOver/Bottles/osu&quot;</span> LC_ALL=C /Applications/CrossOver.app/Contents/SharedSupport/CrossOver/bin/wineloader32on64 winewrapper.exe --new-console --start -- ~/Downloads/osu\!install.exe</span><br></pre></td></tr></table></figure><br>因为在中国下载文件很慢，而且后面要改配置、重新下载，所以不用等安装全部完成。感觉差不多了就可以直接叉掉安装程序。</p><h3 id="第四步：切换成旧版"><a href="#第四步：切换成旧版" class="headerlink" title="第四步：切换成旧版"></a>第四步：切换成旧版</h3><p>太新的版本是跑不起来的，会在显卡驱动方面报错，提示<code>osu! was unable to obtain a graphics context</code>。因此，你需要修改<code>osu!.cfg</code>，让它重新安装旧版：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="string">&quot;<span class="variable">$HOME</span>/Library/Application Support/CrossOver/Bottles/osu/drive_c/users/crossover/Local Settings/Application Data/osu\!/osu\!.cfg&quot;</span></span><br></pre></td></tr></table></figure><p>将<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_ReleaseStream &#x3D; Stable40</span><br></pre></td></tr></table></figure><br>改成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_ReleaseStream &#x3D; Stable</span><br></pre></td></tr></table></figure></p><h3 id="第五步：启动-osu"><a href="#第五步：启动-osu" class="headerlink" title="第五步：启动 osu!"></a>第五步：启动 osu!</h3><p>修改完成后，重新启动 osu!</p><p>这次可以直接在CrossOver的“运行命令”中启动osu，并将启动方式保存下来。路径为<code>drive_c/users/crossover/Local Settings/Application Data/osu!/osu!.exe</code>。</p><p>启动osu之后，系统会自动重新下载各个文件。然而，有两个文件体积比较大，分别在30MB左右，而且中国网络比较卡，所以会需要很长时间。如果卡半天下不动，可选择把别人装好的内容拷到自己电脑上（注意里面需要包含类似<code>osu!ui.dll</code>的文件），放到<code>~/Library/Application Support/CrossOver/Bottles/osu/drive_c/users/crossover/Local Settings/Application Data/osu!</code>。</p><p>或者也可以安装Proxifier，让<code>wineloader32on64</code>进程强制走代理。</p><h3 id="第六步：应用设置"><a href="#第六步：应用设置" class="headerlink" title="第六步：应用设置"></a>第六步：应用设置</h3><p>进入osu之后，你需要立刻修改分辨率设置，将其改成屏幕一半，例如15寸MacBook Pro需要改成1680x1050，否则操作起来会不正常（例如界面卡死、数位板只能划到屏幕一半等）。</p><h3 id="第七步：导入曲包、皮肤"><a href="#第七步：导入曲包、皮肤" class="headerlink" title="第七步：导入曲包、皮肤"></a>第七步：导入曲包、皮肤</h3><p>在CrossOver使用“运行命令”时，点击“将指令保存到面板”按钮，CrossOver会为osu生成一个app。记下这个app的位置。</p><p>右击osz、osk文件，选择“打开方式”、“其它”。下方“启用”选择“所有应用程序”，并勾选“始终以此方式打开”，然后找到刚才生成的app，即可直接通过双击导入曲包和皮肤了。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>因为版本太老，成绩同样不会计入Profile。</p><h2 id="魔改版Wine-Stable"><a href="#魔改版Wine-Stable" class="headerlink" title="魔改版Wine + Stable"></a>魔改版Wine + Stable</h2><p>在CrossOver搞出了wine32on64这种东西之后，有人把它提取了出来。</p><p>基于魔改版Wine的配置步骤如下：</p><h3 id="第一步：关闭SIP-修改内核参数"><a href="#第一步：关闭SIP-修改内核参数" class="headerlink" title="第一步：关闭SIP / 修改内核参数"></a>第一步：关闭SIP / 修改内核参数</h3><p>重启电脑，并在开机时按住<kbd>Command+R</kbd>，进入Recovery模式关闭SIP。在Recovery模式中，操作步骤如下：</p><ol><li>登录</li><li>点击“实用工具”菜单中的“终端”</li><li>输入以下命令（二选一，推荐用nvram那个）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">csrutil <span class="built_in">disable</span></span><br></pre></td></tr></table></figure>或<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvram boot-args=<span class="string">&quot;no32exec=0&quot;</span></span><br></pre></td></tr></table></figure></li><li>重启电脑。</li></ol><h3 id="第二步：下载魔改版Wine"><a href="#第二步：下载魔改版Wine" class="headerlink" title="第二步：下载魔改版Wine"></a>第二步：下载魔改版Wine</h3><p>前往<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0djZW54L1dpbmVza2luU2VydmVyL3JlbGVhc2Vz">https://github.com/Gcenx/WineskinServer/releases<i class="fa fa-external-link-alt"></i></span>，下载<code>WS11WineCX19.0.1.tar.7z</code>，随便找个地方解压，例如<code>~</code>。</p><p>在Finder中进入<code>~/wswine.bundle/bin</code>（wswine.bundle需要右击，然后点击“显示包内容”才能进去），挨个按Control键启动一下，触发一下“是否允许启动”的警告，否则Mac系统会拒绝运行这几个程序。</p><p>初始化环境变量：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> WINEPREFIX=~/.wine</span><br><span class="line"><span class="built_in">export</span> WINEARCH=win32</span><br><span class="line"><span class="built_in">export</span> WINE=wine32on64</span><br><span class="line"><span class="built_in">export</span> PATH=~/wswine.bundle/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><br>初始化一下wine：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wine32on64 taskmgr</span><br></pre></td></tr></table></figure><h3 id="第三步：安装并配置winetricks"><a href="#第三步：安装并配置winetricks" class="headerlink" title="第三步：安装并配置winetricks"></a>第三步：安装并配置winetricks</h3><p>在上面终端的基础上继续执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install winetricks</span><br><span class="line">winetricks dotnet45</span><br></pre></td></tr></table></figure><p>程序会先安装.Net Framework 4.0，然后再安装4.5。4.0可以正常安装，但是4.5安装程序会卡进度条。这时候可以稍微等一会，然后再开个终端，用<code>wine32on64 taskmgr</code>启动任务管理器，把Setup.exe、ngen.exe、mscorsvw.exe几个进程直接杀掉。</p><p>经过测试，发现一件神奇的事情：尽管4.5未能成功安装，但是只安装4.0，不让4.5安装程序卡进度条的话，osu是启动不了的。</p><h3 id="第四步：安装osu"><a href="#第四步：安装osu" class="headerlink" title="第四步：安装osu!"></a>第四步：安装osu!</h3><p><span class="exturl" data-url="aHR0cHM6Ly9vc3UucHB5LnNoLw==">从官网下载安装程序<i class="fa fa-external-link-alt"></i></span>。假设放到<code>~/Downloads</code>，继续执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wine32on64 ~/Downloads/osu\!install.exe</span><br></pre></td></tr></table></figure><p>同样要挂Proxifier，强制让wine走代理，否则下载速度非常慢。</p><h3 id="第五步：启动"><a href="#第五步：启动" class="headerlink" title="第五步：启动"></a>第五步：启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wine32on64 ~/.wine/drive_c/users/crossover/Local\ Settings/Application\ Data/osu\!/osu\!.exe</span><br></pre></td></tr></table></figure><p>下载完成后就可以正常玩了。因为每次敲命令太麻烦，可以在自己的<code>~/.bashrc</code>或<code>~/.zshrc</code>等配置文件（根据自己所用shell设置）增加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> WINEPREFIX=~/.wine</span><br><span class="line"><span class="built_in">export</span> WINEARCH=win32</span><br><span class="line"><span class="built_in">export</span> WINE=wine32on64</span><br><span class="line"><span class="built_in">export</span> PATH=~/wswine.bundle/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">alias</span> osu=<span class="string">&quot;wine32on64 <span class="variable">$HOME</span>/.wine/drive_c/users/crossover/Local Settings/Application Data/osu\!/osu\!.exe&quot;</span></span><br></pre></td></tr></table></figure><p>下次进入终端时，输入<code>osu</code>即可启动，在命令后面加上曲包或皮肤文件路径即可导入。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><span class="exturl" data-url="aHR0cHM6Ly9vc3UucHB5LnNoL2NvbW11bml0eS9mb3J1bXMvdG9waWNzLzY4MjE5Nw==">https://osu.ppy.sh/community/forums/topics/682197<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0djZW54L1dpbmVza2luU2VydmVy">https://github.com/Gcenx/WineskinServer<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9hcHBkYi53aW5laHEub3JnL29iamVjdE1hbmFnZXIucGhwP3NDbGFzcz12ZXJzaW9uJmFtcDtpSWQ9MjgwMjU=">https://appdb.winehq.org/objectManager.php?sClass=version&amp;iId=28025<i class="fa fa-external-link-alt"></i></span></li></ul><h1 id="10-16还能运行不？"><a href="#10-16还能运行不？" class="headerlink" title="10.16还能运行不？"></a>10.16还能运行不？</h1><p>谁知道呢？</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;如果有个Mac，而且不想切换双系统，也不想开虚拟机，如何在Mac系统运行osu？&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="wine" scheme="https://plusnan.me/tags/wine/"/>
    
    <category term="osu!" scheme="https://plusnan.me/tags/osu/"/>
    
  </entry>
  
  <entry>
    <title>Web应用中文乱码实验（二）：HTTP Request中文编码测试</title>
    <link href="https://plusnan.me/2020/03/21/luanma-2/"/>
    <id>https://plusnan.me/2020/03/21/luanma-2/</id>
    <published>2020-03-20T16:00:00.000Z</published>
    <updated>2020-06-21T01:38:48.903Z</updated>
    
    <content type="html"><![CDATA[<p>本文借助Wireshark抓包软件，研究这样一个问题：含有中文的各类HTTP请求，从浏览器【发送】出去之后、被Tomcat等中间件接收之前，它的内部用了什么编码呢？</p><a id="more"></a><h1 id="约定"><a href="#约定" class="headerlink" title="约定"></a>约定</h1><p>为便于讨论，本文作出以下约定：</p><ul><li>GBK：忽略GB2312、GBK、GB18030等中国编码的内部差异，统一使用GBK表示。假设Windows系统默认使用GBK编码。</li><li>现代浏览器：指除了IE以外的、版本不太老的其他浏览器，例如Chrome、Firefox、Safari，以及用了Chromium等内核的国产浏览器。国产浏览器通常是双内核，其IE内核模式则排除在外。</li><li>IE：默认包含国产浏览器的IE内核模式。有特殊说明的除外。</li><li>Linux：本文使用Mac系统进行测试，并假设Mac与Linux一样，而且实际上结论就是一样的。</li></ul><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="简易HTTP-Server"><a href="#简易HTTP-Server" class="headerlink" title="简易HTTP Server"></a>简易HTTP Server</h2><p>为了排除Java与Tomcat的各种干扰，我们用另一种语言——Node.js来实现一个简易的HTTP Server。在Node.js中字符串内部以UTF-8编码存储（备注：这句话不正确，实际上和Java一样也是UTF-16），而且本文所用的express也会默认让Content-Type使用UTF-8：</p><p>server.js：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Buffer = <span class="built_in">require</span>(<span class="string">&#x27;buffer&#x27;</span>).Buffer;</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 让express不对用户传入参数作任何解析</span></span><br><span class="line">app.use(bodyParser.text(&#123; <span class="attr">type</span>: <span class="string">&#x27;*/*&#x27;</span> &#125;));</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> object2str = <span class="function">(<span class="params">obj</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> output = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> obj === <span class="string">&#x27;object&#x27;</span> &amp;&amp; obj) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">            <span class="keyword">if</span> (obj[key]) &#123;</span><br><span class="line">                <span class="keyword">let</span> value = obj[key].toString();</span><br><span class="line">                <span class="keyword">let</span> keyBuffer = Buffer.from(key);</span><br><span class="line">                <span class="keyword">let</span> valueBuffer = Buffer.from(value);</span><br><span class="line"></span><br><span class="line">                output.push(<span class="string">`<span class="subst">$&#123;key&#125;</span> = <span class="subst">$&#123;value&#125;</span>`</span>);</span><br><span class="line">                output.push(<span class="string">`\t<span class="subst">$&#123;keyBuffer.toString(<span class="string">&#x27;hex&#x27;</span>)&#125;</span> = <span class="subst">$&#123;valueBuffer.toString(<span class="string">&#x27;hex&#x27;</span>)&#125;</span>`</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> obj === <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">        output.push(obj);</span><br><span class="line">        output.push(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        output.push(Buffer.from(obj).toString(<span class="string">&#x27;hex&#x27;</span>)); </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> output.join(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> handler = <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.header(&#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> output = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将用户传入的参数原样输出</span></span><br><span class="line">    output.push(<span class="string">`<span class="subst">$&#123;req.method&#125;</span> <span class="subst">$&#123;req.originalUrl&#125;</span>`</span>);</span><br><span class="line">    output.push(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    output.push(<span class="string">&#x27;Query:&#x27;</span>);</span><br><span class="line">    output.push(object2str(req.query));</span><br><span class="line">    output.push(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    output.push(<span class="string">&#x27;Params:&#x27;</span>);</span><br><span class="line">    output.push(object2str(req.params));</span><br><span class="line">    output.push(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    output.push(<span class="string">&#x27;Body:&#x27;</span>);</span><br><span class="line">    output.push(object2str(req.body));</span><br><span class="line">    output.push(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    res.send(output.join(<span class="string">&#x27;\n&#x27;</span>));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> createForm = <span class="function">(<span class="params">encoding</span>) =&gt;</span> <span class="string">`</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">    &lt;head&gt;</span></span><br><span class="line"><span class="string">        &lt;meta charset=&quot;<span class="subst">$&#123;encoding&#125;</span>&quot; /&gt;</span></span><br><span class="line"><span class="string">        &lt;title&gt;TEST&lt;/title&gt;</span></span><br><span class="line"><span class="string">        &lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;/head&gt;</span></span><br><span class="line"><span class="string">    &lt;body&gt;</span></span><br><span class="line"><span class="string">        &lt;h2&gt;GET Form&lt;/h2&gt;</span></span><br><span class="line"><span class="string">        &lt;form action=&quot;/get&quot; method=&quot;GET&quot;&gt;</span></span><br><span class="line"><span class="string">            Name: &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;input type=&quot;submit&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/form&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &lt;h2&gt;POST Form&lt;/h2&gt;</span></span><br><span class="line"><span class="string">        &lt;form action=&quot;/post&quot; method=&quot;POST&quot;&gt;</span></span><br><span class="line"><span class="string">            Name: &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;input type=&quot;submit&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/form&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &lt;h2&gt;POST Form (multipart/form-data)&lt;/h2&gt;</span></span><br><span class="line"><span class="string">        &lt;form action=&quot;/post&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;</span></span><br><span class="line"><span class="string">            Name: &lt;input type=&quot;text&quot; name=&quot;name&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;input type=&quot;submit&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;/form&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &lt;h2&gt;Ajax Form&lt;/h2&gt;</span></span><br><span class="line"><span class="string">        Name: &lt;input type=&quot;text&quot; id=&quot;text&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;button type=&quot;button&quot; onclick=&quot;ajaxTest(&#x27;get&#x27;)&quot;&gt;Ajax GET&lt;/button&gt;</span></span><br><span class="line"><span class="string">        &lt;button type=&quot;button&quot; onclick=&quot;ajaxTest(&#x27;post&#x27;)&quot;&gt;Ajax POST&lt;/button&gt;</span></span><br><span class="line"><span class="string">        &lt;button type=&quot;button&quot; onclick=&quot;ajaxTest2()&quot;&gt;Ajax GET 2&lt;/button&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        &lt;script&gt;</span></span><br><span class="line"><span class="string">            function ajaxTest(type) &#123;</span></span><br><span class="line"><span class="string">                $.ajax(&#123;</span></span><br><span class="line"><span class="string">                    url: &#x27;/&#x27; + type,</span></span><br><span class="line"><span class="string">                    type: type,</span></span><br><span class="line"><span class="string">                    data: &#123;</span></span><br><span class="line"><span class="string">                        name: $(&#x27;#text&#x27;).val()</span></span><br><span class="line"><span class="string">                    &#125;,</span></span><br><span class="line"><span class="string">                    success: function (data) &#123;</span></span><br><span class="line"><span class="string">                        alert(data);</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &#125;);</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            function ajaxTest2() &#123;</span></span><br><span class="line"><span class="string">                var text = $(&#x27;#text&#x27;).val();</span></span><br><span class="line"><span class="string">                $.ajax(&#123;</span></span><br><span class="line"><span class="string">                    url: &#x27;/get/&#x27; + text + &#x27;?name=&#x27; + text,</span></span><br><span class="line"><span class="string">                    type: &#x27;get&#x27;,</span></span><br><span class="line"><span class="string">                    success: function (data) &#123;</span></span><br><span class="line"><span class="string">                        alert(data);</span></span><br><span class="line"><span class="string">                    &#125;</span></span><br><span class="line"><span class="string">                &#125;);</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">`</span>;</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/&#x27;</span>, handler);</span><br><span class="line">app.get(<span class="string">&#x27;/get&#x27;</span>, handler);</span><br><span class="line">app.get(<span class="string">&#x27;/get/:name&#x27;</span>, handler);</span><br><span class="line">app.post(<span class="string">&#x27;/post&#x27;</span>, handler);</span><br><span class="line">app.post(<span class="string">&#x27;/post/:name&#x27;</span>, handler);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/form/utf-8&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 框架会自动追加 charset=utf-8</span></span><br><span class="line">    res.send(createForm(<span class="string">&#x27;utf-8&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/form/gbk&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.header(&#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html; charset=gbk&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 必须send一个Buffer，不能send一个string，否则框架会按UTF-8处理</span></span><br><span class="line">    res.send(Buffer.from(createForm(<span class="string">&#x27;gbk&#x27;</span>)));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`Listening at http://0.0.0.0:8000... Press Ctrl+C to stop.`</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br>使用npm安装express与body-parser。准备完毕后，使用<code>node server.js</code>运行服务器。</p><p>该HTTP Server功能如下：</p><ul><li><code>/get</code>：显示GET请求参数</li><li><code>/post</code>：显示POST请求内容</li><li><code>/get/xxx</code>：重复get后面的内容</li><li><code>/post/xxx</code>：重复post后面的内容</li><li><code>/form/gbk</code>：显示一个以GBK编码展示的表单，系统入口</li><li><code>/form/utf-8</code>：显示一个以UTF-8编码展示的表单，系统入口</li></ul><h2 id="识别字符编码"><a href="#识别字符编码" class="headerlink" title="识别字符编码"></a>识别字符编码</h2><p><code>中文</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">UTF-8：</span><br><span class="line">e4 b8 ad e6 96 87</span><br><span class="line">-------- --------</span><br><span class="line">   中       文</span><br><span class="line"></span><br><span class="line">GBK：</span><br><span class="line">d6 d0 ce c4</span><br><span class="line">----- -----</span><br><span class="line">  中    文</span><br></pre></td></tr></table></figure><h2 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a>Wireshark</h2><p>Wireshark是一款支持多种协议的抓包软件。使用该软件抓包时，我们可以看到数据包的二进制信息，从而判断请求用了哪种编码。</p><p>安装并启动Wireshark，可看到选择设备的窗口：</p><p><img src="/img/2020-03-21-luanma-2/wireshark-1.png" alt=""></p><p>双击某个网卡，程序就会捕获经过某个网卡的各类网络流量。由于访问的是本机运行的HTTP Server，我们需要双击“Loopback”。</p><p>进入捕获界面，在过滤条件中输入<code>http</code>，即可过滤出本机访问本机的HTTP流量：</p><p><img src="/img/2020-03-21-luanma-2/wireshark-2.png" alt=""></p><p>本次测试使用两个操作系统，一个是Mac（本机），另一个是Windows（虚拟机），选择Capture的网卡时，均选择“Loopback”。</p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>我们测试以下几种情形：</p><ul><li>GET请求：<ul><li>在浏览器地址栏直接输入URL、查询参数</li><li>在UTF-8/GBK编码页面通过&lt;form&gt;输入查询参数</li></ul></li><li>POST请求：在UTF-8/GBK编码页面通过&lt;form&gt;输入参数</li><li>使用jQuery的$.ajax发送GET/POST请求</li></ul><p>测试环境：</p><ul><li>操作系统：Linux/Mac、Windows</li><li>浏览器：IE8、IE11、新版Chrome（版本&gt;70）、旧版Chrome（版本49）、新版Firefox（版本&gt;70）、旧版Firefox（版本&lt;20）、360浏览器（版本12，Windows）</li><li>其他软件：curl、Postman</li></ul><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>测试结论如下。除IE外，其他浏览器不受操作系统影响。</p><h2 id="GET请求，地址栏直接输入网址"><a href="#GET请求，地址栏直接输入网址" class="headerlink" title="GET请求，地址栏直接输入网址"></a>GET请求，地址栏直接输入网址</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> http :&#x2F;&#x2F; 127.0.0.1:8000 &#x2F; get &#x2F; 中文 ? name &#x3D; 中文</span><br><span class="line"> -----------------------------------   -----------</span><br><span class="line">                 URL                     请求参数</span><br><span class="line"></span><br><span class="line">%E4%B8%AD%E6%96%87 -&gt; URL Encoded（按UTF-8编码）</span><br><span class="line">%D6%D0%CE%C4 -&gt; URL Encoded（按GBK编码）</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>测试环境</th><th>URL编码</th><th>请求参数编码</th></tr></thead><tbody><tr><td>现代浏览器</td><td>UTF-8, URL encoded</td><td>UTF-8, URL encoded</td></tr><tr><td>IE（排除国产浏览器）</td><td>UTF-8, URL encoded</td><td>跟随系统（GBK），未进行URL encode*</td></tr><tr><td>360浏览器兼容模式</td><td>UTF-8, URL encoded</td><td>UTF-8, URL encoded</td></tr></tbody></table></div><p><small>* 这是系统默认情况。用户可以在“Internet选项”的“高级”标签中勾选“发送（非）Intranet URL 的 UTF-8 查询字符串”设置，让IE在发送请求参数时也采用UTF-8编码。</small></p><h2 id="lt-form-gt-表单提交"><a href="#lt-form-gt-表单提交" class="headerlink" title="&lt;form&gt;表单提交"></a>&lt;form&gt;表单提交</h2><div class="table-container"><table><thead><tr><th>测试环境</th><th>GET</th><th>POST，默认情况（application/x-www-form-urlencoded）</th><th>POST，multipart/form-data</th></tr></thead><tbody><tr><td>所有测试环境</td><td>遵循页面编码（Content-Type），URL encoded</td><td>遵循页面编码（Content-Type），URL encoded</td><td>遵循页面编码（Content-Type），但不进行URL encode</td></tr></tbody></table></div><p>以上均不受操作系统影响。由于与页面编码一致，通常不会遇到坑。</p><p>如果是GBK表单，而且用户输入了GBK无法表示的文字（例如emoji），浏览器会在提交之前转为HTML特殊字符编码（例如&amp;#127770;）。</p><h2 id="jQuery的-ajax"><a href="#jQuery的-ajax" class="headerlink" title="jQuery的$.ajax"></a>jQuery的$.ajax</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 中文①：在URL中使用中文</span></span><br><span class="line"><span class="comment">// 中文②：直接在url参数中拼接中文的查询参数</span></span><br><span class="line"><span class="comment">// 中文③：在data参数中使用中文</span></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">    url: <span class="string">&#x27;/get/中文①&#x27;</span> + <span class="string">&#x27;?name=&#x27;</span> + <span class="string">&#x27;中文②&#x27;</span>,</span><br><span class="line">    data: <span class="string">&#x27;中文③&#x27;</span>,</span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>测试环境</th><th>中文①</th><th>中文②</th><th>中文③</th></tr></thead><tbody><tr><td>现代浏览器（旧版本火狐除外）</td><td>UTF-8, URL encoded</td><td>跟随页面Content-Type，URL encoded</td><td>UTF-8, URL encoded</td></tr><tr><td>旧版本火狐</td><td>UTF-8, URL encoded</td><td>UTF-8, URL encoded</td><td>UTF-8, URL encoded</td></tr><tr><td>IE</td><td>UTF-8, URL encoded</td><td>跟随系统（GBK），未进行URL编码*</td><td>UTF-8, URL encoded</td></tr></tbody></table></div><p><small>* 这是系统默认情况。用户可以在“Internet选项”的“高级”标签中勾选“发送（非）Intranet URL 的 UTF-8 查询字符串”设置，让IE在发送请求参数时也采用UTF-8编码。</small></p><p>由上表可以得知，应当避免在“中文②”位置上面拼接查询参数。躲掉这个坑之后，$.ajax总是UTF-8编码。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li>应避免在URL上面拼接中文字符。</li><li>全面使用UTF-8，可避免编码转换引发的问题。</li><li>如果全面使用GBK，应注意到：某些场景下，浏览器会将字符串以UTF-8编码进行URL encode然后再发送到服务器上。服务器方面需留意URL decode与编码转换的问题。</li></ul><h1 id="附录：部分测试截图"><a href="#附录：部分测试截图" class="headerlink" title="附录：部分测试截图"></a>附录：部分测试截图</h1><h2 id="GET请求，直接输入URL"><a href="#GET请求，直接输入URL" class="headerlink" title="GET请求，直接输入URL"></a>GET请求，直接输入URL</h2><p><code>http://127.0.0.1:8000/get/中文</code></p><p><img src="/img/2020-03-21-luanma-2/get-1.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/get-1-data.png" alt=""></p><p>按UTF-8进行了URL encode。</p><p>&nbsp;</p><p><code>http://127.0.0.1:8000/get?name=中文</code>（现代浏览器）</p><p><img src="/img/2020-03-21-luanma-2/get-2.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/get-2-data.png" alt=""></p><p>同样按UTF-8进行了URL encode。</p><p>&nbsp;</p><p><code>http://127.0.0.1:8000/get?name=中文</code>（IE）</p><p><img src="/img/2020-03-21-luanma-2/get-3.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/get-3-data.png" alt=""></p><p>IE未对“中文”二字进行URL encode，直接以GBK编码原文发送出去了。</p><p>&nbsp;</p><h2 id="提交-lt-form-gt-表单（通常情况）"><a href="#提交-lt-form-gt-表单（通常情况）" class="headerlink" title="提交&lt;form&gt;表单（通常情况）"></a>提交&lt;form&gt;表单（通常情况）</h2><h3 id="UTF-8页面"><a href="#UTF-8页面" class="headerlink" title="UTF-8页面"></a>UTF-8页面</h3><p>UTF-8表单：<code>http://127.0.0.1:8000/form/utf-8</code></p><p>在GET区输入“中文”二字并提交：</p><p><img src="/img/2020-03-21-luanma-2/get-2.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/get-2-data.png" alt=""></p><p>与直接输入网址是一致的。</p><p>&nbsp;</p><p>在POST区输入“中文”二字并提交：</p><p><img src="/img/2020-03-21-luanma-2/post-1.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/post-1-data.png" alt=""></p><p>浏览器也进行了URL encode。</p><p>&nbsp;</p><h3 id="GBK页面"><a href="#GBK页面" class="headerlink" title="GBK页面"></a>GBK页面</h3><p>切换到GBK表单：<code>http://127.0.0.1:8000/form/gbk</code></p><p>在GET区输入“中文”二字并提交：</p><p><img src="/img/2020-03-21-luanma-2/get-4.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/get-4-data.png" alt=""></p><p>浏览器按GBK编码进行了URL encode，与直接输入网址的现象不同了。</p><p>&nbsp;</p><p>在POST区输入“中文”二字并提交：</p><p><img src="/img/2020-03-21-luanma-2/post-2.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/post-2-data.png" alt=""></p><p>浏览器也按GBK编码进行了URL encode。</p><p>&nbsp;</p><h2 id="提交-lt-form-gt-表单（multipart-form-data）"><a href="#提交-lt-form-gt-表单（multipart-form-data）" class="headerlink" title="提交&lt;form&gt;表单（multipart/form-data）"></a>提交&lt;form&gt;表单（multipart/form-data）</h2><p>UTF-8表单：<code>http://127.0.0.1:8000/form/utf-8</code></p><p><img src="/img/2020-03-21-luanma-2/post-3.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/post-3-data.png" alt=""></p><p>&nbsp;</p><p>切换到GBK表单：<code>http://127.0.0.1:8000/form/gbk</code></p><p><img src="/img/2020-03-21-luanma-2/post-4.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/post-4-data.png" alt=""></p><p>都是原封不动地将文字发出去了。</p><p>&nbsp;</p><h2 id="ajax"><a href="#ajax" class="headerlink" title="$.ajax"></a>$.ajax</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 中文①：在URL中使用中文</span></span><br><span class="line"><span class="comment">// 中文②：直接在url参数中拼接中文的查询参数</span></span><br><span class="line"><span class="comment">// 中文③：在data参数中使用中文</span></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">    url: <span class="string">&#x27;/get/中文①&#x27;</span> + <span class="string">&#x27;?name=&#x27;</span> + <span class="string">&#x27;中文②&#x27;</span>,</span><br><span class="line">    data: <span class="string">&#x27;中文③&#x27;</span>,</span><br><span class="line">    ...</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="中文①与中文②（Ajax-Get-2按钮）"><a href="#中文①与中文②（Ajax-Get-2按钮）" class="headerlink" title="中文①与中文②（Ajax Get 2按钮）"></a>中文①与中文②（Ajax Get 2按钮）</h3><h4 id="UTF-8"><a href="#UTF-8" class="headerlink" title="UTF-8"></a>UTF-8</h4><p><img src="/img/2020-03-21-luanma-2/ajax-1.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/ajax-1-data.png" alt=""></p><p>均按UTF-8进行了URL encode。</p><p>&nbsp;</p><p>换成IE浏览器时：</p><p><img src="/img/2020-03-21-luanma-2/ajax-2.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/ajax-2-data.png" alt=""></p><p>后面的请求参数并不是UTF-8，而是GBK，并且未进行URL encode。</p><p>&nbsp;</p><h4 id="GBK"><a href="#GBK" class="headerlink" title="GBK"></a>GBK</h4><p><img src="/img/2020-03-21-luanma-2/ajax-3.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/ajax-3-data.png" alt=""></p><p>URL仍然是UTF-8 + URL encode，而请求参数是GBK + URL encode。</p><p>&nbsp;</p><p>换成IE浏览器时：</p><p><img src="/img/2020-03-21-luanma-2/ajax-2.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/ajax-2-data.png" alt=""></p><p>和上面UTF-8表单一样，后面的请求参数是未经过URL encode的GBK。</p><p>&nbsp;</p><p>对于旧版本的Firefox浏览器：</p><p><img src="/img/2020-03-21-luanma-2/ajax-4.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/ajax-4-data.png" alt=""></p><p>即使页面编码是GBK，URL和请求参数仍然都是UTF-8 + URL encode。</p><p>&nbsp;</p><h3 id="中文③（Ajax-GET与Ajax-POST按钮）"><a href="#中文③（Ajax-GET与Ajax-POST按钮）" class="headerlink" title="中文③（Ajax GET与Ajax POST按钮）"></a>中文③（Ajax GET与Ajax POST按钮）</h3><p><img src="/img/2020-03-21-luanma-2/ajax-5.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/ajax-6.png" alt=""></p><p>无论页面是UTF-8还是GBK，ajax发送出去的都是UTF-8 + URL encode。IE也是如此。</p><p>&nbsp;</p><h2 id="其他工具"><a href="#其他工具" class="headerlink" title="其他工具"></a>其他工具</h2><h3 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h3><p>shell编码：UTF-8</p><p><code>curl http://127.0.0.1:8000/get/中文</code></p><p><img src="/img/2020-03-21-luanma-2/curl-1.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/curl-1-data.png" alt=""></p><p>&nbsp;</p><p><code>curl &#39;http://127.0.0.1:8000/get?name=中文&#39;</code></p><p><img src="/img/2020-03-21-luanma-2/curl-2.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/curl-2-data.png" alt=""></p><p>&nbsp;</p><p><code>curl -X POST -d &#39;name=中文&#39; http://127.0.0.1:8000/post</code></p><p><img src="/img/2020-03-21-luanma-2/curl-3.png" alt=""></p><p><img src="/img/2020-03-21-luanma-2/curl-3-data.png" alt=""></p><p>现象：curl把汉字原封不动地发送给了服务器，但由于汉字不符合RFC 1738的URL字符的规范，服务器程序无法正确处理。</p><p>&nbsp;</p><h3 id="Postman"><a href="#Postman" class="headerlink" title="Postman"></a>Postman</h3><p>我们再看一下接口调试软件Postman是按哪种编码处理的：</p><p><code>GET http://127.0.0.1:8000/get/中文</code></p><p><img src="/img/2020-03-21-luanma-2/postman-1.png" alt=""></p><p>&nbsp;</p><p><code>GET http://127.0.0.1:8000/get?name=中文</code></p><p><img src="/img/2020-03-21-luanma-2/postman-2.png" alt=""></p><p>&nbsp;</p><p><code>POST http://127.0.0.1:8000/post</code> (application/x-www-form-urlencoded)</p><p><img src="/img/2020-03-21-luanma-2/postman-3.png" alt=""></p><p>&nbsp;</p><p><code>POST http://127.0.0.1:8000/post</code> (application/json)</p><p><img src="/img/2020-03-21-luanma-2/postman-4.png" alt=""></p><p>现象：无论Mac还是Windows，Postman均按UTF-8处理了。以multipart/form-data、application/json等形式发送时，不会也不应该进行URL encode。</p><p>&nbsp;</p><h2 id="emoji🌚"><a href="#emoji🌚" class="headerlink" title="emoji🌚"></a>emoji🌚</h2><p>传入一个Emoji会发生什么事情呢？</p><p><img src="/img/2020-03-21-luanma-2/emoji-1.png" alt=""></p><p>&nbsp;</p><p><img src="/img/2020-03-21-luanma-2/emoji-2.png" alt=""></p><p>通常情况下，和普通汉字的行为是一样的。</p><p>&nbsp;</p><p><img src="/img/2020-03-21-luanma-2/emoji-3.png" alt=""></p><p>这种情况本来是按GBK编码传递原文来着。由于GBK编码无法表示“🌚”这个字，于是变成了问号。</p><p>&nbsp;</p><p><img src="/img/2020-03-21-luanma-2/emoji-4.png" alt=""></p><p>在GBK表单中输入“🌚”字，浏览器将其转换成了“&amp;#127770;”。</p><p>&nbsp;</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVhbnlpZmVuZy5jb20vYmxvZy8yMDEwLzAyL3VybF9lbmNvZGluZy5odG1s">关于URL编码<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuaWJtLmNvbS9kZXZlbG9wZXJ3b3Jrcy9jbi93ZWIvd2EtbG8tZWNvZGluZy1yZXNwb25zZS1wcm9ibGVtL2luZGV4Lmh0bWw=">深入分析 web 请求响应中的编码问题<i class="fa fa-external-link-alt"></i></span></li></ul><h1 id="本系列文章"><a href="#本系列文章" class="headerlink" title="本系列文章"></a>本系列文章</h1><ul><li><a href="/2020/03/15/luanma-1/">乱码现象概述</a></li><li><strong>HTTP Request中文编码测试</strong></li><li><a href="/2020/04/05/luanma-3/">Tomcat中文编码测试（Linux/Mac）</a></li><li><a href="/2020/04/06/luanma-3.5/">Tomcat中文编码测试（Windows）</a></li><li>MySQL中文编码测试</li><li>补救措施<ul><li>GBK页面，如何处理Ajax中文乱码问题</li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文借助Wireshark抓包软件，研究这样一个问题：含有中文的各类HTTP请求，从浏览器【发送】出去之后、被Tomcat等中间件接收之前，它的内部用了什么编码呢？&lt;/p&gt;</summary>
    
    
    
    <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
    <category term="乱码" scheme="https://plusnan.me/tags/%E4%B9%B1%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Web应用中文乱码实验（一）：乱码现象概述</title>
    <link href="https://plusnan.me/2020/03/15/luanma-1/"/>
    <id>https://plusnan.me/2020/03/15/luanma-1/</id>
    <published>2020-03-14T16:00:00.000Z</published>
    <updated>2020-06-21T01:38:03.131Z</updated>
    
    <content type="html"><![CDATA[<p>编码转换和乱码问题令人头大。在理清编码问题之前，需要先认识一下各种乱码的样子。<br><a id="more"></a></p><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>为方便讨论与理解，本系列文章会故意忽略一些不太要紧的细节，甚至把一些事情说错。要知道，有些事情吧，它确实不是那回事，但是，我们的目的不是写一篇内容准确的学术论文，而是识别出一些软件开发过程中的坑，免得在字符编码方面把自己绕进去，浪费时间，所以你当作是那回事就行了。</p><p>欲知乱码背后的真相，请用Google搜索其他资料，并且别忘了找一款二进制编辑器来观察文件内部编码。</p><h2 id="关于GB2312-GBK-GB18030"><a href="#关于GB2312-GBK-GB18030" class="headerlink" title="关于GB2312/GBK/GB18030"></a>关于GB2312/GBK/GB18030</h2><ul><li>中华人民共和国最新的国家标准是GB18030</li><li>先前所用标准是GB2312</li><li>另外一个不属于国家标准但常用的编码是GBK，相当于一个事实上的标准。</li></ul><p>由于这三个编码大体上是向下兼容的，在本系列文章中，我们会忽略<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzE5Njc3NjE5">它们的内部差异<i class="fa fa-external-link-alt"></i></span>，统一称为GBK。</p><h2 id="Java的默认编码"><a href="#Java的默认编码" class="headerlink" title="Java的默认编码"></a>Java的默认编码</h2><p>Java的默认编码比较坑，它和操作系统有关系。我们需要先按照以下方式来理解它的默认编码：</p><ul><li>Windows系统默认使用GBK编码，Java字符串内部也是GBK</li><li>Linux/Mac系统默认使用UTF-8编码，Java字符串内部同样是UTF-8</li></ul><p>以上只是一种理解方式。实际上，Java内部（版本9之前）使用UTF-16 LE存储字符串，而getBytes()时才会参考JVM启动参数<code>-Dfile.encoding</code>（没有的话就看操作系统环境），并且这个转换过程是透明的，我们感知不到。</p><h1 id="编码类型"><a href="#编码类型" class="headerlink" title="编码类型"></a>编码类型</h1><p>让我们看一下各种默认编码：</p><p><small style="letter-spacing: -1pt;"><br>中国大陆标准是GBK；<br>Linux系统/Mac系统通常使用UTF-8编码；<br>（中国大陆的）Windows系统与程序通常使用GBK编码；<br>Java内部使用UTF-16编码；<br>在Windows中UTF-8还有带BOM头和不带BOM头的版本；<br>在Linux/Mac系统中，可将Java内部存储的字符串视为UTF-8；<br>在Windows系统中，需要将Java内部存储视为GBK；<br>Tomcat默认使用ISO-8859-1编码；<br>URL根据场合不同分别使用了GBK与UTF-8编码；<br>MySQL默认使用latin1；<br>日本Galgame经常使用Shift-JIS编码；<br>emoji（表情符号😂）需要使用UTF-8编码……</small></p><p>以上看起来很乱，而且确实很乱——真·乱码。</p><p>为了避免字符编码的坑，<strong>如果你的系统尚未投入正式开发，请把所有编码统一成UTF-8！</strong></p><ul><li>另外需注意，MySQL是<code>utf8mb4</code>，不是那个有坑的<code>utf8</code>！</li></ul><p>如果系统已经上线，而且用了GBK编码，那就祈祷上线之前做过充分测试，然后用生僻字起名的人也没来找茬吧。</p><h1 id="如何理解乱码"><a href="#如何理解乱码" class="headerlink" title="如何理解乱码"></a>如何理解乱码</h1><h2 id="产生原因"><a href="#产生原因" class="headerlink" title="产生原因"></a>产生原因</h2><p>以“这是一段LuanMa乱码”为例。</p><p>用UTF-8编码（忽略BOM头）存储的话，文件内容是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">e8 bf 99 e6 98 af e4 b8 80 e6 ae b5 4c 75 61 6e 4d 61 e4 b9 b1 e7 a0 81</span><br><span class="line">-------- -------- -------- --------                   -------- --------</span><br><span class="line">   这       是        一       段    L  u  a  n  M  a     乱       码</span><br></pre></td></tr></table></figure><br>用GBK编码存储的话，文件内容是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d5 e2 ca c7 d2 bb b6 ce 4c 75 61 6e 4d 61 c2 d2 c2 eb</span><br><span class="line">----- ----- ----- -----                   ----- -----</span><br><span class="line">  这    是    一    段   L  u  a  n  M  a    乱    码</span><br></pre></td></tr></table></figure><br>如果内部是UTF-8，却按GBK编码处理，那么乱码就来了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">e8 bf 99 e6 98 af e4 b8 ...</span><br><span class="line">----- ----- ----- ----- </span><br><span class="line">  杩    欐    槸     涓   ...</span><br></pre></td></tr></table></figure><br>如果内部按GBK存储，却按UTF-8处理，结果也一样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d5   e2   ca  c7  d2 bb  b6   ce  4c ...</span><br><span class="line">--   --   --  --  -----  --   --  -- </span><br><span class="line">错误 错误 错误 错误    һ   错误 错误  L</span><br></pre></td></tr></table></figure><br>其中的“错误”表示无法按编码规则解析，会变成黑色菱形问号<code>�</code>(<code>ef bf bd</code>)。出现黑菱形的时候，数据就已经被破坏了。</p><h2 id="回答两个问题"><a href="#回答两个问题" class="headerlink" title="回答两个问题"></a>回答两个问题</h2><p>在看到乱码时，问自己两个问题：</p><ul><li>【原始字符串】的内部存储用了什么编码？</li><li>看到乱码的时候，是【谁】按照【哪种编码】【解析】了字符串的内部存储？</li></ul><p>无论是读取、写入还是传输，只要碰到乱码，就用这两个问题来询问自己，然后事情就会清楚一些。</p><h2 id="一些案例"><a href="#一些案例" class="headerlink" title="一些案例"></a>一些案例</h2><p>举一些Java（在Linux/Mac上运行）的案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String strNew = <span class="keyword">new</span> String(str.getBytes(<span class="string">&quot;GBK&quot;</span>), <span class="string">&quot;UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>我们假设原始字符串str的内部存储用了GBK编码。</li><li>【我们】按【UTF-8编码】【解析】了字符串str的内部存储。这样解析是错的，所以当然会产生乱码，程序代码也不应该这样写。</li></ul><p>&nbsp;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String strNew = <span class="keyword">new</span> String(str.getBytes(<span class="string">&quot;GBK&quot;</span>), <span class="string">&quot;GBK&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>我们假设原始字符串str的内部存储用了GBK编码。</li><li>我们按【GBK编码】【解析】了字符串str的内部存储。<ul><li><em>这样解析是对的，但是有意义吗？有，在Linux系统中Java内部用UTF-8存储字符串，这样实际上就把GBK内部存储无损地转成UTF-8内部存储了。</em></li></ul></li></ul><p>&nbsp;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String strNew = <span class="keyword">new</span> String(str.getBytes(<span class="string">&quot;ISO-8859-1&quot;</span>), <span class="string">&quot;UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>我们假设原始字符串str的内部存储用了ISO-8859-1编码。</li><li>【我们】按【UTF-8编码】【解析】了字符串str的内部存储，并保存到strNew中。<ul><li><em>理论上讲这样实现是错的，但是，由于用ISO-8859-1编码相当于使用原始的二进制存储，所以，只要原始二进制存储是按UTF-8存储的，这条语句就不会丢失数据，也不会产生乱码。</em></li></ul></li></ul><p>&nbsp;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.setCharacterEncoding(<span class="string">&quot;GBK&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>我们假设原始字符串（原始请求）的内部存储用了GBK编码。<ul><li><em>怎么用了GBK编码呢？<code>&lt;meta charset=&quot;GBK&quot;&gt;</code></em></li></ul></li><li>用户提交表单，向服务器发送请求时，让【request对象】按【GBK编码】【解析】原始请求。<ul><li><em>Tomcat呢？先假设它的配置是对的，没做过任何转换。</em></li></ul></li></ul><p>&nbsp;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.setCharacterEncoding(<span class="string">&quot;GBK&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li>要求response在内部存储使用GBK编码。</li><li>要求浏览器按GBK解析请求返回结果的内部存储。</li></ul><p>&nbsp;</p><p>先这样理解，后续有机会再详细讨论这些事。</p><h1 id="乱码现象"><a href="#乱码现象" class="headerlink" title="乱码现象"></a>乱码现象</h1><p>我们再认识一下各种乱码的样子，以后看到乱码之后大概就能猜测乱码原因了。</p><p>原文：这是一段LuanMa乱码</p><h2 id="一次转换"><a href="#一次转换" class="headerlink" title="一次转换"></a>一次转换</h2><div class="table-container"><table><thead><tr><th>现象描述</th><th>内容</th><th>这说明原文的内部存储是哪种编码</th><th>按哪种编码解析了</th><th>乱码内容的内部存储</th><th>备注</th></tr></thead><tbody><tr><td> 火星文</td><td>杩欐槸涓€娈礚uanMa涔辩爜</td><td>UTF-8</td><td>GBK</td><td>e8 bf 99 e6 98 af e4 b8 3f e6 ae b5 4c 75 61 6e 4d 61 e4 b9 b1 e7 a0 81</td><td>可以恢复大部分数据，但有损失（<code>3f</code>）</td></tr><tr><td> 黑色菱形问号</td><td>����һ��LuanMa����</td><td>GBK</td><td>UTF-8</td><td>ef bf bd ef bf bd ef bf bd ef bf bd d2 bb ef bf bd ef bf bd 4c 75 61 6e 4d 61 ef bf bd ef bf bd ef bf bd ef bf bd</td><td><code>ef bf bd</code>即无法解析时产生的“无效码”，无法恢复数据</td></tr><tr><td> 稀疏的拉丁字母</td><td>è¿æ¯ä¸æ®µLuanMaä¹±ç</td><td>UTF-8</td><td>ISO-8859-1</td><td>e8 bf 99 e6 98 af e4 b8 80 e6 ae b5 4c 75 61 6e 4d 61 e4 b9 b1 e7 a0 81</td><td>可以完整恢复数据</td></tr><tr><td> 稠密的拉丁字母</td><td>ÕâÊÇÒ»¶ÎLuanMaÂÒÂë</td><td>GBK</td><td>ISO-8859-1</td><td>d5 e2 ca c7 d2 bb b6 ce 4c 75 61 6e 4d 61 c2 d2 c2 eb</td><td>可以完整恢复数据</td></tr><tr><td> 问号</td><td>????LuanMa??</td><td>GBK / UTF-8</td><td>ISO-8859-1</td><td>3f 3f 3f 3f 4c 75 61 6e 4d 61 3f 3f</td><td>原始字符串就没有汉字，所以不可能恢复数据</td></tr></tbody></table></div><h2 id="二次转换（A→B→A）"><a href="#二次转换（A→B→A）" class="headerlink" title="二次转换（A→B→A）"></a>二次转换（A→B→A）</h2><p>在字符编码方面，“负负”叠加，结果不一定是“正”：</p><div class="table-container"><table><thead><tr><th>现象描述</th><th>内容</th><th>原始字符串的内部存储</th><th>你按哪种编码解析了</th><th>你又转换成了哪种编码 </th></tr></thead><tbody><tr><td> 锟斤拷</td><td>锟斤拷锟斤拷一锟斤拷LuanMa锟斤拷锟斤拷</td><td>GBK</td><td>UTF-8</td><td>GBK</td></tr><tr><td> 丢个别文字</td><td>这是�?段LuanMa乱码</td><td>UTF-8</td><td>GBK</td><td>UTF-8</td></tr></tbody></table></div><p>出现“锟斤拷”，是因为按UTF-8编码规则，解析内部存储是GBK的字符串时，部分字节无法解析，程序按照规范将那些无法解析的字节换成了<code>ef bf bd</code>。再将这串内容转回GBK时，就变成了“锟”（GBK：<code>ef bf</code>）或者“锟斤拷”（GBK：<code>ef bf   bd ef   bf bd</code>）。</p><p>出现“？”同样是因为按GBK编码规则无法解析，结果用“?”（<code>3f</code>）替代了。</p><p>“锟斤拷”或“?”都说明信息已经丢失，就算手持两把锟斤拷，口中疾呼烫烫烫，原始数据也找不回来了。由此可见，处理UTF-8和GBK两种编码时，必须把原始字符串的编码弄对，否则互转会丢失信息。</p><h2 id="二次转换（A→B→B）"><a href="#二次转换（A→B→B）" class="headerlink" title="二次转换（A→B→B）"></a>二次转换（A→B→B）</h2><p>如果已经做过A→B的转换，你对此不知情，又做了一遍A→B的转换：</p><div class="table-container"><table><thead><tr><th>现象描述</th><th>内容</th><th>A→B中的A</th><th>A→B中的B</th></tr></thead><tbody><tr><td> 火星文</td><td>鏉╂瑦妲告稉锟藉▓绀歶anMa娑旇京鐖�</td><td>UTF-8</td><td>GBK</td></tr><tr><td> ???</td><td>???????LuanMa????</td><td>GBK</td><td>UTF-8</td></tr></tbody></table></div><p>可以看到，无论是ABA，还是ABB，二次转换都会让乱码更乱。</p><p>遇到乱码，我们应该要做的是理清“内部存储是哪种编码”和“用哪种编码解析的”，而不是粗暴地再进行一遍转码。</p><h1 id="不一定是乱码的乱码"><a href="#不一定是乱码的乱码" class="headerlink" title="不一定是乱码的乱码"></a>不一定是乱码的乱码</h1><p>还有一种乱码，俗称“麻将牌”，样式为一个方块里面写入了几个数字（如下图所示）。这个不一定是乱码，有可能只是电脑系统缺字体。</p><p><img src="/img/2020-03-15-luanma-1/majiang.png" alt=""></p><p>把字体装好之后，如果麻将牌变成了火星文，那么才是真乱码，后续按火星文处理方式处理即可。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVhbnlpZmVuZy5jb20vYmxvZy8yMDEwLzAyL3VybF9lbmNvZGluZy5odG1s">关于URL编码<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9nZXJtaW5hdGUuZ2l0aHViLmlvLzIwMTYvR0JLJUU0JUI4JThFVVRGLTglRTclQkMlOTYlRTclQTAlODElRTklOTQlOTklRTglQUYlQUYlRTglQkQlQUMlRTYlOEQlQTIlRTUlOTAlOEUlRUYlQkMlOEMlRTYlOTclQTAlRTYlQjMlOTUlRTYlODElQTIlRTUlQTQlOEQv">GBK与UTF-8编码错误转换后，无法再正确恢复<i class="fa fa-external-link-alt"></i></span></li></ul><h1 id="本系列文章"><a href="#本系列文章" class="headerlink" title="本系列文章"></a>本系列文章</h1><ul><li><strong>乱码现象概述</strong></li><li><a href="/2020/03/21/luanma-2/">HTTP Request中文编码测试</a></li><li><a href="/2020/04/05/luanma-3/">Tomcat中文编码测试（Linux/Mac）</a></li><li><a href="/2020/04/06/luanma-3.5/">Tomcat中文编码测试（Windows）</a></li><li>MySQL中文编码测试</li><li>补救措施<ul><li>GBK页面，如何处理Ajax中文乱码问题</li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;编码转换和乱码问题令人头大。在理清编码问题之前，需要先认识一下各种乱码的样子。&lt;br&gt;</summary>
    
    
    
    <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
    <category term="乱码" scheme="https://plusnan.me/tags/%E4%B9%B1%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>使用脚本快速从本地提取、替换生产服务器class文件</title>
    <link href="https://plusnan.me/2020/03/02/quick-replace-file/"/>
    <id>https://plusnan.me/2020/03/02/quick-replace-file/</id>
    <published>2020-03-01T16:00:00.000Z</published>
    <updated>2020-05-04T15:53:02.104Z</updated>
    
    <content type="html"><![CDATA[<p>生产环境遇到bug，需要紧急修改几个Java文件，然后尽快部署到生产系统中。如果代码中混有其他改动，无法完整打包，那么如何尽快提取出改完的class文件并快速地放到服务器的正确位置呢？</p><a id="more"></a><h1 id="从本机提取文件"><a href="#从本机提取文件" class="headerlink" title="从本机提取文件"></a>从本机提取文件</h1><p>先在自己的IDE中把代码改出来，编译，运行。避免打WAR包，否则还要费心思解压，而且有些系统（例如Mac）解出来之后时间戳还不对。</p><p>重新生成的class文件的修改时间肯定比其他class文件新，这样我们就能用一些脚本将它们挑出来了。</p><h2 id="Windows系统"><a href="#Windows系统" class="headerlink" title="Windows系统"></a>Windows系统</h2><p>使用PowerShell脚本。放在 D:\tiqu.ps1 中：<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">CmdletBinding</span>()]</span><br><span class="line"><span class="keyword">Param</span> (</span><br><span class="line">    [<span class="built_in">string</span>] </span><br><span class="line">    <span class="variable">$from</span> = <span class="string">&#x27;.&#x27;</span>, </span><br><span class="line"></span><br><span class="line">    [<span class="built_in">string</span>]</span><br><span class="line">    <span class="variable">$to</span> = <span class="string">&#x27;..\output&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    [<span class="type">AllowNull</span>()]</span><br><span class="line">    [<span class="built_in">string</span>]</span><br><span class="line">    <span class="variable">$time</span>,</span><br><span class="line"></span><br><span class="line">    [<span class="type">AllowNull</span>()]</span><br><span class="line">    [<span class="built_in">int</span>]</span><br><span class="line">    <span class="variable">$min</span>,</span><br><span class="line"></span><br><span class="line">    [<span class="built_in">int</span>]</span><br><span class="line">    <span class="variable">$flat</span> = <span class="number">0</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$time</span>) &#123;</span><br><span class="line">    <span class="variable">$minTime</span> = [<span class="built_in">DateTime</span>]::ParseExact(<span class="variable">$time</span>, <span class="string">&#x27;hh:mm&#x27;</span>, <span class="variable">$null</span>)</span><br><span class="line">&#125; <span class="keyword">elseif</span> (<span class="variable">$min</span>) &#123;</span><br><span class="line">    <span class="variable">$minTime</span> = (<span class="built_in">Get-Date</span>).AddMinutes(-<span class="variable">$min</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$minTime</span> = [<span class="built_in">DateTime</span>]::ParseExact(<span class="string">&#x27;00&#x27;</span>, <span class="string">&#x27;hh&#x27;</span>, <span class="variable">$null</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建文件夹</span></span><br><span class="line"><span class="built_in">New-Item</span> <span class="literal">-Path</span> <span class="variable">$to</span> <span class="literal">-ItemType</span> Directory <span class="literal">-Force</span> | <span class="built_in">Out-Null</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索文件</span></span><br><span class="line"><span class="built_in">Push-Location</span> <span class="variable">$from</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$fileList</span> = <span class="built_in">Get-ChildItem</span> <span class="literal">-Path</span> . <span class="literal">-Recurse</span> | ? &#123;<span class="variable">$_</span>.LastWriteTime <span class="operator">-gt</span> <span class="variable">$minTime</span>&#125;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$file</span> <span class="keyword">in</span> <span class="variable">$fileList</span>) &#123;</span><br><span class="line">    <span class="variable">$relativePath</span> = <span class="built_in">Resolve-Path</span> <span class="literal">-Path</span> <span class="variable">$file</span>.FullName <span class="literal">-Relative</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$flat</span> <span class="operator">-eq</span> <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment"># 保持目录结构</span></span><br><span class="line">        <span class="built_in">Write-Output</span> <span class="variable">$relativePath</span></span><br><span class="line">        <span class="variable">$newPath</span> = <span class="built_in">Join-Path</span> <span class="literal">-Path</span> <span class="variable">$to</span> <span class="literal">-ChildPath</span> <span class="variable">$relativePath</span></span><br><span class="line">        <span class="variable">$newDir</span> = <span class="built_in">Split-Path</span> <span class="literal">-Path</span> <span class="variable">$newPath</span></span><br><span class="line">        <span class="built_in">New-Item</span> <span class="literal">-Path</span> <span class="variable">$newDir</span> <span class="literal">-ItemType</span> Directory <span class="literal">-Force</span> | <span class="built_in">Out-Null</span></span><br><span class="line">        <span class="built_in">Copy-Item</span> <span class="literal">-Path</span> <span class="variable">$file</span>.FullName <span class="literal">-Destination</span> <span class="variable">$newDir</span> <span class="literal">-Force</span> | <span class="built_in">Out-Null</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment"># 不保持目录结构，直接复制</span></span><br><span class="line">        <span class="built_in">Write-Output</span> <span class="variable">$file</span>.Name</span><br><span class="line">        <span class="built_in">Copy-Item</span> <span class="literal">-Path</span> <span class="variable">$file</span>.FullName <span class="literal">-Destination</span> <span class="variable">$to</span> <span class="literal">-Force</span> | <span class="built_in">Out-Null</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Pop-Location</span></span><br></pre></td></tr></table></figure><br>操作时，启动PowerShell，输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入到Web应用所在目录，IDEA通常是artifacts，Eclipse通常是WebRoot</span></span><br><span class="line"><span class="built_in">cd</span> X:\xxxxxx\out\artifacts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取5分钟之前到现在修改的文件，放到 ..\临时替换 目录中</span></span><br><span class="line">D:\tiqu.ps1 <span class="literal">-to</span> ..\临时替换 <span class="literal">-min</span> <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取从9:20到现在之间修改的文件，放到 ..\output 目录中</span></span><br><span class="line">D:\tiqu.ps1 <span class="literal">-time</span> <span class="number">09</span>:<span class="number">20</span> </span><br></pre></td></tr></table></figure><h2 id="Linux-Mac-Cygwin"><a href="#Linux-Mac-Cygwin" class="headerlink" title="Linux/Mac/Cygwin"></a>Linux/Mac/Cygwin</h2><p>将以下脚本放在<code>/usr/local/bin/tiqu</code>中，设置好<code>x</code>权限。</p><p>注意Mac系统自带getopt是BSD版本，功能比GNU版少，只支持一个字母的短参数，需另外安装gnu-getopt（后面假设安装到了<code>/usr/local/opt/gnu-getopt/bin/getopt</code>）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">help</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;tiqu [options]&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;默认值：把当前目录、当天修改文件放到 out 目录中&quot;</span></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;  --from=&lt;path&gt;, -f       指定待查找目录&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;  --to=&lt;path&gt;, -t         指定放置位置，如果没有则自动 mkdir&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;  --time=&lt;HH:mm&gt;          复制 HH:mm 之后修改的文件&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;  --min=&lt;min&gt;             复制从 min 分钟之前到现在的文件，和上面参数冲突&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;  --exclude=&lt;list&gt;, -e    复制时排除符合&lt;list&gt;规则的文件&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;  --exclude-from=&lt;file&gt;   复制时排除匹配了&lt;file&gt;规则配置列表文件的文件&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;  --flat, -b              把所有文件平摊到同一目录中，不要保持目录结构（默认值：保持目录结构）&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;  --help                  显示本帮助&quot;</span></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">fromPath=<span class="string">&quot;.&quot;</span></span><br><span class="line">toPath=<span class="string">&quot;./out&quot;</span></span><br><span class="line">findTime=<span class="string">&quot;00:00&quot;</span></span><br><span class="line">findMin=-1</span><br><span class="line">excludeCmd=<span class="string">&quot;&quot;</span></span><br><span class="line">flat=0</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 苹果系统</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/opt/gnu-getopt/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">TEMP=`getopt -o hf:t:e:b --long <span class="built_in">help</span>,from:,to:,time:,min:,exclude:,exclude-from,flat -- <span class="string">&quot;<span class="variable">$@</span>&quot;</span>`</span><br><span class="line"><span class="built_in">eval</span> <span class="built_in">set</span> -- <span class="string">&quot;<span class="variable">$TEMP</span>&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">        -f|--from)</span><br><span class="line">            fromPath=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">            <span class="built_in">shift</span> 2</span><br><span class="line">            ;;</span><br><span class="line">        -t|--to)</span><br><span class="line">            toPath=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">            <span class="built_in">shift</span> 2</span><br><span class="line">            ;;</span><br><span class="line">        --time)</span><br><span class="line">            <span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$2</span>&quot;</span> =~ ^[01]?[0-9]:[0-5][0-9]$ ]]; <span class="keyword">then</span></span><br><span class="line">                findTime=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> 错误：无效时间格式！</span><br><span class="line">                <span class="built_in">exit</span> 1</span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            <span class="built_in">shift</span> 2</span><br><span class="line">            ;;</span><br><span class="line">        --min)</span><br><span class="line">            findMin=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">            <span class="built_in">shift</span> 2</span><br><span class="line">            ;;</span><br><span class="line">        -e|--exclude)</span><br><span class="line">            excludeCmd=<span class="string">&quot;--exclude=\&quot;<span class="variable">$2</span>\&quot;&quot;</span></span><br><span class="line">            <span class="built_in">shift</span> 2</span><br><span class="line">            ;;</span><br><span class="line">        --exclude-from)</span><br><span class="line">            excludeCmd=<span class="string">&quot;--exclude-from=\&quot;<span class="variable">$2</span>\&quot;&quot;</span></span><br><span class="line">            <span class="built_in">shift</span> 2</span><br><span class="line">            ;;</span><br><span class="line">        -b|--flat)</span><br><span class="line">            flat=1</span><br><span class="line">            <span class="built_in">shift</span> 1</span><br><span class="line">            ;;</span><br><span class="line">        -h|--<span class="built_in">help</span>)</span><br><span class="line">            <span class="built_in">help</span></span><br><span class="line">            <span class="built_in">exit</span> 0</span><br><span class="line">            ;;</span><br><span class="line">        --)</span><br><span class="line">            <span class="built_in">shift</span></span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">            ;;</span><br><span class="line">        *)</span><br><span class="line">            <span class="comment"># echo &quot;Internal error!&quot;</span></span><br><span class="line">            <span class="comment"># exit 1</span></span><br><span class="line">            ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 计算时间</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$findMin</span> -eq -1 ]; <span class="keyword">then</span></span><br><span class="line">    IFS=: <span class="built_in">read</span> nowh nowm nows &lt;&lt;&lt; <span class="string">&quot;`date +%T`&quot;</span></span><br><span class="line">    IFS=: <span class="built_in">read</span> bh bm &lt;&lt;&lt; <span class="string">&quot;<span class="variable">$findTime</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    nowh=<span class="variable">$&#123;nowh#0&#125;</span></span><br><span class="line">    nowm=<span class="variable">$&#123;nowm#0&#125;</span></span><br><span class="line">    bh=<span class="variable">$&#123;bh#0&#125;</span></span><br><span class="line">    bm=<span class="variable">$&#123;bm#0&#125;</span></span><br><span class="line"> </span><br><span class="line">    findMin=$(((nowh*<span class="number">60</span>+nowm)-(bh*<span class="number">60</span>+bm)))</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$findMin</span> -lt 0 ]; <span class="keyword">then</span></span><br><span class="line">        findMin=0</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line">findMin=$((-findMin))</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 将toPath转成绝对路径</span></span><br><span class="line">mkdir -p <span class="string">&quot;<span class="variable">$toPath</span>&quot;</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$toPath</span>&quot;</span></span><br><span class="line">toPath=<span class="string">&quot;`pwd`&quot;</span></span><br><span class="line"><span class="built_in">cd</span> -</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用rsync复制文件</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$fromPath</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$flat</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 保持目录结构</span></span><br><span class="line">    find . -<span class="built_in">type</span> f -mmin <span class="variable">$findMin</span> -<span class="built_in">exec</span> rsync -aR &#123;&#125; <span class="string">&quot;<span class="variable">$toPath</span>&quot;</span> \;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="comment"># 不要保持目录结构</span></span><br><span class="line">    find . -<span class="built_in">type</span> f -mmin <span class="variable">$findMin</span> -<span class="built_in">exec</span> rsync -a &#123;&#125; <span class="string">&quot;<span class="variable">$toPath</span>&quot;</span> \;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 展示已复制文件</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$toPath</span>&quot;</span></span><br><span class="line">find .</span><br></pre></td></tr></table></figure><p>操作时：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入到Web应用所在目录，IDEA通常是artifacts，Eclipse通常是WebRoot</span></span><br><span class="line"><span class="built_in">cd</span> xxxxxx/out/artifacts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取5分钟之前到现在修改的文件，放到 ../临时替换 目录中</span></span><br><span class="line">tiqu --to=../临时替换 --min=5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取从9:20到现在之间修改到文件，放到 ./out 目录中</span></span><br><span class="line">tiqu --time=9:20 </span><br></pre></td></tr></table></figure><p>程序会自动搜索已修改文件，并且会按目录结构组织好，之后你就可以直接打包了。</p><h1 id="在服务器上替换（Linux）"><a href="#在服务器上替换（Linux）" class="headerlink" title="在服务器上替换（Linux）"></a>在服务器上替换（Linux）</h1><p>如果已经按目录结构整理好，直接解压替换（<code>unzip -o xxx.zip -d 应用所在目录</code>）便是。对于war包，可使用zip命令直接把文件替换到包里面（<code>cd xxx; zip -r war包 *</code>）。</p><p>如果提供的是散装的class文件，那么找目录会很费劲，可以借助脚本自动找目录，自动替换。可修改以下脚本中的MYBASE变量，然后保存到<code>/usr/local/bin/tihuan</code>中，加好<code>x</code>权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用所在位置。通常不会变化，可以写死在脚本里头。</span></span><br><span class="line">MYBASE=/opt/xxx</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">help</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;tihuan [options] 文件名1 文件名2 ...&quot;</span></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;  --to=&lt;path&gt;, -t         指定搜索目录（默认值：<span class="variable">$&#123;MYBASE&#125;</span>）&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;  --dry-run, -n           只生成命令，不要实际替换&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;  --force, -f             不用确认，直接动手替换&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;  --help                  显示本帮助&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 苹果系统</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/usr/local/opt/gnu-getopt/bin:<span class="variable">$PATH</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">TEMP=`getopt -o ht:nf --long <span class="built_in">help</span>,to:,dry-run,force -- <span class="string">&quot;<span class="variable">$@</span>&quot;</span>`</span><br><span class="line"><span class="built_in">eval</span> <span class="built_in">set</span> -- <span class="string">&quot;<span class="variable">$TEMP</span>&quot;</span></span><br><span class="line"></span><br><span class="line">toPath=<span class="string">&quot;<span class="variable">$MYBASE</span>&quot;</span></span><br><span class="line">dryrun=0</span><br><span class="line">force=0</span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">        -t|--to)</span><br><span class="line">            toPath=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">            <span class="built_in">shift</span> 2</span><br><span class="line">            ;;</span><br><span class="line">        -n|--dry-run)</span><br><span class="line">            dryrun=1</span><br><span class="line">            <span class="built_in">shift</span> 1</span><br><span class="line">            ;;</span><br><span class="line">        -f|--force)</span><br><span class="line">            force=1</span><br><span class="line">            <span class="built_in">shift</span> 1</span><br><span class="line">            ;;</span><br><span class="line">        -h|--<span class="built_in">help</span>)</span><br><span class="line">            <span class="built_in">help</span></span><br><span class="line">            <span class="built_in">exit</span> 0</span><br><span class="line">            ;;</span><br><span class="line">        --)</span><br><span class="line">            <span class="built_in">shift</span></span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">            ;;</span><br><span class="line">        *)</span><br><span class="line">            <span class="comment"># echo &quot;Internal error!&quot;</span></span><br><span class="line">            <span class="comment"># exit 1</span></span><br><span class="line">            ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">i=0</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">    i=$((i+<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ! [ -f <span class="string">&quot;<span class="variable">$file</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        &gt;&amp;2 <span class="built_in">echo</span> <span class="string">&quot;[文件 #<span class="variable">$&#123;i&#125;</span>] 源文件不存在：<span class="variable">$&#123;file&#125;</span>&quot;</span></span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    fileName=`basename <span class="string">&quot;<span class="variable">$file</span>&quot;</span>`</span><br><span class="line"></span><br><span class="line">    find <span class="string">&quot;<span class="variable">$toPath</span>&quot;</span> -name <span class="string">&quot;<span class="variable">$fileName</span>&quot;</span> &gt; /tmp/tmpfilelist</span><br><span class="line">    list=`cat /tmp/tmpfilelist`</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ -n <span class="string">&quot;<span class="variable">$list</span>&quot;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$list</span>&quot;</span> != <span class="string">&quot;\n&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;[文件 #<span class="variable">$&#123;i&#125;</span>] 已找到&quot;</span></span><br><span class="line"></span><br><span class="line">        cat /tmp/tmpfilelist | <span class="keyword">while</span> <span class="built_in">read</span> target; <span class="keyword">do</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$target</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$force</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> -n <span class="string">&quot;是否继续替换 [y/n]？&quot;</span></span><br><span class="line">            <span class="built_in">read</span> choice</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            choice=<span class="string">&quot;y&quot;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$choice</span>&quot;</span> == <span class="string">&quot;y&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">if</span> [ <span class="variable">$dryrun</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;[文件 #<span class="variable">$&#123;i&#125;</span>] 已进行替换&quot;</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;[文件 #<span class="variable">$&#123;i&#125;</span>] 请运行以下命令&quot;</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            cat /tmp/tmpfilelist | <span class="keyword">while</span> <span class="built_in">read</span> target; <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">if</span> [ <span class="variable">$dryrun</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">                    cp <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="string">&quot;<span class="variable">$target</span>&quot;</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="built_in">echo</span> <span class="string">&quot;cp \&quot;<span class="variable">$file</span>\&quot; \&quot;<span class="variable">$target</span>\&quot;&quot;</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;[文件 #<span class="variable">$&#123;i&#125;</span>] 已放弃替换&quot;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;[文件 #<span class="variable">$&#123;i&#125;</span>] 未找到文件，未进行替换&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">rm /tmp/tmpfilelist 2&gt; /dev/null</span><br></pre></td></tr></table></figure><p>操作时：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 此处省略下载文件与备份操作。实际操作时注意备份！</span></span><br><span class="line"><span class="comment"># 以下根据实际情况二选一</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 展开（exploded）模式</span></span><br><span class="line">tihuan XXXXX.class</span><br><span class="line"></span><br><span class="line"><span class="comment"># war包模式</span></span><br><span class="line">mkdir tmp</span><br><span class="line">unzip -o war包 -d tmp</span><br><span class="line">tihuan --to=tmp XXXXX.class</span><br><span class="line"><span class="built_in">cd</span> tmp</span><br><span class="line">zip -r 原先的war包 *</span><br></pre></td></tr></table></figure></p><h1 id="后续操作"><a href="#后续操作" class="headerlink" title="后续操作"></a>后续操作</h1><ul><li>本文的操作应当只用于应急处置。问题处理好之后，代码该提交提交，基线该打patch打patch，忘了的话就是极大的隐患。</li><li>这次事情紧急，直接从开发库中取了文件。给不紧急的bug打patch时，一定要取基线代码，从基线上打，打完再合并回去。</li><li>每次正式升级之前一定要打基线，从基线取代码，打整包，生产环境配置文件用事先预备好的备份覆盖升级包，不要单独换文件！换文件升级，有第一次，就会有第二次。越是换文件，后面就越不敢打整包，几个星期以后，全世界就没有人知道生产环境与本地代码有什么区别了。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;生产环境遇到bug，需要紧急修改几个Java文件，然后尽快部署到生产系统中。如果代码中混有其他改动，无法完整打包，那么如何尽快提取出改完的class文件并快速地放到服务器的正确位置呢？&lt;/p&gt;</summary>
    
    
    
    <category term="系统运维" scheme="https://plusnan.me/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="shell" scheme="https://plusnan.me/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>写文档的注意事项</title>
    <link href="https://plusnan.me/2020/02/20/how-to-write-document/"/>
    <id>https://plusnan.me/2020/02/20/how-to-write-document/</id>
    <published>2020-02-19T16:00:00.000Z</published>
    <updated>2021-01-13T16:32:22.260Z</updated>
    
    <content type="html"><![CDATA[<p>不写文档会挨骂，写烂文档更挨骂，写好文档，才能少挨骂。</p><a id="more"></a><h1 id="明确受众"><a href="#明确受众" class="headerlink" title="明确受众"></a>明确受众</h1><p>开始动笔之前，先问领导与自己：<strong>文档是写给谁看的？</strong></p><p>受众不同，文档的侧重点也要有所不同。</p><p>写给技术人员，文档的语言要尽可能精确，而且要明白他们关心的是什么内容。例如同样是写接口手册，开发人员文档要把重点放在接口规范方面，而运维文档要把重点放在接口服务的监控与维护方面。</p><p>写给用户时，文档的语言要直观，不必特别精确，能用通俗的语言描述，就不要用技术的语言描述；能用结构示意图、流程图、折线图、条形图、饼图等图片形式描述，就要避免用密密麻麻的文字描述。总之要让新手看得懂。至于特殊情况，能不提就不提，毕竟正常情况他们还不一定能看得懂呢。</p><h1 id="明确形式"><a href="#明确形式" class="headerlink" title="明确形式"></a>明确形式</h1><p>要确认好文档以什么形式展现：设计文档、操作说明书、汇报PPT？</p><p>特别是刚参加工作、没写过文档的新人，经常会犯些低级错误——明明让写需求文档，把系统具体实现写进去了；让写操作手册，却从需求文档复制粘贴，写了一堆业务规则，看完仍然不知道系统该点什么按钮；让做PPT，页面文字密密麻麻，别说投影，看屏幕都觉得累……</p><p>除了文件的格式，内容也要考虑好形式。例如设计文档要重点讲系统的功能实现，而操作说明书则要避免提及系统的内部原理，重点讲用户眼睛能看到的外部现象。还有技术文档要关注细节，而商务文档要注重表达形式，弱化细节。</p><h1 id="注意规范"><a href="#注意规范" class="headerlink" title="注意规范"></a>注意规范</h1><p>团队通常会制定文档模板和规范，开始编辑之前，先找领导同事要一份现成模板，然后再动手。不要随便自己找模板，不要违反文档规范。</p><p>文档要特别注意格式！例如：</p><ul><li>不要有错别字</li><li>英语单词拼写要正确，例如是MySQL而非mysql、MySql、MYSQL</li><li>标点符号要正确，特别是不要在中文中使用英文标点</li><li>字体、字号要统一</li><li>不要有多余空白</li><li>该对齐的地方要对齐</li></ul><p>关于格式方面的规则，可参考阮一峰《<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3J1YW55Zi9kb2N1bWVudC1zdHlsZS1ndWlkZQ==">中文技术文档的写作规范<i class="fa fa-external-link-alt"></i></span>》。</p><h1 id="表达准确"><a href="#表达准确" class="headerlink" title="表达准确"></a>表达准确</h1><p>即使不使用精确的技术语言，语言表达仍然要保持准确，以免产生分歧。</p><p>一方面要领会准确的文档需求。当领导在微信里发了一句“写清什么功能在哪里如何实现”，实际上你收到的是一个含糊的要求，需要与领导进行确认：这个要求的目的是什么？“哪里”是什么含义？指的是一个功能模块，还是一个操作步骤，还是一个文档的位置？“如何”又是什么含义？是某一套开发框架，还是一套业务流程，还是一句简单的“用Java开发”？</p><p>另一方面要避免模棱两可的语言表达。例如“系统对数据进行验证”，其中的“数据”就是含糊的词语，上下文要界定好这个“数据”到底是谁的“数据”，到底是“什么数据”，比方说“系统对用户输入数据进行验证”。较真的话，“验证”的形式、“验证”的时机也是可以进一步明确的。</p><p>面向用户的文档，要更加注意用户的语言体系。举一个例子，在政府系统中，你把“报备”误写成“审批”，虽然在系统实现上都是把CURRENT_STATE字段给UPDATE成某个字符，但在用户眼里这就是一个设计缺陷，因为这是两种性质完全不同的操作，点按钮所需的心理准备与点下去之后需要承担的责任都不一样。</p><h1 id="先完成后优化"><a href="#先完成后优化" class="headerlink" title="先完成后优化"></a>先完成后优化</h1><p>刚刚走出校园就进入职场的新人容易犯一个错误：总想着把工作做好再提交。</p><p>这正是职场大忌！假如你不熟悉工作，又没有及时与领导沟通，等你费尽九牛二虎之力勉强在deadline之前完成，领导却发现你写出来的东西根本不符合要求，那时候领导的心情一定是非常激动的，你以后的工作也会充满（负面）挑战。</p><p>工作质量很重要，用合适的方法按时完成同样重要。特别是职场新人，干活应当这样干：</p><ol><li>接到任务后，先稍微想一下整体思路，和分配任务的领导确认一下自己思路对不对。</li><li>不定期跟领导反馈自己做得怎么样，遇到问题及时找领导同事问。</li><li>不要糊弄，但是也要优先保证总体进度，先把“垃圾”堆出来，做出一个大体上说得过去的东西，然后再优化细节。</li></ol><h1 id="多读、多改"><a href="#多读、多改" class="headerlink" title="多读、多改"></a>多读、多改</h1><p>初稿肯定会有不少语文方面的问题，句子不通顺，语义不清楚，前后逻辑不连贯。因此，写完之后要通读文档，PPT的话还要试着讲一下，将整个文档顺一顺，大小毛病改一改，然后再从头检查一遍，重复以上几个步骤，直到大体满意为止。</p><p>直接提交不行吗？当然不行了！明明是自己能挑出来改好的低级错误，却放着交给别人检查，这就是在浪费别人时间，而且会让人觉得你工作态度不好。虽然你努力完善的结果可能也是返工，但返工原因由低级的格式问题变成高级的业务问题，至少不会让人太扫兴。</p><h1 id="版本管理"><a href="#版本管理" class="headerlink" title="版本管理"></a>版本管理</h1><p>文档应做好版本管理。</p><p>即便无法版本管理（例如净是些照片、Word、Excel、PowerPoint文件），至少要有个固定地方集中存放，而不是乱七八糟散落在邮箱附件、微信聊天记录、QQ群文件、张三电脑C盘、李四电脑D盘……特别是与外界沟通协调的文件，如果不集中管理，日后需要追查记录时便无处可寻，甚至会让外人觉得你们公司管理混乱。</p><p>文档要分门别类存放。就算要偷懒，至少文件名要有个规范（关键词、日期时间等），免得找不到。有心思的话，可以进一步基于ES搞一个搜索引擎（<code>TODO</code> 暂时未找到现成案例，待补完）。</p><p>对于内部开发文档，个人提倡使用纯文本与Markdown格式，不要使用Word格式。Word格式需要浪费时间排版，难以搜索，而且很难管理版本，而Markdown格式简洁明了，便于全文搜索，并且可以直接扔到SVN/Git仓库里面进行版本管理。</p><p>提倡使用一些专门的文档/知识库软件，例如<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0Jvb2tTdGFja0FwcC9Cb29rU3RhY2s=">BookStack<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly93d3cuZG9rdXdpa2kub3Jn">DokuWiki<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9tZWRpYXdpa2kub3JnLw==">MediaWiki<i class="fa fa-external-link-alt"></i></span>。这类软件操作方便，适合团队协作维护文档，又有版本管理功能，可随时检查修订记录。</p><h1 id="文档要随时维护，不要攒着"><a href="#文档要随时维护，不要攒着" class="headerlink" title="文档要随时维护，不要攒着"></a>文档要随时维护，不要攒着</h1><p>当用户需求、功能设计、接口规范、数据库结构等信息发生变化时，务必及时更新相应的文档。今天不把文档维护好，明天会有新的事情来烦扰你，让你更没有心思管文档，日积月累，最终变成一个大坑。</p><p>建议在小组安排一个专门的文档人员，在有人往工作群丢文件的时候，他/她能默默地把文件收集整理好。当一项阶段性任务完成的时候，也能把团队成员工作的素材给整理好。</p><p>如果没有专门的文档团队，那么在管理项目时应当将文档也作为开发任务之一来管理，将光写代码（特别是变更了设计的代码）、不维护相关开发文档视为没完成任务。</p><h1 id="平时抽空练习练习"><a href="#平时抽空练习练习" class="headerlink" title="平时抽空练习练习"></a>平时抽空练习练习</h1><p>很多技术人员的语言表达能力不强，一张嘴，虽然大佬心里清楚他是什么意思，但是一般萌新却难以理解。建议大家去CSDN、GitHub等网站开个博客，或者去知乎编点故事，用长篇回答装装逼，练习自己的语言表达能力、搜索资料的能力与整理信息的能力。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;不写文档会挨骂，写烂文档更挨骂，写好文档，才能少挨骂。&lt;/p&gt;</summary>
    
    
    
    <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="文档" scheme="https://plusnan.me/tags/%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>养成随手存档的习惯！</title>
    <link href="https://plusnan.me/2020/02/05/archive/"/>
    <id>https://plusnan.me/2020/02/05/archive/</id>
    <published>2020-02-04T16:00:00.000Z</published>
    <updated>2021-01-12T17:35:53.190Z</updated>
    
    <content type="html"><![CDATA[<p>网上的东西很容易消失，而中国网站的东西更容易“404”（“被”消失）。虽然我们无法改变中国“404”的制度，但是我们仍然可以学习一些存档与找回存档的操作方法，养成随手存档的习惯，及时备份对自己有意义的内容，尽量降低损失。</p><a id="more"></a><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>本文提及了一些网站和工具，然而很多都被墙了。<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JTlDJTg5JUU1JTg1JUIzJUU5JTgzJUE4JUU5JTk3JUE4">有关部门<i class="fa fa-external-link-alt"></i></span>要制造“404”，墙要守护“404”，那么想防“404”，不翻墙是不现实的。</p><p>有关部门到底是哪个部门呢？“有关部门当然就是有关的部门了。无关的就不能称为有关部门。所以我建议你还是要向他们询问。”</p><p>此外，即便单纯做存档也是有风险的，例如2020年4月19日端点星的三个志愿者被警方以“寻衅滋事”名义被捕。</p><h1 id="随手存档的重要性"><a href="#随手存档的重要性" class="headerlink" title="随手存档的重要性"></a>随手存档的重要性</h1><p>信息会随时消失！</p><p>消失与“被消失”太常见了，例如：</p><ul><li>“敏感话题”，甚至需要麻烦有关部门下令全网删除</li><li>为了避免招惹是非，网站主动屏蔽某些话题</li><li>为了遮羞、耍赖等，原始作者自行删除，或者修改内容</li><li>本来是免费的东西，突然开始会员专享，甚至开了会员也要另收费</li><li>本身就是违法的东西（例如盗版资源），结果被举报和执法了</li><li>网站改版，原先的位置与网址改没了</li><li>网站关站倒闭了</li><li>网站被有关部门勒令整改，下线了</li><li>……</li></ul><p>如果是言论审查，它的速度可以很快——快到当你还在看这个页面的时候，审核员早已让内容消失了。手速慢一点的话，也不过是几分钟到几小时的事情。</p><p>即使是外国网站，只要由中国人管理，内容照样可以“被消失”，只不过不像国内那样操作得太夸张而已。例如看起来像外国然而实际是中国公司运营的TikTok（<span class="exturl" data-url="aHR0cHM6Ly93d3cudGhlZ3VhcmRpYW4uY29tL3RlY2hub2xvZ3kvMjAxOS9zZXAvMjUvcmV2ZWFsZWQtaG93LXRpa3Rvay1jZW5zb3JzLXZpZGVvcy10aGF0LWRvLW5vdC1wbGVhc2UtYmVpamluZw==">案例<i class="fa fa-external-link-alt"></i></span>）、平台在美国而实际上很多管理员在中国的中文维基百科（<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmJjLmNvbS96aG9uZ3dlbi90cmFkL2NoaW5lc2UtbmV3cy00OTk1ODEyNw==">案例<i class="fa fa-external-link-alt"></i></span>）。不是中国人？只要想挣中国人的钱，有关部门仍然可以根据自己需要，随时对他们“今日说法”、“道德观察”、“法治进行时”，然后他们就不得不为了钱而考虑如何配合了。</p><p>就算是外国网站，外国人管理，中国人没有管理权限，只要内容发布者是中国人，警察随时可以去他们家串个门（顺便用“非法信道国际联网”这个理由罚点钱），然后内容也会随时消失。</p><p>因此，有必要学习一些存档与找回存档的方法。对自己有意义的信息要及时存档，以防丢失。</p><h1 id="如何存档（按工具）"><a href="#如何存档（按工具）" class="headerlink" title="如何存档（按工具）"></a>如何存档（按工具）</h1><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p>截屏是种简单粗暴的保存信息的方式，按几个按键就能搞定，快，而且转发分享也容易！</p><p>如果截屏还嫌慢，掏出手机，拍照录像，OK。</p><h3 id="电脑"><a href="#电脑" class="headerlink" title="电脑"></a>电脑</h3><p>Windows普通截图：</p><ul><li>按<kbd>Print Screen</kbd>键录制，然后去画图粘贴，保存</li><li>使用系统自带“截屏工具”截屏</li><li>使用QQ、微信等软件的截屏快捷键截屏</li></ul><p>Linux截图与桌面环境有关，略。</p><p>Mac普通截图：</p><ul><li><kbd>Command+Shift+3</kbd>：截全屏然后自动保存到桌面上</li><li><kbd>Command+Shift+3</kbd>：截取选定区域然后自动保存到桌面上 </li></ul><p>网站内容通常无法用一张图截全，那么如何进行长截图呢？</p><ul><li>Chrome：<kbd>F12</kbd>→<kbd>Ctrl+Shift+P</kbd>（苹果是<kbd>Command+Shift+P</kbd>）→Capture full size screenshot</li><li>Firefox：在页面点击右键，选择截图</li><li>Windows 10自带Edge浏览器：点击右上角“添加笔记”按钮</li><li>国产浏览器：通常自带截图功能</li></ul><h3 id="手机"><a href="#手机" class="headerlink" title="手机"></a>手机</h3><p>国产Android手机通常自带截长图的功能。如果没有，可安装PPIICC（需要root）。Android其他截屏软件可参见<span class="exturl" data-url="aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC80ODM3Mw==">此文章<i class="fa fa-external-link-alt"></i></span>。</p><p>苹果手机的长截图应用有Picsew、Tailor等，另外App Store里面还有一些其他的截图应用（连“百毒”都来凑了热闹）。</p><p>新版iOS系统自带长截图，然而这个功能限定在自带的Safari浏览器中，而且截出来的是PDF格式。</p><h3 id="拼接截图"><a href="#拼接截图" class="headerlink" title="拼接截图"></a>拼接截图</h3><p>有些内容太长了，用长截图工具也截不全，此时可以分段截，截完再使用其他软件拼接。</p><p>用什么软件拼接？电脑的话就是画图或Photoshop。手机的话可参考<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI5MjYzNzQ3">知乎回答<i class="fa fa-external-link-alt"></i></span>。</p><h2 id="录屏"><a href="#录屏" class="headerlink" title="录屏"></a>录屏</h2><p>录屏也是一种记录方法。然而  视频截屏不太方便传播，也不太方便阅读，建议确实有必要的时候才录屏。</p><ul><li>Windows/Linux电脑：推荐使用<span class="exturl" data-url="aHR0cHM6Ly9vYnNwcm9qZWN0LmNvbS8=">OBS Studio<i class="fa fa-external-link-alt"></i></span>软件录屏，很多游戏主播用的就是该软件</li><li>苹果电脑：使用系统自带的QuickTime即可录屏</li><li>Android设备：参见<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI0MTY3Mjg1">知乎提问<i class="fa fa-external-link-alt"></i></span></li><li>iPhone/iPad：从iOS 11开始已经是<span class="exturl" data-url="aHR0cHM6Ly9zdXBwb3J0LmFwcGxlLmNvbS96aC1jbi9IVDIwNzkzNQ==">系统自带功能<i class="fa fa-external-link-alt"></i></span></li></ul><h2 id="互联网档案馆（推荐）"><a href="#互联网档案馆（推荐）" class="headerlink" title="互联网档案馆（推荐）"></a>互联网档案馆（推荐）</h2><p><span class="exturl" data-url="aHR0cHM6Ly9hcmNoaXZlLm9yZy8=">archive.org<i class="fa fa-external-link-alt"></i></span>（互联网档案馆，又名时光机）与<span class="exturl" data-url="aHR0cDovL2FyY2hpdmUuaXMv">archive.is<i class="fa fa-external-link-alt"></i></span>是两个常用的归档网站。只要在里面输入网址，点击保存，页面内容就会被抓取下来。之后也可以通过这两个网站查阅网站存档记录。因为这样非常有利于防止“404”，所以很早就获得了墙的认证。</p><p>截图与转载都可以造假，而归档网站保存的是网页原貌、网页原始网址与原始时间，不太可能造假。</p><p>建议在浏览器安装一个归档插件，例如Save To The Wayback Machine（<span class="exturl" data-url="aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvc2F2ZS10by10aGUtd2F5YmFjay1tYWNoaS9lZWJwaW9hYWlsYmpvam1kYm1scG9tZmdpam5sY2Vtaz9obD1lbg==">Chrome版<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9hZGRvbnMubW96aWxsYS5vcmcvZW4tVVMvZmlyZWZveC9hZGRvbi9zYXZlLXRvLXRoZS13YXliYWNrLW1hY2hpbmUv">Firefox版<i class="fa fa-external-link-alt"></i></span>），这样就方便随手归档了。一旦页面404，你和其他人都可以用此插件方便地查阅档案馆记录。</p><p>如果网站需要登录才能访问，或者限制国外IP访问，那么归档起不到作用了。而且，archive.org会遵守robots规范（User-Agent: ia_archiver），如果网站在robots.txt中明确拒绝归档，那么archive.org就不会保存内容，需要改用archive.is存档。</p><p>网上有很多喜欢“黑屁”、“指点江山”的智障，如果想怼他们，可以随时给他们的“高雅创作”、“高谈阔论”存档。打脸之后，不接受、不承认？甚至要自我削除，毁灭证据？那就把档案馆链接拿出来让大家看看！</p><h2 id="Evernote-OneNote"><a href="#Evernote-OneNote" class="headerlink" title="Evernote / OneNote"></a>Evernote / OneNote</h2><p>Evernote（中国版称作“印象笔记”，账号内容与国际版隔离）与OneNote是两个笔记软件，均具备收藏网页内容的功能。</p><p>Evernote对网页内容提取得比较好。像新闻资讯等网站，它会聪明地提取出标题与正文，基本上不需要进一步加工精炼。然而，Evernote免费账号只允许登录两个设备，笔记容量也有很大限制，而且中国版的“印象笔记”不支持分享功能。</p><p>OneNote提取，可以选择截图、纯文字或选区。个人感觉在内容提取方面不如Evernote好用，但是在笔记整理方面优于Evernote。</p><p>个人建议：如果想提取图文，不想直接截图，那么用Evernote保存、抓取内容。如果要进一步整合资源，形成论文、报告什么的，就切换到OneNote整理。</p><h2 id="下载到本地"><a href="#下载到本地" class="headerlink" title="下载到本地"></a>下载到本地</h2><p>将网上的内容下载到本地是最安全的方法之一。只要磁盘没坏，没感染病毒，没被勒索软件勒索，没有误删，资源就不会丢失。</p><p>如果要保存网页，只需轻轻地Ctrl+S，然后点击保存就可以了。</p><p>但是，保存完成后记得检查一下，因为有些网站会设法阻止你保存东西，存完也是一堆乱七八糟的程序代码。像音乐网站、视频网站等特殊网站，干脆不能Ctrl+S（除非你只想保存评论区），需要找一些专用的下载工具才行。</p><h2 id="爬虫程序"><a href="#爬虫程序" class="headerlink" title="爬虫程序"></a>爬虫程序</h2><p>网络爬虫太常见了。会编程的话，就可以到网上搜一些爬虫程序的案例，自己写个爬虫扒网站内容。有需要的话可以再买台服务器，或者找个闲置电脑，定时跑程序，实现自动归档。</p><p>如果要爬特定网站，也可以在搜索时把网站名加上，看看有没有现成的程序。</p><h1 id="如何存档（按来源）"><a href="#如何存档（按来源）" class="headerlink" title="如何存档（按来源）"></a>如何存档（按来源）</h1><h2 id="普通网站"><a href="#普通网站" class="headerlink" title="普通网站"></a>普通网站</h2><p>上面提到的几种方法都可以试试。</p><h2 id="微信"><a href="#微信" class="headerlink" title="微信"></a>微信</h2><p>微信非常容易炸！</p><h3 id="微信账号"><a href="#微信账号" class="headerlink" title="微信账号"></a>微信账号</h3><p>已经有大量案例证实：只是在群里或者朋友圈里发句牢骚，账号可能就会被腾讯给封禁。而且，封号还算是轻的，有些人更倒霉，只是群里发了关于领导人的一句话，就让警察带走了。  </p><p>由于微信经常关联了大量现实生活的东西，例如身份认证、联系人、零钱、生活工作通信群组等，这些东西都无法做备份（不嫌麻烦的话倒是可以手工备份联系人），所以建议微信只用于日常联系，不转载东西，不发表任何评论，也不发牢骚。真想谈天论地的时候，只把微信当作引流工具，然后去Telegram等软件里面聊。</p><p>那微信语音行不？你想想，既然微信能把你的语音转成文字，而且能翻译个八九不离十，那么语音聊天的时候难道不能顺便给你识别识别吗？</p><h3 id="微信公众号"><a href="#微信公众号" class="headerlink" title="微信公众号"></a>微信公众号</h3><p>微信公众号更严。文章能发出来，说明至少通过了微信程序的敏感词检测。如果用拼音、火星文、图片等手段绕过检测，后面再让审核员审核、“热心网友”举报便是。该炸的内容早晚会炸。</p><p>如果只是一两篇文章，存档就比较简单了。微信公众号也是网页，所以公众号的存档方式与普通网站差不多：截屏、扔互联网档案馆、用电脑点开保存……</p><p>可是，如果想把整个公众号内容都导出来呢？比较麻烦，但<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzIyMTE0NDUx">知乎上有人提供了一些解决方案<i class="fa fa-external-link-alt"></i></span>（<span class="exturl" data-url="aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMjAwNDIzMTMxMzQ0L2h0dHBzOi8vd3d3LnpoaWh1LmNvbS9xdWVzdGlvbi8yMjExNDQ1MQ==">存档<i class="fa fa-external-link-alt"></i></span>）</p><p>自己写导公众号程序的话，大概有两种思路，一种是模拟浏览器访问，另一种是借助工具抓包，然后用程序整理抓包数据。</p><h2 id="微博"><a href="#微博" class="headerlink" title="微博"></a>微博</h2><p>微博也很容易炸！</p><p>不幸的是，微博无法通过互联网档案馆存档。而且，由于微博平台越来越封闭，防爬措施也越来越多，以前能用的导出工具现在可能都失效了。</p><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmxpdWd1b2ZlbmcuY29tL3AvNTY3MA==">Octoman<i class="fa fa-external-link-alt"></i></span>是目前（2020年2月）能够使用的一款微博导出工具。</p><p>微博评论呢？看起来只能截屏、手工复制粘贴，或者自己写爬虫爬吧。</p><h2 id="音视频网站"><a href="#音视频网站" class="headerlink" title="音视频网站"></a>音视频网站</h2><p>音视频网站比较特殊，不能截图，也不能扔互联网档案馆存档，所以要用一些工具把视频下载到本地，（有需要的话）再找地方重新上传。</p><p>国内主流网站差不多都能用<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NvaW1vcnQveW91LWdldA==">you-get<i class="fa fa-external-link-alt"></i></span>下载，你可以用该工具碰碰运气。</p><p>假设你使用Windows系统，那么该工具的安装方法如下：</p><ol><li>安装<span class="exturl" data-url="aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3dubG9hZHMv">Python 3<i class="fa fa-external-link-alt"></i></span>。在安装程序中，务必勾选“Add Python 3.x to PATH”。</li><li>打开命令提示符</li><li>输入<code>pip3 install you-get</code>。有时候网络不好，需要反复试几次才能成功。</li><li>安装完成。</li></ol><p>需要下载的时候，也是先打开命令提示符，然后输入<code>you-get 网址</code>（把“网址”二字换成实际的网站的网址。需要粘贴时，要点击右键选择粘贴，不能按Ctrl+V）。下载完成后，去C盘的用户文件夹中即可找到文件。国内很多音视频网站只允许国内访问，下载时尽量不要挂梯子。</p><p>建议每次下载视频之前先升级一下you-get的版本，防止工具失效：<code>pip3 install --upgrade you-get</code></p><h1 id="如何找回已删内容"><a href="#如何找回已删内容" class="headerlink" title="如何找回已删内容"></a>如何找回已删内容</h1><p>删除，通常意味着在中国国内都会消失，所以找回已删内容当然要翻墙去墙外寻找。</p><h2 id="互联网档案馆"><a href="#互联网档案馆" class="headerlink" title="互联网档案馆"></a>互联网档案馆</h2><p>如果你记得网站的网址，可以到<span class="exturl" data-url="aHR0cHM6Ly9hcmNoaXZlLm9yZy8=">archive.org<i class="fa fa-external-link-alt"></i></span>或<span class="exturl" data-url="aHR0cDovL2FyY2hpdmUuaXMv">archive.is<i class="fa fa-external-link-alt"></i></span>等网站碰运气，看有没有人提交过存档。</p><h2 id="Google搜索"><a href="#Google搜索" class="headerlink" title="Google搜索"></a>Google搜索</h2><p>如果你还记得资料的名字或内容，可以将名字或文章中的一两句话用作Google搜索的关键词，查看网上是否还有转载与备份。有时虽然内容已删，但Google自己还留着一个快照，可以在快照失效之前尽快把内容导出来。</p><h2 id="专项计划"><a href="#专项计划" class="headerlink" title="专项计划"></a>专项计划</h2><p>有些网站会专门搜集容易遭到删除，甚至已经遭到删除的信息</p><ul><li><span class="exturl" data-url="aHR0cHM6Ly9jaGluYWRpZ2l0YWx0aW1lcy5uZXQvY2hpbmVzZS8=">中国数字时代<i class="fa fa-external-link-alt"></i></span>：该网站由加州大学伯克利分校信息学院“逆权力实验室”（Counter-Power Lab）提供技术支持，重点关注中国的言论审查，每天会收集一些媒体与自媒体等方面的时政类内容。有时可以在该网站找到一些已经在中国被全网删除的内容或言论。</li><li><span class="exturl" data-url="aHR0cHM6Ly9mcmVld2VpYm8uY29tLw==">自由微博<i class="fa fa-external-link-alt"></i></span>：该网站会专门搜集已经遭到屏蔽的微博内容。</li><li><span class="exturl" data-url="aHR0cHM6Ly9mcmVld2VjaGF0LmNvbS8=">自由微信<i class="fa fa-external-link-alt"></i></span>：该网站专门搜集已经遭到屏蔽的微信公众号内容。</li><li><span class="exturl" data-url="aHR0cHM6Ly90ZXJtaW51czIwNDkuZ2l0aHViLmlvLw==">端点星计划<i class="fa fa-external-link-alt"></i></span>：该网站通过GitHub搭建，也是专门搜集微博微信被删内容的网站。</li></ul><h1 id="分享存档"><a href="#分享存档" class="headerlink" title="分享存档"></a>分享存档</h1><p>如果想做点好事，可以在看到“404”资料还尚未删除时随手存个档，然后再把存档和原始出处（如果还没被404）分享出去，或者单纯地教会别人如何存档。分享时尽量放到有关部门管不到、中国人管不到、在中国也没有重要业务的外国平台，例如：</p><ul><li>普通内容：美国的Facebook、美国的Twitter、美国的Reddit、俄罗斯的VK（不过基本上都是俄国人在用）</li><li>音视频：美国的YouTube、德国的SoundCloud</li><li>文章：美国的Facebook、美国的Blogger、（从俄罗斯跑到）阿联酋的<span class="exturl" data-url="aHR0cHM6Ly90ZWxlZ3JhLnBo">Telegraph<i class="fa fa-external-link-alt"></i></span></li><li>图床（将图片上传上去，网站会生成一个可供分享的链接）：美国的Imgur</li><li>保存到网盘：美国的Dropbox、美国的Google Drive、新西兰的Mega</li><li>自建服务器：使用美国、韩国、日本等公司提供的资源<ul><li>想搞盗版的话得换个地方，找俄罗斯、荷兰、瑞典、保加利亚、罗马尼亚这类对版权管得松的国家</li><li>如果需求更特殊，例如“炼铜”（这个有<span class="exturl" data-url="aHR0cHM6Ly93d3cudW4ub3JnL2NoaW5lc2UvY2hpbGRyZW4vaXNzdWUvY3JjX29wMS5zaHRtbA==">国际公约<i class="fa fa-external-link-alt"></i></span>，基本上去哪里建服务器都算犯罪，包括北朝鲜），那么还是去暗网吧</li><li>建议不要自建服务器，一方面容易被黑，另一方面需要费心思持续运营，如果服务不靠谱，甚至“删库跑路”，会给自己与别人带来麻烦</li></ul></li><li>然后再借助（从俄罗斯跑到）阿联酋的Telegram、美国的Whatsapp、美国的Discord、美国的Signal、日本的LINE等聊天工具分享以上信息</li></ul><p>除了主流平台，还有些另类的点子，比方说上传到加拿大的黄网Pornhub——<span class="exturl" data-url="aHR0cHM6Ly9wb3JuaHViLmNvbS92aWV3X3ZpZGVvLnBocD92aWV3a2V5PXBoNWMwNDkxODk4NDgwZg==">张宇考研数学<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9wb3JuaHViLmNvbS92aWV3X3ZpZGVvLnBocD92aWV3a2V5PXBoNWQ0NmI0YTYxZTQ3Zg==">怒斥港记<i class="fa fa-external-link-alt"></i></span>，或者上传到不属于任何国家的区块链——<span class="exturl" data-url="aHR0cHM6Ly9ldGhlcnNjYW4uaW8vdHgvMHgyZDZhN2IwZjZhZGVmZjM4NDIzZDRjNjJjZDhiNmNjYjcwOGRkYWQ4NWRhNWQzZDA2NzU2YWQ0ZDhhMDRhNmEy">北大岳昕公开信<i class="fa fa-external-link-alt"></i></span>——只要Hash还在，信息就永远不会被消失了。</p><p>虽然以上各渠道全都要翻墙，但是发到普通人进不去的地方总比在网上彻底消失强，对吧。</p><p>如果是敏感或违法信息，分享到外国平台时还要注意两个问题：</p><ol><li>不要暴露自己国内身份，以免被国内执法，或者被各类“低端网民”人肉骚扰。</li><li>不要违反目标网站所在国的法律，例如美国网站版权管得比较严格，不要跑美国网站上分享侵权的东西（特别是音视频），否则会被投诉删除。</li></ol><p>另外不要依赖单一途径。例如2020年12月美国的《纽约时报》<span class="exturl" data-url="aHR0cHM6Ly93d3cubnl0aW1lcy5jb20vMjAyMC8xMi8wNC9vcGluaW9uL3N1bmRheS9wb3JuaHViLXJhcGUtdHJhZmZpY2tpbmcuaHRtbA==">发表文章<i class="fa fa-external-link-alt"></i></span>批判加拿大的Pornhub，于是几天之内里面上千万影片都被Pornhub自己给下架了。尽管正常人不会在黄网保存重要内容，这仍是一个教训：外国正规大厂网站也是不靠谱的。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li>《<span class="exturl" data-url="aHR0cHM6Ly90ZWxlZ3JhLnBoLyVFNiU4RSVBOCVFOCU4RCU5MCVFOSU5OCU4NSVFOCVBRiVCQiVFNiU5NSVCMCVFNSVBRCU5NyVFNiU5RSU4MSVFNiU5RCU4MyVFNiU5NyVCNiVFNCVCQiVBMyVFNyU5NCU5RiVFNSVBRCU5OCVFNiU4OSU4QiVFOCVBRSVCMC12MTEtMTAtMjg=">数字极权时代生存手记<i class="fa fa-external-link-alt"></i></span>》</li><li>《<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNodXppeWltaW4ub3JnLzM2MA==">如何找回被删除的网页/新闻<i class="fa fa-external-link-alt"></i></span>》</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;网上的东西很容易消失，而中国网站的东西更容易“404”（“被”消失）。虽然我们无法改变中国“404”的制度，但是我们仍然可以学习一些存档与找回存档的操作方法，养成随手存档的习惯，及时备份对自己有意义的内容，尽量降低损失。&lt;/p&gt;</summary>
    
    
    
    <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
    <category term="archive" scheme="https://plusnan.me/tags/archive/"/>
    
  </entry>
  
  <entry>
    <title>如何正确地打日志</title>
    <link href="https://plusnan.me/2020/01/22/logger/"/>
    <id>https://plusnan.me/2020/01/22/logger/</id>
    <published>2020-01-21T16:00:00.000Z</published>
    <updated>2020-05-18T03:36:16.558Z</updated>
    
    <content type="html"><![CDATA[<p>在程序中打日志很简单，<code>logger.debug(&quot;Hello, Happy World!&quot;)</code>，OK。可是，正确地打日志并不简单，需要注意以下几个问题。</p><a id="more"></a><h1 id="日志的目的"><a href="#日志的目的" class="headerlink" title="日志的目的"></a>日志的目的</h1><p><strong>备注：本文中的“日志”专指程序内部日志。</strong></p><p>打日志是为了记录程序的运行情况，这样可以：</p><ul><li>确认事件发生顺序、时间节点</li><li>记录问题，便于在系统发生异常时定位问题、解决问题。</li><li>在多线程、集群等复杂环境中，利用日志分析时序</li><li>监控某些程序的状态</li><li>……</li></ul><p>因此，日志要记好有助于解决问题的各类信息，不要堆积无助于解决问题的垃圾，而且要遵循一定的规范，便于查找、定位。</p><p>在这里向没有开发经验的人强调一下：生产系统的日志量非常大，而且出于性能考虑不会展示调试日志。在海量日志中找信息是件很麻烦的事情，请不要给维护人员挖坑。</p><h1 id="日志的内容"><a href="#日志的内容" class="headerlink" title="日志的内容"></a>日志的内容</h1><p>通过日志，应该能快速地了解“什么时间在哪里大概发生了什么事”，猜到“大概是什么原因导致了问题”，然后进一步定位程序代码，确认问题、解决问题。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">2020-01-02 12:34:56 [UserService] WARN 查询用户不存在，uid &#x3D; 1234567890</span><br><span class="line">2020-01-03 12:45:06 [AuthService] INFO 实名核验成功，uid &#x3D; 1234567899，身份证号 &#x3D; 110101123412341234，耗时 &#x3D; 12ms</span><br><span class="line">2020-01-04 12:56:01 [InfoService] ERROR 用户保存个人信息时发生异常</span><br><span class="line">java.sql.SQLException: ORA-12899: value too large for column &quot;XXXXX&quot;.&quot;YYYYY&quot;.&quot;ZZZZZ&quot; (actual: 60, maximum: 30)</span><br><span class="line">        at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:445)</span><br><span class="line">        at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)</span><br><span class="line">        ......</span><br></pre></td></tr></table></figure><p>一条日志应该包含以下内容：</p><ul><li><strong>时间（“何时”）</strong>：日志要记录事件的发生时间。<ul><li>日志组件记录的实际上是“打日志的时间”，而非“事件发生时间”。不过，通常事件执行时间很短，这个差异可以忽略不计。</li><li>如果事件执行时间比较长，“时间”就要区分为“发生时间”、“结束时间”和“持续时间”。</li></ul></li><li><strong>具体位置（“何地”）</strong>：记录事件于哪个模块、文件、函数等产生。建议至少把模块名打上，以便翻代码。</li><li><strong>事件简要描述（“什么事情”）</strong>：看到日志之后大概能猜到发生了什么事情。语言要简洁。<ul><li>不好的例子：“发生错误”、“数据库异常”、“数据不存在”</li><li>好的例子：“查询用户信息时产生异常”、“执行用户信息保存时数据库异常”、“用户id不存在”</li><li>建议描述文字不要完全相同。比方说，都是“数据查询失败”，其中一处可以写成“数据查询失败了”，而另一处写成“数据查询的失败”，这样便于直接使用全文搜索功能查代码。</li></ul></li><li><strong>日志等级</strong>：把日志等级写好，出问题时就可以根据问题的严重性来找日志。</li><li><strong>上下文</strong>：例如<ul><li>异常的堆栈</li><li>重要参数：有时需要复现问题，可以记录某些重要参数（例如uid）以便还原现场</li><li>重要状态变化：例如线程启动/中断、特殊进程进入/退出等</li></ul></li></ul><p>在开发时要用团队封装好的框架，不要自己造轮子。</p><h1 id="日志的等级"><a href="#日志的等级" class="headerlink" title="日志的等级"></a>日志的等级</h1><p>以Java为例，Java日志通常分为ERROR、WARN、INFO、DEBUG和TRACE。其他语言和框架情况类似。</p><p>这几个级别用法通常如下：</p><ul><li>ERROR：记录影响系统与业务的严重问题，例如系统异常、数据库故障等。</li><li>WARN：记录“确实是问题，不过不耽误使用”的问题，以便后续跟踪检查。</li><li>INFO：比较重要的信息，例如系统参数、线程启动/结束、特殊任务等。</li><li>DEBUG、TRACE：记录开发调试过程中的细节。这类信息只要能方便开发人员调试即可。在生产环境中，这类信息应该被屏蔽掉，不往日志里头打，或者仅在跟踪问题时临时启用，用完之后立刻关掉。</li></ul><h1 id="打日志的位置"><a href="#打日志的位置" class="headerlink" title="打日志的位置"></a>打日志的位置</h1><p>假设信息查询的堆栈如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">QueryController.queryInfo()</span><br><span class="line">    UserService.getUserInfo()</span><br><span class="line">        UserDAO.getUser()</span><br><span class="line">        RoleDAO.getRole()</span><br><span class="line">    InfoService.getInformation()</span><br><span class="line">        InfoDAO.getInfo()</span><br><span class="line">    InfoCommonMethod.generateOutput()</span><br></pre></td></tr></table></figure><br>捕获异常、输出异常日志的操作尽量都交给最外层的调用方，即上面的<code>QueryController.queryInfo()</code>。</p><p>里层的函数（<code>UserService.getUserInfo()</code>、<code>UserDAO.getUser()</code>等）在抛出异常时不要打日志。否则里面打一遍，外面打一遍，日志就重复了。</p><p>像下面这样写函数就是在坑人：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUser</span><span class="params">(String param ...)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 业务逻辑</span></span><br><span class="line">        ...</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        logger.error(<span class="string">&quot;错误&quot;</span>, e);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// 清理</span></span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码存在三个问题：</p><ol><li>发生异常时，异常直接catch掉，未往上抛（<code>throw e;</code>），导致调用者无法捕获异常。</li><li>在此处打日志，调用者捕获异常之后还要打日志，日志信息就重复了。</li><li>如使用数据库事务（例如Spring的@Transactional），那么将无法正确回滚，导致状态错误。</li></ol><h1 id="日志文件"><a href="#日志文件" class="headerlink" title="日志文件"></a>日志文件</h1><p>不要假设日志全部都会输出到屏幕上，或者全部输出到特定的日志文件中！</p><p>日志输出目标是可以调整的，例如直接输出到stdout/stderr（生产环境不会这样干）、输出到特定日志文件、输出到数据库，或输出到特定的日志服务器中。日志不仅可以输出到单个文件，也可以根据子系统、日志级别、日志目的、日期时间等条件将日志拆分成多个文件。</p><p>因此要杜绝用<code>System.out.println()</code>、<code>System.error.println()</code>与<code>e.printStackTrace()</code>打日志！这样打出来的日志，不仅缺乏信息，而且有可能会打错地方，让人找不到。</p><p>第三方接口务必要打日志，而且不仅要记一些关键参数，还要便于查询（例如放入专门的XX公司接口日志文件中），以免出问题时互相踢皮球。</p><h1 id="其他的坑"><a href="#其他的坑" class="headerlink" title="其他的坑"></a>其他的坑</h1><ul><li><code>catch</code>里面不要空着。遇到异常时，如果不处理，不上抛，也不打日志，一旦出现问题，就把大家全都坑了。</li><li>不要只输出<code>e.getMesssage()</code>，要输出整个堆栈，否则难以定位。</li><li>不要把详细信息（特别是堆栈）暴露给用户。<ul><li><em>如果感觉模糊地提示“错误”不利于解决问题，可以设计一个公共函数，将常见错误信息转换成给火星人看的错误代码，就像蓝屏的0x0000021A那样，再告诉用户“系统错误，代码0x0000021A”。这样懂的人自然懂，不懂的人很难懂。</em></li></ul></li><li>再强调一遍，不要<code>System.out.println()</code>、<code>System.error.println()</code>与<code>e.printStackTrace()</code>。这样打，不仅缺乏信息，而且有可能会打错地方，让人找不到。</li><li>生产环境不要打DEBUG日志，否则影响性能。生产系统部署时，应通过配置文件或开关调整日志等级，把DEBUG日志屏蔽掉。<ul><li><em>系统刚上线时，为了便于调整，可能也会把DEBUG日志打出来。此时要留意服务器磁盘空间，别让日志把磁盘撑爆。</em></li></ul></li><li>日志是各线程公用的。需要换行的话，要先使用<code>\n</code>拼接字符串，拼好之后一口气打出来。多次执行打日志语句，日志内容可能会被其他业务打断。</li><li>频繁执行的代码、数据量大的数据要尽量避免打调试日志，同样影响性能。</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;在程序中打日志很简单，&lt;code&gt;logger.debug(&amp;quot;Hello, Happy World!&amp;quot;)&lt;/code&gt;，OK。可是，正确地打日志并不简单，需要注意以下几个问题。&lt;/p&gt;</summary>
    
    
    
    <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="日志" scheme="https://plusnan.me/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>账号功能需求</title>
    <link href="https://plusnan.me/2020/01/20/user-account-0/"/>
    <id>https://plusnan.me/2020/01/20/user-account-0/</id>
    <published>2020-01-19T16:00:00.000Z</published>
    <updated>2020-04-21T13:52:36.125Z</updated>
    
    <content type="html"><![CDATA[<p>本文提出了一个假想的、通用的需求，因此部分功能需求之间可能存在冲突。不考虑这方面问题的话，看看你的系统能做到什么程度？<br><a id="more"></a> </p><h1 id="用户注册"><a href="#用户注册" class="headerlink" title="用户注册"></a>用户注册</h1><ul><li>多种注册途径：用户名、邮箱、手机号、证件号等<ul><li>通过邮箱、手机号等途径验证确实由本人注册账号</li><li>考虑前人已注册账号，且手机销号，而后人复得此手机号，想要注册账号时该如何处理</li></ul></li><li>通过第三方登录自动注册：支付宝、微信、QQ、微博等</li><li>账号合并</li><li>实名核验<ul><li>通过证件、手机核验身份</li><li>通过证件、人脸识别核验身份</li><li>借助支付宝等实名核验接口核验身份</li><li>用户自行上传证件信息，进行人工审核</li></ul></li><li>限制注册频率以防刷号</li><li>防止不当用户名</li></ul><h1 id="用户登录"><a href="#用户登录" class="headerlink" title="用户登录"></a>用户登录</h1><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><ul><li>密码/验证码登录</li><li>单点登录</li><li>第三方登录：支付宝、微信等</li><li>双重身份认证（2FA）<ul><li>手机短信</li><li>邮件</li><li>Google Authenticator</li></ul></li><li>账号安全<ul><li>多次登录失败，锁定IP或账号，防止暴力破解</li><li>非常用地点登录，进行身份验证</li><li>未完成实名注册，或使用验证码登录等情况，仅开启有限功能</li><li>防止机器人登录 / 提供机器人API接口</li></ul></li><li>会话<ul><li>记住当前会话</li><li>会话自动过期</li><li>会话互斥：一次只允许在一个地点登录，其他地点会话自动注销</li></ul></li><li>忘记密码<ul><li>进行身份核验、手机或邮箱验证，验证通过后发送重置链接</li></ul></li></ul><h2 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h2><ul><li>用户角色：个人/企业，普通用户/会员等</li><li>最小权限原则</li><li>根据不同角色分配不同功能</li></ul><h1 id="用户注销"><a href="#用户注销" class="headerlink" title="用户注销"></a>用户注销</h1><ul><li>可指定时间后自动注销</li><li>允许一次性注销所有设备上的全部会话</li><li>列举出用户正在登录的设备，允许注销特定设备上的会话</li></ul><h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><h2 id="密码管理"><a href="#密码管理" class="headerlink" title="密码管理"></a>密码管理</h2><ul><li>密码使用高安全性的加密算法来加密存储</li><li>修改密码</li><li>在一定时间之后强制修改密码</li><li>禁止用户重新设置成上次用过的密码</li></ul><h2 id="个人配置"><a href="#个人配置" class="headerlink" title="个人配置"></a>个人配置</h2><ul><li>邮箱、手机、微信、QQ、支付宝、微博等账号解绑 / 重新绑定<ul><li>更换邮箱、手机等，给前一账号留出一些时间，以便（如果是恶意操作则）撤回</li></ul></li><li>查询登录记录</li><li>进行敏感操作之前，再次验证用户账号密码</li><li>查询敏感操作记录</li><li>防止其他人非法访问个人信息</li></ul><h2 id="用户删除"><a href="#用户删除" class="headerlink" title="用户删除"></a>用户删除</h2><ul><li>允许用户自行删除用户</li><li>自动锁定 / 删除长期不活动的账号</li></ul><h2 id="系统管理员的管理"><a href="#系统管理员的管理" class="headerlink" title="系统管理员的管理"></a>系统管理员的管理</h2><ul><li>新建、删除用户</li><li>启用、禁用用户</li><li>用户权限管理</li><li>用户审核</li></ul><h1 id="非功能性需求"><a href="#非功能性需求" class="headerlink" title="非功能性需求"></a>非功能性需求</h1><ul><li>统一账号体系：考虑多个系统如何建设统一账号体系</li><li>审计：注册、登录、注销、重置密码等操作可审计，包含日期、时间、用户、资源等信息</li><li>性能优化：分库、分表处理</li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文提出了一个假想的、通用的需求，因此部分功能需求之间可能存在冲突。不考虑这方面问题的话，看看你的系统能做到什么程度？&lt;br&gt;</summary>
    
    
    
    <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="账号" scheme="https://plusnan.me/tags/%E8%B4%A6%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>基于Docker快速配置V2Ray（WebSocket+TLS+Web）</title>
    <link href="https://plusnan.me/2019/12/10/v2ray/"/>
    <id>https://plusnan.me/2019/12/10/v2ray/</id>
    <published>2019-12-09T16:00:00.000Z</published>
    <updated>2021-01-12T17:40:04.638Z</updated>
    
    <content type="html"><![CDATA[<p>本文用于在紧急情况下快速部署应用，以解决燃眉之急，不过事后需要付钱，请谨慎决定。</p><a id="more"></a><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li>一个VPS服务器，可到<span class="exturl" data-url="aHR0cHM6Ly93d3cuZGlnaXRhbG9jZWFuLmNvbS8=">DigitalOcean<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly93d3cudnVsdHIuY29tLw==">Vultr<i class="fa fa-external-link-alt"></i></span>（支持国内支付方式）、<span class="exturl" data-url="aHR0cHM6Ly93d3cubGlub2RlLmNvbS8=">Linode<i class="fa fa-external-link-alt"></i></span>等网站购买。本文提到的这三个网站有一个好：按实际使用时间收费，而且IP被封的话还可以刷机器，不需要多花钱（与那些换一次IP就要好几美元的主机商比，多花几美分就相当于没花钱了）。</li><li>一个固定域名，可到<span class="exturl" data-url="aHR0cHM6Ly93d3cubmFtZWNoZWFwLmNvbS8=">Namecheap<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9nb2RhZGR5LmNvbS8=">GoDaddy<i class="fa fa-external-link-alt"></i></span>等网站购买。如果不嫌弃实名制，买<span class="exturl" data-url="aHR0cHM6Ly9kbnNwb2QuY2xvdWQudGVuY2VudC5jb20v">腾讯云<i class="fa fa-external-link-alt"></i></span>之类等国内域名也没问题，国内域名国外主机的话不需要备案。</li><li>如果电脑是Windows系统，需安装<span class="exturl" data-url="aHR0cHM6Ly93d3cuc3NoLmNvbS9zc2gvcHV0dHkvZG93bmxvYWQ=">PuTTY<i class="fa fa-external-link-alt"></i></span>等远程连接软件。</li></ol><h1 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h1><p>购买服务器时注意：</p><ol><li>地区选择美国西海岸（洛杉矶、旧金山）或者日本东京。</li><li>价格选择$5款式的。Vultr有时卖$2.5的机器，不要选那个，它只有IPv6，通常情况下你会连不上。</li><li>本文采用Ubuntu 18.04操作系统。该系统内核较新，不需要特意去升级内核。</li></ol><p>买到服务器之后，使用ping命令ping一下IP。如果ping不通，或者SSH连不上，需要换机器，换到能登录进去为止（同时不要忘记把未使用的机器删掉）。</p><h1 id="域名配置"><a href="#域名配置" class="headerlink" title="域名配置"></a>域名配置</h1><p>本文假设购买了<code>the-shirt-is-nine-fifteen.com</code>。</p><p>登录域名控制台，添加一条A记录，主机记录名称为<code>@</code>，IP为你所购买的服务器的IP。</p><h1 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h1><h2 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h2><p>连接服务器（假设用root账号登录），输入以下命令安装Docker并配置BBR加速：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common</span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -</span><br><span class="line">add-apt-repository &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable&quot;</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose</span><br><span class="line"></span><br><span class="line">echo &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h2 id="搭建V2Ray-ws-Web"><a href="#搭建V2Ray-ws-Web" class="headerlink" title="搭建V2Ray+ws+Web"></a>搭建V2Ray+ws+Web</h2><p>文件结构如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">* docker-compose.yml</span><br><span class="line">- v2ray&#x2F;</span><br><span class="line">  * config.json</span><br><span class="line">- caddy&#x2F;</span><br><span class="line">  * Caddyfile</span><br><span class="line">  - html&#x2F;</span><br><span class="line">    * index.html</span><br></pre></td></tr></table></figure><br>文件内容如下：</p><p><code>docker-compose.yml</code>：<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">caddy:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">caddy</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">abiosoft/caddy</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;80:80&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;443:443&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./caddy/Caddyfile:/etc/Caddyfile</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./caddy/data:/root/.caddy</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./caddy/html:/var/www/html</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">ACME_AGREE:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">v2ray:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">v2ray</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">v2fly/v2fly-core</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./v2ray:/etc/v2ray</span></span><br></pre></td></tr></table></figure><br><code>v2ray/config.json</code>：注意需要修改下面的id部分<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;inbounds&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;port&quot;</span>: <span class="number">8080</span>,</span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;vmess&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;clients&quot;</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;去 https://1024tools.com/uuid 随便找一个UUID然后替换此处双引号内的文字&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;alterId&quot;</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">&quot;level&quot;</span>: <span class="number">0</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;streamSettings&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;network&quot;</span>: <span class="string">&quot;ws&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;wsSettings&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;path&quot;</span>: <span class="string">&quot;/v2rays/&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;outbounds&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;freedom&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;settings&quot;</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><code>caddy/Caddyfile</code>：注意将域名修改成你自己购买的域名。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;the-shirt-is-nine-fifteen.com &#123;</span><br><span class="line">  redir https:&#x2F;&#x2F;the-shirt-is-nine-fifteen.com &#123;url&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;the-shirt-is-nine-fifteen.com &#123;</span><br><span class="line">  root &#x2F;var&#x2F;www&#x2F;html</span><br><span class="line">  gzip</span><br><span class="line">  index index.html</span><br><span class="line">  tls a@a.com</span><br><span class="line">  proxy &#x2F;v2rays&#x2F; v2ray:8080 &#123;</span><br><span class="line">    websocket</span><br><span class="line">    header_upstream -Origin</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><code>caddy/html/index.html</code>：伪装用的，设置成什么内容都行。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Hello Google!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    location.href = <span class="string">&#x27;https://google.com&#x27;</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><br>文件写好之后，在docker-compose.yml所在目录输入以下命令启动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><br>稍等片刻。在浏览器输入<code>https://the-shirt-is-nine-fifteen.com</code>，如果能看到Hello Google说明启动成功（进一步讲，如果能跳转到Google说明客户端配置成功）。</p><h1 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h1><p>客户端下载（Windows）：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0Nlbm1yZXYvVjJSYXlXL3JlbGVhc2Vz">V2RayW<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLzJkdXN0L3YycmF5Ti9yZWxlYXNlcw==">v2rayN<i class="fa fa-external-link-alt"></i></span></p><p>客户端配置规则（请根据实际情况填写）：</p><ul><li>地址：<code>the-shirt-is-nine-fifteen.com</code></li><li>端口：<code>443</code></li><li>alterId：<code>4</code></li><li>UUID：需要和服务器那边的id保持一致</li><li>传输方式：<code>WebSocket</code></li><li>路径：<code>/v2rays/</code></li><li>TLS的域名：<code>the-shirt-is-nine-fifteen.com</code></li></ul><p>使用原生V2Ray客户端时的config.json：注意修改域名和id中的说明文字</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;inbounds&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;tag&quot;</span>: <span class="string">&quot;http&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;port&quot;</span>: <span class="number">1080</span>,</span><br><span class="line">      <span class="attr">&quot;listen&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;http&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;sniffing&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;destOverride&quot;</span>: [<span class="string">&quot;http&quot;</span>, <span class="string">&quot;tls&quot;</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;outbounds&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;tag&quot;</span>: <span class="string">&quot;v2ray&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;vmess&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;settings&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;vnext&quot;</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">&quot;address&quot;</span>: <span class="string">&quot;the-shirt-is-nine-fifteen.com&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;port&quot;</span>: <span class="number">443</span>,</span><br><span class="line">            <span class="attr">&quot;users&quot;</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;需要和服务器那边的id保持一致&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;alterId&quot;</span>: <span class="number">4</span></span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">&quot;streamSettings&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;network&quot;</span>: <span class="string">&quot;ws&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;security&quot;</span>: <span class="string">&quot;tls&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;wsSettings&quot;</span>: &#123;</span><br><span class="line">          <span class="attr">&quot;path&quot;</span>: <span class="string">&quot;/v2rays/&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;tag&quot;</span>: <span class="string">&quot;direct&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;protocol&quot;</span>: <span class="string">&quot;freedom&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;routing&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;domainStrategy&quot;</span>: <span class="string">&quot;IPOnDemand&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;rules&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;field&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span>: <span class="string">&quot;direct&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;ip&quot;</span>: [<span class="string">&quot;geoip:private&quot;</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;field&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span>: <span class="string">&quot;direct&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;domain&quot;</span>: [<span class="string">&quot;geosite:cn&quot;</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;type&quot;</span>: <span class="string">&quot;field&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;outboundTag&quot;</span>: <span class="string">&quot;direct&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;ip&quot;</span>: [<span class="string">&quot;geoip:cn&quot;</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动客户端。有的客户端可自动设置系统代理。如需要手工设置，那么你需要将系统代理设置成HTTP代理，地址127.0.0.1，端口1080。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>电脑系统时间需要保持准确。</li><li>客户端配置文件规则：中国网站直连，其余网站走代理。</li><li>开BT下载东西时不要挂梯子。碰到美剧等内容时容易因为版权问题导致服务器被投诉下线。</li><li>如需让Tor走代理，需修改配置文件中的sniffing，将里面enabled由true改成false。</li><li>HTTPS证书有效期只有三个月，临过期时需要登录服务器输入<code>docker restart caddy</code>。</li></ol><h1 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h1><p>如果服务器比较稳定，就没有必要继续配CDN了。</p><p>CDN需要找支持WebSocket加速的外国厂商（国内需要备案），效果因线路而异。Cloudflare免费套餐虽然免费，而且不会彻底封锁，但起的是“云减速”作用，建议只作应急使用。</p><h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><ol><li>不需要使用的时候记得及时登录VPS网站把机器删掉，然后再登录域名管理网站，别让它自动续费。</li><li>别忘了付钱。</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文用于在紧急情况下快速部署应用，以解决燃眉之急，不过事后需要付钱，请谨慎决定。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="V2Ray" scheme="https://plusnan.me/tags/V2Ray/"/>
    
  </entry>
  
  <entry>
    <title>在Web开发中，如果无法回避ActiveX控件——一种让用户在非IE浏览器调用控件的思路</title>
    <link href="https://plusnan.me/2019/11/25/activex-helper/"/>
    <id>https://plusnan.me/2019/11/25/activex-helper/</id>
    <published>2019-11-24T16:00:00.000Z</published>
    <updated>2020-06-19T00:34:13.012Z</updated>
    
    <content type="html"><![CDATA[<p>如果Web系统需要调用特定ActiveX控件才能操作，像身份证阅读器、读卡器、获取电脑网卡MAC地址等，而且预计控件厂商在一段时间内无法解决浏览器兼容性问题，那我们能不能想法让用户在非IE浏览器中也能调用控件呢？</p><p>本文提出一种解决思路：开发一个“控件小助手”代理程序。该程序安装在用户电脑中，负责调用ActiveX控件，并在本地建立一个简易Web Server，而业务系统相关页面则通过Ajax（备注：实际是JSONP）调用代理接口，从而间接地与控件交互。</p><a id="more"></a><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>假设业务系统未开启HTTPS，因为启用HTTPS后问题会变得复杂。</p><h1 id="示意图"><a href="#示意图" class="headerlink" title="示意图"></a>示意图</h1><p>以身份证阅读器为例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">|-----------------------------------|                      |</span><br><span class="line">|              IE浏览器              |      Windows系统      |      外设</span><br><span class="line">|                                   |                      |</span><br><span class="line">|  |------------|   |------------|  |                      |</span><br><span class="line">|  | JavaScript |---| ActiveX控件 |-------身份证阅读器驱动--------身份证阅读器</span><br><span class="line">|  |------------|   |------------|  |                      |</span><br><span class="line">|                                   |                      |</span><br><span class="line">|-----------------------------------|                      |</span><br></pre></td></tr></table></figure><br>ActiveX是微软专利，其他浏览器无法调用。然而，在用户电脑中安装一个代理程序（即“控件小助手”），便可通过代理程序来操作控件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">                             |------------------------------------|                |</span><br><span class="line">|------------------|         |               代理程序              |   Windows系统   |      外设</span><br><span class="line">|   Chrome浏览器    |         |                                    |                |</span><br><span class="line">|                  |         |  |--------------|   |----------|   |                |</span><br><span class="line">|  |------------|  |         |  |     小型      |   | ActiveX  |  |     身份证       |</span><br><span class="line">|  | JavaScript |-----JSONP-----|  Web Server  |---|   控件    |--------阅读器-----------身份证阅读器</span><br><span class="line">|  |------------|  |         |  |--------------|   |----------|   |     驱动        |</span><br><span class="line">|                  |         |                                    |                |</span><br><span class="line">|------------------|         |------------------------------------|                |</span><br></pre></td></tr></table></figure><h1 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h1><p>假设原先的读卡逻辑为：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;readCardButton&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;readCard()&quot;</span>&gt;</span>读取身份证<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">readCard</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (<span class="built_in">window</span>.cardReader.Check) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> check = <span class="built_in">window</span>.cardReader.Check();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">if</span> (check &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> ret = <span class="built_in">window</span>.cardReader.ReadCard();</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (ret !== <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 读取不成功，需要重试</span></span></span><br><span class="line"><span class="javascript">                    <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line">                        readCard()</span><br><span class="line">                    &#125;, 1000);</span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">&#x27;读卡成功！身份证号码为&#x27;</span> + <span class="built_in">window</span>.cardReader.IdCard);</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                alert(<span class="string">&#x27;无法读取身份证，请检查身份证阅读器是否连接到电脑，驱动是否正确安装！&#x27;</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            alert(<span class="string">&#x27;无法读取身份证，请检查身份证阅读器控件是否正确安装！&#x27;</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">classid</span>=<span class="string">&quot;clsid:xxxxxx&quot;</span> <span class="attr">id</span>=<span class="string">&quot;cardReader&quot;</span> <span class="attr">width</span>=<span class="string">&quot;0&quot;</span> <span class="attr">height</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="小助手原型"><a href="#小助手原型" class="headerlink" title="小助手原型"></a>小助手原型</h2><p>我们采用C#快速实现原型程序，这样的话需要提前准备好Visual Studio。</p><p>进入Visual Studio，新建“Windows 窗体应用 (.Net Framework)”，命名为ControlHelper，并在NuGet管理器中安装<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL05hbmN5RngvTmFuY3k=">Nancy<i class="fa fa-external-link-alt"></i></span>。在窗体Form1中添加身份证阅读器控件，命名为CardReader。</p><p>Form1.cs代码如下：<br><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Nancy.Hosting.Self;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ControlHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> NancyHost server = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 启动Web Server</span></span><br><span class="line">            server = <span class="keyword">new</span> NancyHost(<span class="keyword">new</span> Uri(<span class="string">&quot;http://127.0.0.1:12345&quot;</span>));</span><br><span class="line">            server.Start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> CheckResult <span class="title">Check</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> ret = CardReader.Check();</span><br><span class="line">            <span class="keyword">var</span> obj = <span class="keyword">new</span> CheckResult();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (ret &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                obj.Result = <span class="number">1</span>;</span><br><span class="line">                obj.Message = <span class="string">&quot;身份证阅读器检测成功！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                obj.Result = <span class="number">0</span>;</span><br><span class="line">                obj.Message = <span class="string">&quot;无法读取身份证，请检查身份证阅读器是否连接到电脑，驱动是否正确安装！&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> obj;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;IdCard&gt; <span class="title">ReadIdCard</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> obj = <span class="keyword">new</span> IdCard();</span><br><span class="line"></span><br><span class="line">            obj.result = <span class="number">0</span>;</span><br><span class="line">            obj.message = <span class="string">&quot;无法读取身份证，请重试！&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> retry = <span class="number">3</span>; retry &gt; <span class="number">0</span>; retry--)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">var</span> ret = CardReader.ReadCard();</span><br><span class="line">                    <span class="keyword">if</span> (ret == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        obj.Result = <span class="number">1</span>;</span><br><span class="line">                        obj.Message = <span class="string">&quot;读卡成功&quot;</span>;</span><br><span class="line">                        obj.IdCard = CardReader.IdCard;</span><br><span class="line">                        <span class="comment">// 此处省略其他属性</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.Threading.Thread.Sleep(<span class="number">1000</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            catch (Exception e)</span><br><span class="line">            &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> obj;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>Helper.cs：<br><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Nancy;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ControlHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Helper</span> : <span class="title">NancyModule</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Helper</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Get(<span class="string">&quot;/idcard/check&quot;</span>, param =&gt; Response.AsJson(Program.mainForm.Check()));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读卡不一定能立刻返回结果，使用async</span></span><br><span class="line">            Get(<span class="string">&quot;/idcard/read&quot;</span>, <span class="keyword">async</span> (context, t) =&gt; Response.AsJson(<span class="keyword">await</span> Program.mainForm.ReadIdCard()));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Serializable</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">IdCard</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> Result &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Message &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> IdCard &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        <span class="comment">// 其他属性：姓名、性别、民族、出生日期、地址、签发机关、有效期、照片等</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Serializable</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CheckResult</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> Result &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> Message &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>代码中的监听端口为12345。为了避免冲突，可以修改成其他端口（最大65535，尽量用五位数）。由于监听地址为127.0.0.1（本机），与业务系统不同，会涉及跨域问题。为了避免离题讨论，本文代码以GET方式提供服务，并返回JSON格式数据，以便业务系统通过JSONP调用，不使用POST。</p><h2 id="Web应用页面代码调整"><a href="#Web应用页面代码调整" class="headerlink" title="Web应用页面代码调整"></a>Web应用页面代码调整</h2><p>调整读卡按钮的逻辑，先判断ActiveX控件是否可用。如果可用，沿用原先的ActiveX操作方式；如果不可用，则尝试通过$.ajax向“小助手”的小型Web Server发送请求。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readCardNew</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;#readCardButton&#x27;</span>).prop(<span class="string">&#x27;disabled&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">    <span class="comment">// 先尝试调用ActiveX控件，调不通的话就调用辅助程序</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.cardreader.ReadCard) &#123;</span><br><span class="line">        readCard();</span><br><span class="line">        $(<span class="string">&#x27;#readCardButton&#x27;</span>).prop(<span class="string">&#x27;disabled&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: <span class="string">&#x27;http://localhost:12345/idcard/check&#x27;</span>,</span><br><span class="line">            dataType: <span class="string">&#x27;jsonp&#x27;</span>,</span><br><span class="line">            timeout: <span class="number">500</span>,</span><br><span class="line">            cache: <span class="literal">false</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">data1</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (data1.Result === <span class="number">0</span>) &#123;</span><br><span class="line">                    alert(data1.Message);</span><br><span class="line">                    $(<span class="string">&#x27;#readCardButton&#x27;</span>).prop(<span class="string">&#x27;disabled&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line">                        url: <span class="string">&#x27;http://localhost:12345/idcard/read&#x27;</span>,</span><br><span class="line">                        dataType: <span class="string">&#x27;jsonp&#x27;</span>,</span><br><span class="line">                        cache: <span class="literal">false</span>,</span><br><span class="line">                        success: <span class="function"><span class="keyword">function</span> (<span class="params">data2</span>) </span>&#123;</span><br><span class="line">                            $(<span class="string">&#x27;#readCardButton&#x27;</span>).prop(<span class="string">&#x27;disabled&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line">                            <span class="keyword">if</span> (data2.Result === <span class="number">0</span>) &#123;</span><br><span class="line">                                alert(data2.Message);</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                alert(<span class="string">&#x27;读卡成功！身份证号为&#x27;</span> + data2.IdCard);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        error: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            alert(<span class="string">&#x27;无法读取身份证，请重试！&#x27;</span>);</span><br><span class="line">                            $(<span class="string">&#x27;#readCardButton&#x27;</span>).prop(<span class="string">&#x27;disabled&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                alert(<span class="string">&#x27;无法读取身份证，请检查小助手是否启动！&#x27;</span>);</span><br><span class="line">                $(<span class="string">&#x27;#readCardButton&#x27;</span>).prop(<span class="string">&#x27;disabled&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="投入商业使用之前"><a href="#投入商业使用之前" class="headerlink" title="投入商业使用之前"></a>投入商业使用之前</h1><p>以上是实验用原型，质量粗糙，还需要进行一些功能优化才能交付用户，例如：</p><ul><li>兼顾不同操作系统的兼容性，以及不同版本.Net Framework的兼容性。（建议使用Visual C++重新开发）</li><li>增加校验，检测用户是否已经正确安装驱动和控件，并帮助用户完成安装（需注意遵守驱动和控件的许可协议，以免吃官司）。目前状态下，如控件未正确安装，程序一启动就会崩溃。</li><li>增加开机自启、版本更新等功能。</li></ul><p>如果团队有Windows桌面应用开发经验，或者能够接受研发成本，可以考虑进一步将工具开发出来，满足用户需求，解决实际问题。当然，无论是从解决问题的角度来看，还是从开发成本的角度来看，让控件厂商去做浏览器兼容才是最合适的解决办法。</p><h2 id="关于HTTPS"><a href="#关于HTTPS" class="headerlink" title="关于HTTPS"></a>关于HTTPS</h2><p>在决定开发之前，还需要特别留意一个问题：业务系统若进行HTTPS改造，“小助手”将完全失效，因为浏览器会拒绝HTTPS网站访问HTTP网站。这是浏览器的安全特性，JavaScript脚本无法干预此行为。</p><p>这样的话，需要为“localhost”签发（自签名）证书，让“小助手”也使用HTTPS服务，并要求用户（或通过安装程序自动地）将该证书添加到系统信任中。注意，除了操作系统证书库，Firefox也有自己的证书库，因此Firefox浏览器要另外添加信任。</p><h1 id="进一步思考"><a href="#进一步思考" class="headerlink" title="进一步思考"></a>进一步思考</h1><p>从上面代码可以看出，控件读取的身份证号是明文，用户可通过浏览器控制台等途径篡改数据，带来安全隐患，而且这个漏洞无法在前端与控件层面补救。但是，如果全面改用“小助手”，便可在“小助手”一端“动手脚”，用可逆算法加密身份证信息，传到服务器之后才进行解密，从而防止用户在浏览器非法录入信息或篡改数据。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;如果Web系统需要调用特定ActiveX控件才能操作，像身份证阅读器、读卡器、获取电脑网卡MAC地址等，而且预计控件厂商在一段时间内无法解决浏览器兼容性问题，那我们能不能想法让用户在非IE浏览器中也能调用控件呢？&lt;/p&gt;
&lt;p&gt;本文提出一种解决思路：开发一个“控件小助手”代理程序。该程序安装在用户电脑中，负责调用ActiveX控件，并在本地建立一个简易Web Server，而业务系统相关页面则通过Ajax（备注：实际是JSONP）调用代理接口，从而间接地与控件交互。&lt;/p&gt;</summary>
    
    
    
    <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="ActiveX" scheme="https://plusnan.me/tags/ActiveX/"/>
    
  </entry>
  
  <entry>
    <title>基于第三方CDN的IPv6支持改造实施方案</title>
    <link href="https://plusnan.me/2019/11/17/add-ipv6-support/"/>
    <id>https://plusnan.me/2019/11/17/add-ipv6-support/</id>
    <published>2019-11-16T16:00:00.000Z</published>
    <updated>2020-05-03T14:24:06.857Z</updated>
    
    <content type="html"><![CDATA[<p>为响应国家号召，我们又需要给生产系统增加IPv6支持，而该工作同样可借助（支持IPv6的）CDN来完成。本文为IPv6改造工作的实施方案。<br><a id="more"></a></p><h1 id="工作内容"><a href="#工作内容" class="headerlink" title="工作内容"></a>工作内容</h1><ol><li>应用程序改造<ul><li>排查程序中涉及IP地址的代码，修改不适用于IPv6地址的逻辑。</li><li>排查数据库中涉及IP地址的字段，如果长度不够，需扩到39或以上。</li></ul></li><li>按<a href="/2019/11/16/http-to-https/">前文方案</a>给应用系统套CDN。</li></ol><p>（完）</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;为响应国家号召，我们又需要给生产系统增加IPv6支持，而该工作同样可借助（支持IPv6的）CDN来完成。本文为IPv6改造工作的实施方案。&lt;br&gt;</summary>
    
    
    
    <category term="系统运维" scheme="https://plusnan.me/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="CDN" scheme="https://plusnan.me/tags/CDN/"/>
    
    <category term="IPv6" scheme="https://plusnan.me/tags/IPv6/"/>
    
  </entry>
  
  <entry>
    <title>基于第三方CDN的HTTPS改造实施方案</title>
    <link href="https://plusnan.me/2019/11/16/http-to-https/"/>
    <id>https://plusnan.me/2019/11/16/http-to-https/</id>
    <published>2019-11-15T16:00:00.000Z</published>
    <updated>2020-05-18T12:17:15.734Z</updated>
    
    <content type="html"><![CDATA[<p>为了提升Web系统安全性，我们需对生产系统进行HTTPS改造，改造实质上可以通过套CDN来实现。本文即整个改造工作的实施方案。<br><a id="more"></a></p><p>（本文系统架构、域名、IP均为虚构）</p><h1 id="改造目标"><a href="#改造目标" class="headerlink" title="改造目标"></a>改造目标</h1><ol><li>部署CDN</li><li>通过CDN实现HTTPS支持</li></ol><h1 id="系统部署架构"><a href="#系统部署架构" class="headerlink" title="系统部署架构"></a>系统部署架构</h1><p>系统为传统的Web应用部署架构。系统分为PC端和微信端两部分，域名和IP分别为 www.xxx.com (xx.yy.zz.aa) 与 weixin.xxx.com (xx.yy.zz.bb)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Internet        |             机房内网</span><br><span class="line">                |</span><br><span class="line">PC端用户--------网关---负载均衡1---PC端应用服务器（集群）</span><br><span class="line">                |                      ↑           ↖︎</span><br><span class="line">                |                  数据库服务器     某些第三方接口</span><br><span class="line">                |                      ↓           ↙︎</span><br><span class="line">微信用户--微信---网关---负载均衡2---微信端应用服务器（集群）</span><br><span class="line">                |</span><br></pre></td></tr></table></figure><p>加入CDN后将变为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Internet              |             机房内网</span><br><span class="line">                      |</span><br><span class="line">PC端用户------\        |   &#x2F;-负载均衡1---PC端应用服务器（集群）</span><br><span class="line">              \    &#x2F;-网关-&#x2F;                   ↑           ↖︎</span><br><span class="line">              CDN--   |                  数据库服务器     某些第三方接口</span><br><span class="line">              &#x2F;    \-网关-\                   ↓           ↙︎</span><br><span class="line">微信用户--微信-&#x2F;        |   \-负载均衡2---微信端应用服务器（集群）</span><br><span class="line">                      |</span><br></pre></td></tr></table></figure><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="沟通协调"><a href="#沟通协调" class="headerlink" title="沟通协调"></a>沟通协调</h2><p>改造工作，技术不是什么难题，难就难在让不同单位不同部门之间协调一致。实施之前，确认以下各环节具体负责人，提前做好协调沟通工作：</p><ul><li>总负责人（包括业务方面和技术方面的总负责）：汇报改造工作目的、内容、预期效果和实施风险，征求领导同意。</li><li>应用系统负责人：负责应用系统改造，确保切换HTTPS之后系统能正常运行。<ul><li>对接的第三方接口负责人：同步调整应用URL。</li><li>微信公众号负责人：同步调整微信公众号后台API的URL。</li></ul></li><li>HTTPS证书管理员：负责提供HTTPS证书。</li><li>CDN对接人：负责调整CDN设置，包括引入CDN加速、导入HTTPS证书等。</li><li>域名管理员：负责在CDN设置好之后调整域名的CNAME记录。</li></ul><p>约定好实施日期与负责人联系方式，后面部分工作需各方同步进行。</p><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>由于域名已准备好，无需再做准备工作，否则要事先把一二级域名准备好并完成备案。</p><p>务必将 www.xxx.com 与 weixin.xxx.com 解析出的IP记录下来，否则套CDN之后再想找源头IP会很麻烦。</p><h2 id="HTTPS证书"><a href="#HTTPS证书" class="headerlink" title="HTTPS证书"></a>HTTPS证书</h2><p>需购买HTTPS证书。具体内容本文不再讨论。</p><h2 id="CDN服务"><a href="#CDN服务" class="headerlink" title="CDN服务"></a>CDN服务</h2><p>需购买第三方CDN服务，并调好基本设置，准备随时启用。</p><h2 id="应用程序改造"><a href="#应用程序改造" class="headerlink" title="应用程序改造"></a>应用程序改造</h2><p>需对应用程序进行排查和改造，防止协议升级之后无法访问。改造完成后，需使用HTTPS域名进行测试，避免生产环境发生异常。</p><p>注意，由于修改域名解析需要最长24小时才能生效，在切换期间，需保证HTTP和HTTPS都能正常运行。</p><h3 id="URL排查"><a href="#URL排查" class="headerlink" title="URL排查"></a>URL排查</h3><p>浏览器通常会阻止加载Mixed Content（HTTPS页面中的HTTP资源），因此需检查前端代码和后端代码中是否有写死的网址（可用查找功能搜索“<span class="exturl" data-url="aHR0cDovL+KAne+8ie+8jOWmguaenOaciWh0dHDvvIzpnIDkv67mlLnmiJDml6DljY/orq7nvZHlnYDvvIjkvovlpoJgLy93d3cueHh4LmNvbS9zdGF0aWMvanMveHh4LmpzYO+8ieaIlmh0dHBz44CC">http://”），如果有http，需修改成无协议网址（例如`//www.xxx.com/static/js/xxx.js`）或https。<i class="fa fa-external-link-alt"></i></span></p><p>需要特别留意AJAX请求和POST请求。改造完成后，访问HTTP，可能会被302到HTTPS页面中，而302跳转不仅对效率有影响，还无法正确处理POST请求。</p><h3 id="安全组件排查"><a href="#安全组件排查" class="headerlink" title="安全组件排查"></a>安全组件排查</h3><p>如果应用中有安全组件（例如<a href="/2019/08/25/security-filter">简单粗暴的那种</a>），需检查URL由HTTP修改为HTTPS之后是否会被错误地拦截。</p><h3 id="接口排查"><a href="#接口排查" class="headerlink" title="接口排查"></a>接口排查</h3><p>如果对接厂商使用了我们的域名，需通知相关厂商同步调整系统URL。</p><h1 id="实施工作"><a href="#实施工作" class="headerlink" title="实施工作"></a>实施工作</h1><h2 id="用户公告"><a href="#用户公告" class="headerlink" title="用户公告"></a>用户公告</h2><p>提前通知用户：系统将进行维护，为避免业务数据丢失，请尽量避免在系统维护时段办理业务。</p><h2 id="系统部署"><a href="#系统部署" class="headerlink" title="系统部署"></a>系统部署</h2><p>分为应用程序部署、CDN部署与域名CNAME记录调整，这三项操作需同步进行。</p><h3 id="应用程序部署"><a href="#应用程序部署" class="headerlink" title="应用程序部署"></a>应用程序部署</h3><p>我们和第三方接口对接厂商需及时将新版应用部署到生产环境。</p><h3 id="CDN部署"><a href="#CDN部署" class="headerlink" title="CDN部署"></a>CDN部署</h3><p>首先，在CDN控制台需开启两个网站的加速：</p><div class="table-container"><table><thead><tr><th>域名</th><th>回源地址</th><th>端口</th></tr></thead><tbody><tr><td>www.xxx.com</td><td>xx.yy.zz.aa</td><td>80</td></tr><tr><td>weixin.xxx.com</td><td>xx.yy.zz.bb</td><td>80</td></tr></tbody></table></div><p>其次需上传HTTPS证书，或通过其他CDN平台支持的方式导入证书，然后再开启HTTPS支持。</p><p>在不同CDN厂商控制台中，HTTPS支持的形式可能不同。可根据自己需要来决定继续提供HTTP访问，还是全部重定向到HTTPS。无论如何调整参数，我们需记住，HTTP到HTTPS的升级是由CDN来实现的，原站没有进行改动，始终是HTTP协议、80端口。</p><h3 id="域名CNAME记录调整"><a href="#域名CNAME记录调整" class="headerlink" title="域名CNAME记录调整"></a>域名CNAME记录调整</h3><p>CDN设置好之后，需登录域名管理控制台，按照CDN平台所提供信息修改 www.xxx.com 和 weixin.xxx.com 的CNAME记录。</p><h2 id="微信后台调整"><a href="#微信后台调整" class="headerlink" title="微信后台调整"></a>微信后台调整</h2><p>登录微信公众号管理界面，修改API的地址，由HTTP改为HTTPS。</p><p>如果公众号有菜单，且菜单中涉及 weixin.xxx.com 的URL，那么需要更新一下公众号菜单。</p><h2 id="网络策略调整"><a href="#网络策略调整" class="headerlink" title="网络策略调整"></a>网络策略调整</h2><p>调整服务器网络策略，放行CDN节点的IP地址。在域名记录修改彻底生效之后，可进一步增加策略，拦截除CDN之外的所有IP访问。</p><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>由于域名CNAME调整可能不会马上生效，需要通过修改hosts的方式进行访问验证。系统正常运行则说明改造完成。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;为了提升Web系统安全性，我们需对生产系统进行HTTPS改造，改造实质上可以通过套CDN来实现。本文即整个改造工作的实施方案。&lt;br&gt;</summary>
    
    
    
    <category term="系统运维" scheme="https://plusnan.me/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="CDN" scheme="https://plusnan.me/tags/CDN/"/>
    
    <category term="HTTPS" scheme="https://plusnan.me/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>Web应用出现奇怪故障，原因居然是机房偷偷部署了WAF（Web应用防火墙）……</title>
    <link href="https://plusnan.me/2019/10/07/waf/"/>
    <id>https://plusnan.me/2019/10/07/waf/</id>
    <published>2019-10-06T16:00:00.000Z</published>
    <updated>2020-05-03T14:23:55.177Z</updated>
    
    <content type="html"><![CDATA[<p>近期用户反馈系统出现奇怪故障，根据系统架构对系统的每个环节都进行了排查，却未发现问题。一番折腾之后，才知道是甲方偷偷地部署了WAF（Web应用防火墙）……<br><a id="more"></a></p><p>（本文根据回忆编写，文中系统架构、URL与代码均为虚构）</p><h1 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h1><ul><li>业务操作A从某时起突然开始提示“操作失败”，且更换账号、清理缓存、更换浏览器等方案皆无效，用户反馈显示所有人都无法成功办理业务。</li><li>业务操作B从差不多的时间开始出故障，点击按钮没有反应，更换账号或浏览器同样无效。</li><li>其他业务未反馈异常。</li><li>询问实施与运维人员，确认近期没有碰过生产应用、生产数据库或其他相关服务器。</li></ul><h1 id="系统部署架构"><a href="#系统部署架构" class="headerlink" title="系统部署架构"></a>系统部署架构</h1><p>业务系统采用了既经典又传统的Web应用部署架构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  Internet     |                    机房</span><br><span class="line">               |</span><br><span class="line">用户 ← CDN ← 网关 ← 负载均衡 ← 应用服务器（集群） ← 数据库服务器</span><br><span class="line">               |                     ↑</span><br><span class="line">               |                 Redis服务器</span><br><span class="line">               |</span><br></pre></td></tr></table></figure><p>根据架构图，询问各环节是否靠谱：</p><ul><li>用户经常“出故障”，然而本次已确认是系统问题，不是用户环境或操作问题。</li><li>CDN由一家比较靠谱的第三方公司提供，出故障机率不大。</li><li>负载均衡设备由一家比较靠谱的厂商生产，没有故障记录。</li><li>Redis服务器、数据库服务器偶尔出故障，但本次业务问题应该与数据库无关（猜测，需要进一步确认）。</li><li>应用服务器集群，每个节点部署的应用完全相同。应用服务器有故障记录，而且有些不靠谱的开发人员会把bug带到生产系统。</li></ul><h1 id="检查过程"><a href="#检查过程" class="headerlink" title="检查过程"></a>检查过程</h1><p>因故障发生前后未对生产系统服务器进行操作，首先排除自己人操作导致故障的可能性。</p><p>接下来排除集群节点故障，因为集群各节点应用相同，且只有特定功能失败，其他功能正常，不会是节点卡死导致的。</p><p>然后又排除了CDN的原因——通过修改自己电脑的hosts文件绕过了CDN，直接与服务器原始IP连接，问题依旧。</p><p>向开发人员确认两业务的代码：操作A是Ajax请求，操作B是普通的form表单提交。</p><p>下面分别分析A与B两个业务的情况。</p><h2 id="业务A"><a href="#业务A" class="headerlink" title="业务A"></a>业务A</h2><p>使用浏览器控制台观察请求，发现业务A在Networks页面现象如下：</p><p><img src="/img/2019-10-07-waf/a-1.png" alt="a-1"></p><p>其他请求正常，说明应用服务器没挂，唯独这个个别业务可能有bug。需要登录服务器检查应用后台日志。</p><p>登录到服务器，对每个节点的应用日志进行检查，未发现报错。重复操作几遍之后再检查日志，仍然未发现报错。我们怀疑程序未打错误日志。</p><p>然而再仔细观察浏览器抓包的内容：</p><p><img src="/img/2019-10-07-waf/a-2.png" alt="a-2"></p><p>从图中可以发现，在Header里面未找到“Response Headers”，没有返回内容，“General”中也没有找到“Status Code”，说明甚至没有HTTP状态码。看来连接可能是被“掐断”了。</p><p>再用curl测试一下。本地调用的话是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ curl -v -X POST -H &quot;Content-Type: application&#x2F;json&quot; -b &quot;JSESSIONID&#x3D;从服务器拷过来的cookie&quot; -d &quot;从浏览器抓到的AJAX提交的内容&quot; http:&#x2F;&#x2F;www.xxx.com&#x2F;business&#x2F;submit</span><br><span class="line">*   Trying xxx.xxx.xxx.xxx...</span><br><span class="line">* TCP_NODELAY set</span><br><span class="line">* Connected to www.xxx.com (xxx.xxx.xxx.xxx) port 80 (#0)</span><br><span class="line">&gt; POST &#x2F;business&#x2F;submit HTTP&#x2F;1.1</span><br><span class="line">&gt; Host: www.xxx.com</span><br><span class="line">&gt; User-Agent: curl&#x2F;7.58.0</span><br><span class="line">&gt; Accept: *&#x2F;*</span><br><span class="line">&gt; Cookie: JSESSIONID&#x3D;xxxxxxx</span><br><span class="line">&gt; Content-Type: application&#x2F;json</span><br><span class="line">&gt; Content-Length: xxx</span><br><span class="line">&gt;</span><br><span class="line">* upload completely sent off: xxx out of xxx bytes</span><br><span class="line">* Empty reply from server</span><br><span class="line">* Connection #0 to host xxx.xxx.xxx.xxx left intact</span><br><span class="line">curl: (52) Empty reply from server</span><br><span class="line">* Closing connection 0</span><br></pre></td></tr></table></figure><br>未返回任何数据。</p><p>但登录到服务器里面操作就能返回HTTP 200 OK，还能看到JSON串，说明应用能正常响应：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># curl -v -X POST -H &quot;Content-Type: application&#x2F;json&quot; -b &quot;JSESSIONID&#x3D;从服务器拷过来的cookie&quot; -d &quot;从浏览器抓到的AJAX提交的内容&quot; http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;business&#x2F;submit</span><br><span class="line">*   Trying 127.0.0.1...</span><br><span class="line">* TCP_NODELAY set</span><br><span class="line">* Connected to 127.0.0.1 port 8080 (#0)</span><br><span class="line">&gt; POST &#x2F;business&#x2F;submit HTTP&#x2F;1.1</span><br><span class="line">&gt; Host: 127.0.0.1:8080</span><br><span class="line">&gt; User-Agent: curl&#x2F;7.58.0</span><br><span class="line">&gt; Accept: *&#x2F;*</span><br><span class="line">&gt; Cookie: JSESSIONID&#x3D;xxxxxxx</span><br><span class="line">&gt; Content-Type: application&#x2F;json</span><br><span class="line">&gt; Content-Length: xxx</span><br><span class="line">&gt;</span><br><span class="line">&lt; HTTP&#x2F;1.1 200 OK</span><br><span class="line">&lt; Cache-Control: no-cache</span><br><span class="line">&lt; Connection: keep-alive</span><br><span class="line">&lt; Content-Length: xxx</span><br><span class="line">&lt; Content-Type: application&#x2F;json</span><br><span class="line">&lt; Date: xxx, xx xxx xxxx xx:xx:xx GMT</span><br><span class="line">&lt;</span><br><span class="line">一个乱七八糟的JSON串</span><br><span class="line"></span><br><span class="line">* Connection #0 to host 127.0.0.1 left intact</span><br><span class="line">* Closing connection 0</span><br></pre></td></tr></table></figure><br>将127.0.0.1:1080换成负载均衡地址，重复操作几遍，仍然返回200 OK，说明负载均衡设备应该没有问题。另外对JSON串的内容进行检查，发现提示“办理“成功”或“办理失败！请勿重复办理！”，说明数据库也是正常的，否则不可能校验出“重复办理”。</p><h2 id="业务B"><a href="#业务B" class="headerlink" title="业务B"></a>业务B</h2><p>在进入B业务页面时，浏览器控制台显示oper.js有JavaScript语法错误：</p><p><img src="/img/2019-10-07-waf/b.png" alt="oper.js"></p><p>直接用浏览器查看oper.js内容，发现JavaScript脚本并未完整加载。分别在本地和服务器上使用curl命令获取oper.js内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在本地操作：</span><br><span class="line">$ curl http:&#x2F;&#x2F;www.xxx.com&#x2F;static&#x2F;js&#x2F;oper.js</span><br><span class="line">curl: (18) transfer closed with outstanding read data remaining</span><br><span class="line">一堆不完整的js代码</span><br><span class="line"></span><br><span class="line">登录到服务器：</span><br><span class="line"># curl http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;static&#x2F;js&#x2F;oper.js</span><br><span class="line">一堆完整的js代码</span><br></pre></td></tr></table></figure><p>发现：在我们电脑上执行curl，脚本还没加载完整，网络连接就被“掐断”了；在服务器上执行curl（域名分别使用127.0.0.1:8080与负载均衡地址），脚本内容能完整加载。</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>根据上面一系列现象判断，我们确认现有系统与设备未发生故障，可能某个环节调整了安全策略，导致正常请求被错误拦截。</p><p>和甲方负责人员沟通之后，得知机房近期部署了WAF，但甲方既未通知各相关单位，也未派人观察WAF拦截记录。我们直接和WAF负责人员沟通，维护白名单之后问题解决。</p><h1 id="附录：比对本地与生产环境js"><a href="#附录：比对本地与生产环境js" class="headerlink" title="附录：比对本地与生产环境js"></a>附录：比对本地与生产环境js</h1><p>与Ajax相比，对js进行排查比较简单，可以通过脚本实现。</p><p>向实施人员索要WAR包，解压到某个位置，并在终端中cd到那个位置，然后可通过一段shell脚本来进行比对：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">find . -name <span class="string">&#x27;*.js&#x27;</span> | <span class="keyword">while</span> <span class="built_in">read</span> file; <span class="keyword">do</span></span><br><span class="line">  url=<span class="string">&quot;http://www.xxx.com/<span class="variable">$&#123;file/.\//&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">  sha_1=`shasum <span class="string">&quot;<span class="variable">$file</span>&quot;</span> | cut -f 1 -d <span class="string">&quot; &quot;</span>`</span><br><span class="line">  sha_2=`curl <span class="string">&quot;<span class="variable">$url</span>&quot;</span> 2&gt;/dev/null | shasum | cut -f 1 -d <span class="string">&quot; &quot;</span>`</span><br><span class="line">  <span class="keyword">if</span> [[ <span class="variable">$sha_1</span> != <span class="variable">$sha_2</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;ERROR: <span class="variable">$url</span>&quot;</span> &gt;&amp;2</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>检查报错的URL，如果确实是js文件未完整加载，那么可以拉清单让WAF负责人放行。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;近期用户反馈系统出现奇怪故障，根据系统架构对系统的每个环节都进行了排查，却未发现问题。一番折腾之后，才知道是甲方偷偷地部署了WAF（Web应用防火墙）……&lt;br&gt;</summary>
    
    
    
    <category term="系统运维" scheme="https://plusnan.me/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="Web" scheme="https://plusnan.me/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>并不简单的基础开发工作（三）：信息录入表单</title>
    <link href="https://plusnan.me/2019/09/21/edit-page/"/>
    <id>https://plusnan.me/2019/09/21/edit-page/</id>
    <published>2019-09-20T16:00:00.000Z</published>
    <updated>2020-01-30T13:08:38.111Z</updated>
    
    <content type="html"><![CDATA[<p>本文继续以“学生信息管理系统”为例，讲述信息录入表单设计与开发中的一些问题。<br><a id="more"></a> </p><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>在<a href="/2019/02/09/list-page/">前一篇文章所需功能</a>的基础上，实现学生信息录入页面：</p><table>    <tbody>        <tr>            <td>身份证号码：</td>            <td><input type="text"></td>            <td rowspan="5" style="text-align: center;">                <img width="150" src="/img/2019-09-21-edit-page/photo.png">                <a class="btn" href="#"><i class="fa fa-arrow-circle-up fa-fw"></i>&nbsp;上传照片</a>            </td>        </tr>        <tr>            <td>姓名：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>性别：</td>            <td>                <input type="radio" name="gender" id="male">                <label for="male">男</label>                <input type="radio" name="gender" id="female">                <label for="female">女</label>            </td>        </tr>        <tr>            <td>民族：</td>            <td><select><option>请选择</option></select></td>        </tr>        <tr>            <td>户籍地址：</td>            <td><select><option>请选择</option></select><select><option>--</option></select><select><option>--</option></select></td>        </tr>        <tr>            <td>出生日期：</td>            <td colspan="2"><input type="text">年<input type="text">月<input type="text">日</td>        </tr>        <tr>            <td>学院：</td>            <td colspan="2"><select><option>请选择</option></select></td>        </tr>        <tr>            <td>班级：</td>            <td colspan="2"><input type="text"></td>        </tr>        <tr>            <td>学号：</td>            <td colspan="2"><input type="text"></td>        </tr>        <tr>            <td>联系电话：</td>            <td colspan="2"><input type="text"></td>        </tr>        <tr>            <td>未来意向：</td>            <td colspan="2"><select><option>请选择</option></select></td>        </tr>        <tr>            <td>荣誉或奖励：</td>            <td colspan="2"><textarea></textarea></td>        </tr>        <tr>            <td>所受处分：</td>            <td colspan="2"><textarea></textarea></td>        </tr>    </tbody></table><a class="btn" href="#">            <i class="fa fa-save fa-fw"></i>保存          </a><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>当用户点击“保存”按钮时，浏览器会将表单输入内容发送给后台，后台接收到数据（通常由框架实现）之后，需要进行一些校验，校验通过后，将输入内容INSERT到数据库中。</p><p>除了新增内容，用户有时需要对现有内容进行修改。这时候需要由列表页面向表单页面传入现有内容的id。表单页面加载之前，需根据此id去数据库读取记录，并将数据库内容展示到用户页面中。当用户点击保存时，除了页面输入内容，此id也要传到后台，这样后台才能得知用户是修改已有记录并执行UPDATE操作，而不是增加新记录。</p><h1 id="设计方面的问题"><a href="#设计方面的问题" class="headerlink" title="设计方面的问题"></a>设计方面的问题</h1><h2 id="自由输入"><a href="#自由输入" class="headerlink" title="自由输入"></a>自由输入</h2><p>能做成选择题的地方就不要做成填空题！</p><p>如果把可以做成选择题的地方做成填空题，让用户自由输入，会难以规范输入内容，给后续统计、分析等工作带来麻烦。例如填写地址，同样是山东莱芜（莱芜已并入山东省会济南），用户可以填成：</p><ul><li>莱芜</li><li>莱芜市</li><li>山东莱芜</li><li>山东省莱芜市</li><li>山东莱芜市</li><li>山东省莱芜</li><li>山东省济南市莱芜区</li><li>山东省济南市来无区（不小心打错字了）</li><li>山东省济南市莱城区（写成了旧地名，还写错了）</li><li>济南市莱芜区</li><li>山东 莱芜</li><li>山東省濟南市萊蕪區（忘把繁体字开关关掉了）</li><li>……</li></ul><h2 id="页面布局"><a href="#页面布局" class="headerlink" title="页面布局"></a>页面布局</h2><p>录入表单是一件令人不爽的事情，操作时间长了，很容易陷入疲劳。</p><p>如果页面摆放凌乱，该对齐的地方不对齐，字体、字号、间距不一致，用户肯定感到不爽。就算有对齐，各页面风格不一致（甚至同一页面内部风格就不一致）也会让人迷惑。</p><p>如果需要录入的字段很多，页面应适当分组，让用户有“喘气”的时间，例如：</p><table>    <tbody>        <tr>            <th colspan="2">基本信息</th>        </tr>        <tr>            <td>身份证号码：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>姓名：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>性别：</td>            <td>                <input type="radio" name="gender" id="male">                <label for="male">男</label>                <input type="radio" name="gender" id="female">                <label for="female">女</label>            </td>        </tr>        <tr>            <td colspan="2">...</td>        </tr>        <tr>            <th colspan="2">学籍信息</th>        </tr>        <tr>            <td>学院：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>班级：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>学号：</td>            <td><input type="text"></td>        </tr>        <tr>            <td colspan="2">...</td>        </tr>        <tr>            <th colspan="2">学生个人发展信息</th>        </tr>        <tr>            <td>未来意向：</td>            <td><input type="text"></td>        </tr>        <tr>            <td colspan="2">...</td>        </tr>    </tbody></table><p>或者</p><table>    <tbody>        <tr>            <td colspan="2" style="text-align: center;">                <span style="border: 1px solid black; border-radius: 50px; width: 30px; height: 30px; display: inline-block; color: white; background-color: black;">1</span>                基本信息                →                <span style="border: 1px solid black; border-radius: 50px; width: 30px; height: 30px; display: inline-block;;">2</span>                学籍信息                →                <span style="border: 1px solid black; border-radius: 50px; width: 30px; height: 30px; display: inline-block;">3</span>                学生发展情况            </td>        </tr>        <tr>            <td>身份证号码：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>姓名：</td>            <td><input type="text"></td>        </tr>        <tr>            <td colspan="2">...</td>        </tr>        <tr>            <th colspan="2" style="text-align: right;">                <a class="btn" href="#"><i class="fa fa-arrow-circle-right fa-fw"></i>&nbsp;下一步</a>            </th>        </tr>    </tbody></table><h2 id="选填与必填"><a href="#选填与必填" class="headerlink" title="选填与必填"></a>选填与必填</h2><p>如果页面既有必填项，也有选填项，应明确告知用户，这样用户就能及时把必填项填好。如果用户点提交按钮的时候才知道页面开头有个东西是必填项，而且需要自己翻到页面开头把东西填好，心情一定会非常差。</p><p>区分必填和选填也有一些技巧，例如：</p><ul><li>全部为必填项时，不需要特意告知用户字段必填。可以用校验代替。</li><li>必填项比选填项多时，选填项提示<code>（选填）</code>。</li><li>选填项比必填项多时，必填项提示<code>(*)</code>。</li><li>全部是选填项时，需要在业务层面考虑一下必要性。如果确实需要，在页面顶部显眼位置给出提示。</li></ul><p>排布字段时，尽量把必填项放前面，选填项放后面。</p><h2 id="不必要的字段"><a href="#不必要的字段" class="headerlink" title="不必要的字段"></a>不必要的字段</h2><p>尽量减少字段数量。如果字段在业务上没有意义，而技术上又是必需的（例如id、数据有效性等），那么不要暴露给用户，放到后台处理。</p><p>常用字段可以提供默认值，例如“民族”默认值可以设置成“汉族”（通常是汉族人多——如果不是民族学校的话）。能自动填写的字段也尽量做成自动填写，例如自动带出历史数据，或者在填好“身份证号”之后，由系统自动填写“生日”和“性别”。</p><h2 id="提示信息"><a href="#提示信息" class="headerlink" title="提示信息"></a>提示信息</h2><p>提示信息应该简单、明确，并且措辞要考虑实际业务场景，避免产生歧义。举一些不好的例子：</p><ul><li><code>请输入姓名（必填）：[    ]</code>（啰嗦，<code>姓名(*)：</code>就够了）</li><li><code>电话号（格式：xxx-xxxxxxx）：[     ]</code>（应当用input标签的placeholder代替）</li><li><code>类型：[     ]</code>（“类型”、“情况”等词语语意含糊，容易产生歧义，除非业务本身就这么叫）</li></ul><p>对于用户容易犯错误的地方：</p><ul><li>如果能由程序“消化”，例如输入数据包含空格，那么默默地“消化”即可。</li><li>否则给加个显眼的提示，例如提示“2019级”和“2019届”的区别。</li></ul><p>“表单填写注意事项”要放在醒目位置，用醒目的样式书写，以便引起用户重视。许多人经常不在乎注意事项，所以行文更要挑重点，避免占篇幅。值得注意但能让用户在填写时顺便留意的事情可以交给校验处理。</p><h2 id="“下一个”"><a href="#“下一个”" class="headerlink" title="“下一个”"></a>“下一个”</h2><p>需要考虑一下业务场景：在实际操作时，用户需要录入的数据多吗？</p><p>如果数据量比较多，那么建议给用户加个“下一个”按钮，录完一个就直接进下一个（当然别忘了把数据给保存好），节约时间。数量越多，节约效果越好。</p><h1 id="实现方面的问题"><a href="#实现方面的问题" class="headerlink" title="实现方面的问题"></a>实现方面的问题</h1><h2 id="权限问题"><a href="#权限问题" class="headerlink" title="权限问题"></a>权限问题</h2><p>在读取数据和保存数据时应对用户权限进行验证，防止读取或修改无权操作的记录。</p><p>假如编辑的URL是<code>http://127.0.0.1:8080/student/edit/3</code>，而数据库id=2的记录是其他人录入的，我们无权操作，那么在浏览器输入<code>http://127.0.0.1:8080/student/edit/2</code>之后就不应该把数据库里的数据查出来，否则就是一个严重的安全漏洞。</p><h2 id="重复提交问题"><a href="#重复提交问题" class="headerlink" title="重复提交问题"></a>重复提交问题</h2><p>开发环境的网络往往非常好，点完按钮就能跳转到操作成功的页面。但是，用户的网络不一定非常好，他们可能急于操作，担心系统保存不上而反复点击提交按钮，这样会产生多条提交的请求，系统可能也会产生多条相同记录。</p><p>这类问题有两种解决方法：</p><p>一种是在表单中设置隐藏的token，每次进入表单都生成不同的token。一旦重复提交，系统会发现token已经无效而拒绝进一步操作。有一种常见的Web攻击方式是跨站请求伪造攻击（CSRF），Web框架通常会提供基于token的解决方案，顺便就把重复提交问题给解决了。</p><p>还有一种简单粗暴却很有效果的方法：点击提交按钮之后，相关按钮立刻变灰，不允许用户点击，并且由页面给出“正在保存”的反馈信息，使用户能够耐心等待表单提交。当然，一旦保存失败，不要忘记让按钮变回原来可以点击的状态。</p><h2 id="校验问题"><a href="#校验问题" class="headerlink" title="校验问题"></a>校验问题</h2><p>前台校验是不可信任的：如果只在前台进行校验，未在后台进行校验，那么用户就可以先进入浏览器控制台，再输入<code>document.forms[0].submit()</code>来绕过各类校验。出于安全考虑，即使赶工或偷懒，也要先把后台校验给做好。</p><p>校验失败的错误提示不要含糊不清，不要只告诉用户“输入内容有误”，而是要告诉用户“手机号格式错误、学号格式错误”。除此之外，报错要避免像挤牙膏一样一次只提示一种错误，尽量一口气把所有错误都告诉用户，否则用户改了好几遍还提交不上去，心情就是崩溃的了。</p><p>另外，各表单校验风格应当统一：A页面将所有错误用一个弹窗提示出来，而B页面将每个错误字段的提示信息都放在对应字段右边，这样也会让用户困扰。</p><p>为了规避这些问题，建议使用（或自行实现专门的）校验框架来实现校验，既能统一行为，又能简化代码，让后续调整也变得方便些。</p><h2 id="没有反馈"><a href="#没有反馈" class="headerlink" title="没有反馈"></a>没有反馈</h2><p>用户提交完成后，系统不要什么反馈都没有，否则用户容易认为系统有故障。系统要给用户一个明显的信号，例如提示“提交成功”，或者直接进入下一步操作页面。即使又回到了输入页面，也不要让用户输入数据发生变化甚至消失。</p><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ol><li><a href="/2019/02/08/login-page/">登录页面</a></li><li><a href="/2019/02/09/list-page/">信息展示列表</a></li><li><strong>信息录入表单</strong></li><li>业务申办-审批流程</li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;本文继续以“学生信息管理系统”为例，讲述信息录入表单设计与开发中的一些问题。&lt;br&gt;</summary>
    
    
    
    <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="功能设计" scheme="https://plusnan.me/tags/%E5%8A%9F%E8%83%BD%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>实现一个简单粗暴的Java Web安全过滤器</title>
    <link href="https://plusnan.me/2019/08/25/security-filter/"/>
    <id>https://plusnan.me/2019/08/25/security-filter/</id>
    <published>2019-08-24T16:00:00.000Z</published>
    <updated>2020-04-22T14:04:47.366Z</updated>
    
    <content type="html"><![CDATA[<p>对于行业系统来说，如果开发人员水平一般，而且又忙于赶工期，Web安全问题就很容易抛到脑后。然而，在这类系统中，用户输入内容往往是业务相关的，范围可以预测，不会特意输入敏感词语，因此又可以用简单粗暴的方法挡住大部分常见攻击。</p><p>在Java应用中，页面加载之前会先经过过滤器（Filter），我们便可以设置一个安全过滤器SecurityFilter，以“宁可错杀一万，不可放过一个”的方式拦截常见攻击，满足基本的安全需求。<br><a id="more"></a></p><h1 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h1><p>建立SecurityFilter类，假如包名称为com.testcompany.testapp.utils.filter，骨架如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.testcompany.testapp.utils;</span><br><span class="line"></span><br><span class="line"><span class="comment">//import org.springframework.stereotype.Component;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest httpRequest = (HttpServletRequest) request;</span><br><span class="line">        HttpServletResponse httpResponse = (HttpServletResponse) response;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> intercept = <span class="keyword">false</span>;</span><br><span class="line">        String message = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取请求 URL 和 URI</span></span><br><span class="line">        String url = httpRequest.getRequestURL().toString();</span><br><span class="line">        String uri = httpRequest.getRequestURI();</span><br><span class="line"></span><br><span class="line">        logger.debug(<span class="string">&quot;url: &quot;</span> + url);</span><br><span class="line">        logger.debug(<span class="string">&quot;uri: &quot;</span> + uri);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是否属于白名单，直接放行</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 各种策略</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 结果</span></span><br><span class="line">        <span class="keyword">if</span> (!intercept) &#123;</span><br><span class="line">            <span class="comment">// 正常请求</span></span><br><span class="line">            chain.doFilter(request, response);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 被拦截，转发到报错页面</span></span><br><span class="line">            request.setAttribute(<span class="string">&quot;message&quot;</span>, message);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">&quot;/error&quot;</span>).forward(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 安全过滤器销毁</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码未进行任何拦截，我们将在后面逐步完善拦截规则。</p><p>如果你的项目有web.xml，那么需要加入以下内容：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>SecurityFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.testcompany.testapp.utils.SecurityFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>SecurityFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><br>如果你的项目没有web.xml，例如SpringBoot项目，那么你需要给SecurityFilter增加相关注解（@Component）。</p><h1 id="具体规则"><a href="#具体规则" class="headerlink" title="具体规则"></a>具体规则</h1><h2 id="防止SQL注入、跨站脚本攻击（XSS）"><a href="#防止SQL注入、跨站脚本攻击（XSS）" class="headerlink" title="防止SQL注入、跨站脚本攻击（XSS）"></a>防止SQL注入、跨站脚本攻击（XSS）</h2><p>可考虑采取敏感词的形式来预防SQL注入和XSS攻击。假设敏感词列表（具体词语参见文末）放在了<code>bannedKeywords</code>中，那么可提取GET/POST参数进行匹配：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!intercept) &#123;</span><br><span class="line">    <span class="comment">// 获取GET/POST参数</span></span><br><span class="line">    Map&lt;String, String[]&gt; paramMap = httpRequest.getParameterMap();</span><br><span class="line"></span><br><span class="line">    post_filter:</span><br><span class="line">    <span class="keyword">for</span> (String param: paramMap.keySet()) &#123;</span><br><span class="line">        <span class="keyword">for</span> (String keyword: bannedKeywords) &#123;</span><br><span class="line">            <span class="keyword">if</span> (param.toLowerCase().contains(keyword)) &#123;</span><br><span class="line">                intercept = <span class="keyword">true</span>;</span><br><span class="line">                message = <span class="string">&quot;检测到非法字符【&quot;</span> + keyword + <span class="string">&quot;】，请重新输入！&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span> post_filter;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String[] values = paramMap.get(param);</span><br><span class="line">        <span class="keyword">if</span> (values != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String value: values) &#123;</span><br><span class="line">                <span class="keyword">for</span> (String keyword: bannedKeywords) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (value.toLowerCase().contains(keyword)) &#123;</span><br><span class="line">                        intercept = <span class="keyword">true</span>;</span><br><span class="line">                        message = <span class="string">&quot;检测到非法字符【&quot;</span> + keyword + <span class="string">&quot;】，请重新输入！&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span> post_filter;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外再通过设置安全相关HTTP Header来加强防御：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 浏览器拒绝响应MIME类型不正确的资源</span></span><br><span class="line">httpResponse.setHeader(<span class="string">&quot;X-Content-Type-Options&quot;</span>, <span class="string">&quot;nosniff&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 内容安全策略（CSP）设置</span></span><br><span class="line"><span class="comment">// 参见：http://www.ruanyifeng.com/blog/2016/09/csp.html</span></span><br><span class="line"><span class="comment">// httpResponse.setHeader(&quot;Content-Security-Policy&quot;, &quot;default-src &#x27;self&#x27;&quot;);</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 浏览器防XSS设置</span></span><br><span class="line"><span class="comment">// 参见：https://www.freebuf.com/articles/web/138769.html</span></span><br><span class="line">httpResponse.addHeader(<span class="string">&quot;X-XSS-Protection&quot;</span>, <span class="string">&quot;1; mode=block&quot;</span>);</span><br></pre></td></tr></table></figure><p>需要注意的是：</p><ol><li>敏感词机制非常容易导致误判（例如拦截<code>AND</code>会把正常的英语内容也给拦截掉），需要增加例外机制，并结合业务进行充分测试。</li><li>敏感词机制无法防止所有注入，例如攻击者仍然可以通过字符编码、加空格、加回车、加注释等方式来绕过拦截。</li><li>上面GET/POST参数检测无法检测Restful API和JSON请求。如果业务有这两种请求，需另外写代码进行处理。</li></ol><h2 id="防止跨站请求伪造（CSRF）"><a href="#防止跨站请求伪造（CSRF）" class="headerlink" title="防止跨站请求伪造（CSRF）"></a>防止跨站请求伪造（CSRF）</h2><p>可以通过两种方式预防CSRF攻击，一个是校验Referer，另一个是在表单中设置并验证token。对于拦截器来说，前一种实现方式比较简单。</p><p>假如Referer域名白名单为<code>hostWhiteList</code>，那么代码可以写成：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">String referer = httpRequest.getHeader(<span class="string">&quot;Referer&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (!intercept &amp;&amp; referer != <span class="keyword">null</span>) &#123;</span><br><span class="line">    String domain = referer.replaceAll(<span class="string">&quot;^https?:\\/\\/(.*?)\\/.*&quot;</span>, <span class="string">&quot;$1&quot;</span>).toLowerCase();</span><br><span class="line">    <span class="keyword">if</span> (!hostWhiteList.contains(domain)) &#123;</span><br><span class="line">        intercept = <span class="keyword">true</span>;</span><br><span class="line">        message = <span class="string">&quot;检测到未经授权的访问，请从官方网站登录系统，并检查操作是否正常！&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了防止非法提交，可进一步考虑限制POST请求中必须有合法Referer。</p><h2 id="Host头攻击"><a href="#Host头攻击" class="headerlink" title="Host头攻击"></a>Host头攻击</h2><p>此攻击主要针对虚拟主机，换句话说，如果服务器上只有一个站点，Host头攻击实际上没有意义。然而，为了应付甲方检查，可能需要再加一遍限制：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String host = httpRequest.getHeader(<span class="string">&quot;Host&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (!intercept &amp;&amp; host != <span class="keyword">null</span> &amp;&amp; !hostWhiteList.contains(host.toLowerCase())) &#123;</span><br><span class="line">    intercept = <span class="keyword">true</span>;</span><br><span class="line">    message = <span class="string">&quot;检测到未授权访问，请重新从官方网站登录系统！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="点击劫持（Clickjacking）漏洞"><a href="#点击劫持（Clickjacking）漏洞" class="headerlink" title="点击劫持（Clickjacking）漏洞"></a>点击劫持（Clickjacking）漏洞</h2><p>加一句话即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 避免点击劫持漏洞</span></span><br><span class="line">httpResponse.addHeader(<span class="string">&quot;X-Frame-Options&quot;</span>, <span class="string">&quot;sameorigin&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="防止未登录访问、防止越权访问"><a href="#防止未登录访问、防止越权访问" class="headerlink" title="防止未登录访问、防止越权访问"></a>防止未登录访问、防止越权访问</h2><p>应用需要防止用户未登录就直接访问特定功能的URL。由于不同认证组件的管理方式不同，本文不再展开讨论。</p><p>在校验Cookie和会话时，需留意生产环境是否为集群。若配置负载均衡等设备，同一用户的请求不见得会被同一台服务器接收，实现会话机制时要考虑会话共享问题（例如配置Redis服务器）。</p><h2 id="Cookie加固"><a href="#Cookie加固" class="headerlink" title="Cookie加固"></a>Cookie加固</h2><p>Cookie需设置为HttpOnly、Secure，防止前台通过JavaScript获取到Cookie内容。</p><p>使用比较新的中间件，Cookie应该已经是HttpOnly，或者可以很容易设置成HttpOnly。然而，如果Tomcat等软件太老，你需要手工修改Cookie：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HttpSession session = httpRequest.getSession(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">if</span> (session != <span class="keyword">null</span>) &#123;</span><br><span class="line">    String sessionId = session.getId();</span><br><span class="line">    String header = <span class="string">&quot;JSESSIONID=&quot;</span> + sessionId + <span class="string">&quot;; Secure; HttpOnly; Path=/&quot;</span>;</span><br><span class="line">    httpResponse.setHeader(<span class="string">&quot;Set-Cookie&quot;</span>, header);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="“使用HTTP动词篡改的认证旁路”"><a href="#“使用HTTP动词篡改的认证旁路”" class="headerlink" title="“使用HTTP动词篡改的认证旁路”"></a>“使用HTTP动词篡改的认证旁路”</h2><p>使用AppScan等扫描软件进行扫描，可能会出现这个问题。解决起来很简单，只留一些常用的动词（GET、POST、OPTIONS等），其余全部拦截。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String method = httpRequest.getMethod();</span><br><span class="line"><span class="keyword">if</span> (!intercept &amp;&amp; !<span class="string">&quot;GET,POST,HEAD,OPTIONS,PUT,DELETE&quot;</span>.contains(method)) &#123;</span><br><span class="line">    intercept = <span class="keyword">true</span>;</span><br><span class="line">    message = <span class="string">&quot;检测到未授权的请求方式！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你的系统使用了PUT、DELETE等浏览器不支持的动词，需要分两种情况讨论：</p><ul><li>浏览器页面：框架往往会进行一些特殊处理（例如将实际请求方式保存在name为_method的隐藏域中），使浏览器以POST方式提交用户请求。这样的话不需要特意放行PUT和DELETE。</li><li>后台接口：由于调用方不是浏览器，可直接使用相应动词，此时过滤器需放行PUT和DELETE等动词。</li></ul><h2 id="限制指定IP访问-获取用户IP地址"><a href="#限制指定IP访问-获取用户IP地址" class="headerlink" title="限制指定IP访问 / 获取用户IP地址"></a>限制指定IP访问 / 获取用户IP地址</h2><p>不建议在Java层面进行控制。下面只给出获取用户IP的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取用户 IP</span></span><br><span class="line"><span class="comment">// 注意：</span></span><br><span class="line"><span class="comment">// （1）X-Real-IP需要反向代理软件进行配合设置才能获取到。</span></span><br><span class="line"><span class="comment">//      如果反向代理软件配置正确，其值可被信任。</span></span><br><span class="line"><span class="comment">// （2）X-Forwarded-For记录了用户真实IP，但该Header能被用户伪造，不可信任。</span></span><br><span class="line"><span class="comment">// （3）getRemoteAddr返回的是直接访问服务器的IP地址。虽然取值可信，</span></span><br><span class="line"><span class="comment">//     但是配置反向代理、负载均衡等设备之后，getRemoteAddr将返回网络设备IP，而不是用户IP。</span></span><br><span class="line"><span class="comment">// 建议：设置nginx等软件，将用户真实IP记录在X-Real-IP头中。</span></span><br><span class="line">String ip = httpRequest.getHeader(<span class="string">&quot;X-Real-IP&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (StringUtils.isEmpty(ip)) &#123;</span><br><span class="line">    ip = httpRequest.getHeader(<span class="string">&quot;X-Forwarded-For&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isNotEmpty(ip)) &#123;</span><br><span class="line">        <span class="comment">// X-Forwarded-For中可能有多个IP地址，第一个IP是用户真实IP。</span></span><br><span class="line">        ip = ip.split(<span class="string">&quot;,&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ip = request.getRemoteAddr();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">logger.debug(<span class="string">&quot;ip: &quot;</span> + ip);</span><br></pre></td></tr></table></figure><h2 id="限制指定浏览器访问"><a href="#限制指定浏览器访问" class="headerlink" title="限制指定浏览器访问"></a>限制指定浏览器访问</h2><p>如果应用不应该直接通过浏览器访问，可对浏览器UA进行限制。例如仅允许微信浏览器访问：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取用户 User-Agent</span></span><br><span class="line"><span class="comment">// 注意：用户可以篡改User-Agent，伪装成各种浏览器</span></span><br><span class="line">String ua = httpRequest.getHeader(<span class="string">&quot;User-Agent&quot;</span>);</span><br><span class="line">logger.debug(<span class="string">&quot;ua: &quot;</span> + ua);</span><br><span class="line"><span class="keyword">if</span> (!intercept &amp;&amp; ua != <span class="keyword">null</span> &amp;&amp; !ua.contains(<span class="string">&quot;MicroMessenger&quot;</span>)) &#123;</span><br><span class="line">    intercept = <span class="keyword">true</span>;</span><br><span class="line">    message = <span class="string">&quot;请使用微信访问本页面！&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外，出于友好性考虑，可将报错页面换成微信公众号二维码，以便用户扫描关注。</p><h2 id="直接放行"><a href="#直接放行" class="headerlink" title="直接放行"></a>直接放行</h2><p>有些文件格式完全无害，例如服务器本身提供的js、css等静态资源，可考虑直接放行此类扩展名。</p><p>由于重定向之后会再次经过SecurityFilter，而所有已经拦截的请求都重定向到了报错页面，所以报错页面也需要放行，不要再将报错页面forward到报错页面，导致死循环。</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>本过滤器功能简单粗暴，然而仍然会有漏网之鱼，例如通过加注释符号便可绕过SQL注入拦截。</p><p>最有效的解决方案，还是要求开发人员平时就注重安全（例如SQL使用参数绑定、页面渲染时进行HTML转义等），测试人员也针对安全问题进行测试，在上线之前就尽量消除隐患。</p><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><p>以Spring框架为例，将上述代码组合到一起，并加入yml配置文件支持，完整代码如下：</p><p>SecurityFilter.java：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.testcompany.testapp.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.ClassPathResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.yaml.snakeyaml.Yaml;</span><br><span class="line"><span class="keyword">import</span> org.yaml.snakeyaml.error.YAMLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(SecurityFilter.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 系统安全参数设置</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SecurityConfig config = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从配置文件读取系统安全参数配置</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        Yaml yaml = <span class="keyword">new</span> Yaml();</span><br><span class="line">        <span class="keyword">try</span> (InputStream inputStream = <span class="keyword">new</span> ClassPathResource(<span class="string">&quot;security.yml&quot;</span>).getInputStream()) &#123;</span><br><span class="line">            config = yaml.loadAs(inputStream, SecurityConfig.class);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 报错页面加入安全白名单</span></span><br><span class="line">            config.getUriWhiteList().add(config.getErrorPageUrl());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | YAMLException e) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;加载安全设置失败&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest httpRequest = (HttpServletRequest) request;</span><br><span class="line">        HttpServletResponse httpResponse = (HttpServletResponse) response;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (config == <span class="keyword">null</span>) &#123;</span><br><span class="line">            request.setAttribute(<span class="string">&quot;message&quot;</span>, <span class="string">&quot;系统安全设置加载失败，请检查错误并重新启动系统！&quot;</span>);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">&quot;/error&quot;</span>).forward(request, response);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取请求 URL 和 URI</span></span><br><span class="line">        String url = httpRequest.getRequestURL().toString();</span><br><span class="line">        String uri = httpRequest.getRequestURI();</span><br><span class="line"></span><br><span class="line">        logger.debug(<span class="string">&quot;url: &quot;</span> + url);</span><br><span class="line">        logger.debug(<span class="string">&quot;uri: &quot;</span> + uri);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是否属于不过滤的白名单URI</span></span><br><span class="line">        <span class="keyword">if</span> (config.getUriWhiteList().contains(uri)) &#123;</span><br><span class="line">            chain.doFilter(request, response);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是否为白名单扩展名</span></span><br><span class="line">        <span class="keyword">int</span> pos = uri.lastIndexOf(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (pos &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">            String extName = uri.substring(pos + <span class="number">1</span>).toLowerCase();</span><br><span class="line">            <span class="keyword">if</span> (config.extWhiteList.contains(extName)) &#123;</span><br><span class="line">                chain.doFilter(request, response);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> intercept = <span class="keyword">false</span>;</span><br><span class="line">        String message = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 指定输入/输出字符编码</span></span><br><span class="line">        String encoding = config.getEncoding();</span><br><span class="line">        <span class="keyword">if</span> (encoding != <span class="keyword">null</span>) &#123;</span><br><span class="line">            httpRequest.setCharacterEncoding(encoding);</span><br><span class="line">            httpResponse.setCharacterEncoding(encoding);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断用户是否登录（略）</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 验证用户权限（略）</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 增加Cookie安全性：添加HttpOnly和Secure属性，防止Cookie被通过js非法获取</span></span><br><span class="line">        <span class="comment">// 注意：一般是很老的中间件才需要手动设置</span></span><br><span class="line">        HttpSession session = httpRequest.getSession(<span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">if</span> (session != <span class="keyword">null</span>) &#123;</span><br><span class="line">            String sessionId = session.getId();</span><br><span class="line">            String header = <span class="string">&quot;JSESSIONID=&quot;</span> + sessionId + <span class="string">&quot;; Secure; HttpOnly; Path=/&quot;</span>;</span><br><span class="line">            httpResponse.setHeader(<span class="string">&quot;Set-Cookie&quot;</span>, header);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 避免点击劫持漏洞</span></span><br><span class="line">        httpResponse.addHeader(<span class="string">&quot;X-Frame-Options&quot;</span>, <span class="string">&quot;sameorigin&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 跨域资源共享CORS</span></span><br><span class="line">        String origin = httpRequest.getHeader(<span class="string">&quot;Origin&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(origin)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (config.getCorsWhiteList().contains(origin)) &#123;</span><br><span class="line">                httpResponse.setHeader(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, origin);</span><br><span class="line">                httpResponse.setHeader(<span class="string">&quot;Access-Control-Allow-Methods&quot;</span>, <span class="string">&quot;POST,GET,OPTIONS&quot;</span>);</span><br><span class="line">                httpResponse.setHeader(<span class="string">&quot;Access-Control-Max-Age&quot;</span>, <span class="string">&quot;86400&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 浏览器拒绝响应MIME类型不正确的资源</span></span><br><span class="line">        httpResponse.setHeader(<span class="string">&quot;X-Content-Type-Options&quot;</span>, <span class="string">&quot;nosniff&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 内容安全策略（CSP）设置</span></span><br><span class="line">        <span class="comment">// 参见：http://www.ruanyifeng.com/blog/2016/09/csp.html</span></span><br><span class="line">        <span class="comment">// httpResponse.setHeader(&quot;Content-Security-Policy&quot;, &quot;default-src &#x27;self&#x27;&quot;);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 浏览器防XSS设置</span></span><br><span class="line">        <span class="comment">// 参见：https://www.freebuf.com/articles/web/138769.html</span></span><br><span class="line">        httpResponse.addHeader(<span class="string">&quot;X-XSS-Protection&quot;</span>, <span class="string">&quot;1; mode=block&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// GET/POST请求参数过滤</span></span><br><span class="line">        <span class="comment">// 主要用于防止各类注入（XSS、SQL注入等）</span></span><br><span class="line">        <span class="keyword">if</span> (!intercept) &#123;</span><br><span class="line">            <span class="comment">// 获取GET参数，实际上不需要</span></span><br><span class="line">            <span class="comment">// String queryString = httpRequest.getQueryString();</span></span><br><span class="line">            <span class="comment">// MultiValueMap&lt;String, String&gt; parameters = UriComponentsBuilder.fromUriString(uri).build().getQueryParams();</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取GET/POST参数</span></span><br><span class="line">            Map&lt;String, String[]&gt; paramMap = httpRequest.getParameterMap();</span><br><span class="line"></span><br><span class="line">            post_filter:</span><br><span class="line">            <span class="keyword">for</span> (String param: paramMap.keySet()) &#123;</span><br><span class="line">                <span class="keyword">for</span> (String keyword: config.getBannedKeywords()) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (param.toLowerCase().contains(keyword)) &#123;</span><br><span class="line">                        intercept = <span class="keyword">true</span>;</span><br><span class="line">                        message = <span class="string">&quot;检测到非法字符【&quot;</span> + keyword + <span class="string">&quot;】，请重新输入！&quot;</span>;</span><br><span class="line">                        <span class="keyword">break</span> post_filter;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                String[] values = paramMap.get(param);</span><br><span class="line">                <span class="keyword">if</span> (values != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    Set&lt;String&gt; whiteList = config.getKeywordWhiteList().get(param.toLowerCase());</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span> (String value: values) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (String keyword: config.getBannedKeywords()) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (value.toLowerCase().contains(keyword) &amp;&amp; !(whiteList != <span class="keyword">null</span> &amp;&amp; whiteList.contains(keyword))) &#123;</span><br><span class="line">                                intercept = <span class="keyword">true</span>;</span><br><span class="line">                                message = <span class="string">&quot;检测到非法字符【&quot;</span> + keyword + <span class="string">&quot;】，请重新输入！&quot;</span>;</span><br><span class="line">                                <span class="keyword">break</span> post_filter;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 注意：如使用Restful风格的URL，还需要考虑检查url本身，并需要防止误判</span></span><br><span class="line">            <span class="comment">// for (String keyword: config.getBannedKeywords()) &#123;</span></span><br><span class="line">            <span class="comment">//     if (uri.toLowerCase().contains(keyword)) &#123;</span></span><br><span class="line">            <span class="comment">//         intercept = true;</span></span><br><span class="line">            <span class="comment">//         message = &quot;检测到非法字符【&quot; + keyword + &quot;】，请重新输入！&quot;;</span></span><br><span class="line">            <span class="comment">//         break;</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 注意：上面无法检查JSON格式内容，如有需要，可在下面代码基础上进行完善</span></span><br><span class="line">            <span class="comment">// String contentType = httpRequest.getHeader(&quot;Content-Type&quot;);</span></span><br><span class="line">            <span class="comment">// if (contentType != null &amp;&amp; contentType.toLowerCase().contains(&quot;json&quot;)) &#123;</span></span><br><span class="line">            <span class="comment">//     // 获取JSON提交内容</span></span><br><span class="line">            <span class="comment">//     StringBuilder jsonStr = new StringBuilder();</span></span><br><span class="line">            <span class="comment">//     try &#123;</span></span><br><span class="line">            <span class="comment">//         BufferedReader reader = request.getReader();</span></span><br><span class="line">            <span class="comment">//         String line;</span></span><br><span class="line">            <span class="comment">//         while ((line = reader.readLine()) != null) &#123;</span></span><br><span class="line">            <span class="comment">//             jsonStr.append(line);</span></span><br><span class="line">            <span class="comment">//         &#125;</span></span><br><span class="line">            <span class="comment">//     &#125; catch (IOException e) &#123;</span></span><br><span class="line">            <span class="comment">//         logger.error(&quot;JSON读取错误&quot;, e);</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//     // 测试是否为合法JSON对象</span></span><br><span class="line">            <span class="comment">//     String json = jsonStr.toString();</span></span><br><span class="line">            <span class="comment">//     try &#123;</span></span><br><span class="line">            <span class="comment">//         JSON.parse(json);</span></span><br><span class="line">            <span class="comment">//     &#125; catch (JSONException e) &#123;</span></span><br><span class="line">            <span class="comment">//         intercept = true;</span></span><br><span class="line">            <span class="comment">//         message = &quot;无效JSON&quot;;</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//     // 检查是否包含敏感字符</span></span><br><span class="line">            <span class="comment">//     for (String keyword: config.getBannedKeywords()) &#123;</span></span><br><span class="line">            <span class="comment">//         if (&quot;\&quot;&quot;.equals(keyword) || &quot;&#x27;&quot;.equals(keyword)) &#123;</span></span><br><span class="line">            <span class="comment">//             continue;</span></span><br><span class="line">            <span class="comment">//         &#125;</span></span><br><span class="line">            <span class="comment">//         if (json.toLowerCase().contains(keyword)) &#123;</span></span><br><span class="line">            <span class="comment">//             intercept = true;</span></span><br><span class="line">            <span class="comment">//             message = &quot;检测到非法字符【&quot; + keyword + &quot;】，请重新输入！&quot;;</span></span><br><span class="line">            <span class="comment">//             break;</span></span><br><span class="line">            <span class="comment">//         &#125;</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// &quot;使用HTTP动词篡改的认证旁路&quot;</span></span><br><span class="line">        <span class="comment">// 该策略用于应对甲方的安全扫测，实际无安全风险。</span></span><br><span class="line">        String method = httpRequest.getMethod();</span><br><span class="line">        <span class="keyword">if</span> (!intercept &amp;&amp; !<span class="string">&quot;GET,POST,HEAD,OPTIONS,PUT,DELETE&quot;</span>.contains(method)) &#123;</span><br><span class="line">            intercept = <span class="keyword">true</span>;</span><br><span class="line">            message = <span class="string">&quot;检测到未授权的请求方式！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Host头攻击拦截</span></span><br><span class="line">        <span class="comment">// 该策略用于应对甲方的安全扫测，实际安全风险不大。</span></span><br><span class="line">        String host = httpRequest.getHeader(<span class="string">&quot;Host&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!intercept &amp;&amp; host != <span class="keyword">null</span> &amp;&amp; !config.getHostWhiteList().contains(host.toLowerCase())) &#123;</span><br><span class="line">            intercept = <span class="keyword">true</span>;</span><br><span class="line">            message = <span class="string">&quot;检测到未授权访问，请重新从官方网站登录系统！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Referer拦截</span></span><br><span class="line">        <span class="comment">// 该策略主要用于预防CSRF攻击，并可在一定程度上预防盗链</span></span><br><span class="line">        <span class="comment">// 注意：</span></span><br><span class="line">        <span class="comment">// （1）Referer内容可被用户伪造</span></span><br><span class="line">        <span class="comment">// （2）仅凭Referer拦截的话，防盗链效果有限。如果想有效地防盗链，需要再采取其他措施，这里不再展开讨论。</span></span><br><span class="line">        String referer = httpRequest.getHeader(<span class="string">&quot;Referer&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!intercept) &#123;</span><br><span class="line">            <span class="keyword">if</span> (referer != <span class="keyword">null</span>) &#123;</span><br><span class="line">                String domain = referer.replaceAll(<span class="string">&quot;^https?:\\/\\/(.*?)\\/.*&quot;</span>, <span class="string">&quot;$1&quot;</span>).toLowerCase();</span><br><span class="line">                <span class="keyword">if</span> (!config.getHostWhiteList().contains(domain)) &#123;</span><br><span class="line">                    intercept = <span class="keyword">true</span>;</span><br><span class="line">                    message = <span class="string">&quot;检测到未经授权的访问，请从官方网站登录系统，并检查操作是否正常！&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 要求POST请求中包含Referer，防止非法提交表单</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;POST&quot;</span>.equals(httpRequest.getMethod())) &#123;</span><br><span class="line">                    intercept = <span class="keyword">true</span>;</span><br><span class="line">                    message = <span class="string">&quot;检测到未经授权的访问，请从官方网站登录系统，并检查操作是否正常！&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 结果</span></span><br><span class="line">        <span class="keyword">if</span> (!intercept) &#123;</span><br><span class="line">            <span class="comment">// 正常请求</span></span><br><span class="line">            chain.doFilter(request, response);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 被拦截，转发到报错页面</span></span><br><span class="line">            request.setAttribute(<span class="string">&quot;message&quot;</span>, message);</span><br><span class="line">            request.getRequestDispatcher(config.getErrorPageUrl()).forward(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 安全配置文件格式</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Set&lt;String&gt; uriWhiteList;</span><br><span class="line">        <span class="keyword">private</span> Set&lt;String&gt; extWhiteList;</span><br><span class="line">        <span class="keyword">private</span> Set&lt;String&gt; hostWhiteList;</span><br><span class="line">        <span class="keyword">private</span> List&lt;String&gt; bannedKeywords;</span><br><span class="line">        <span class="keyword">private</span> Map&lt;String, Set&lt;String&gt;&gt; keywordWhiteList;</span><br><span class="line">        <span class="keyword">private</span> Set&lt;String&gt; corsWhiteList;</span><br><span class="line">        <span class="keyword">private</span> String encoding;</span><br><span class="line">        <span class="keyword">private</span> String errorPageUrl;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">SecurityConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getUriWhiteList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> uriWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUriWhiteList</span><span class="params">(Set&lt;String&gt; uriWhiteList)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.uriWhiteList = uriWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getExtWhiteList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> extWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setExtWhiteList</span><span class="params">(Set&lt;String&gt; extWhiteList)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.extWhiteList = extWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getHostWhiteList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> hostWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHostWhiteList</span><span class="params">(Set&lt;String&gt; hostWhiteList)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.hostWhiteList = hostWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getBannedKeywords</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> bannedKeywords;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBannedKeywords</span><span class="params">(List&lt;String&gt; bannedKeywords)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.bannedKeywords = bannedKeywords;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Map&lt;String, Set&lt;String&gt;&gt; getKeywordWhiteList() &#123;</span><br><span class="line">            <span class="keyword">return</span> keywordWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setKeywordWhiteList</span><span class="params">(Map&lt;String, Set&lt;String&gt;&gt; keywordWhiteList)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.keywordWhiteList = keywordWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getCorsWhiteList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> corsWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCorsWhiteList</span><span class="params">(Set&lt;String&gt; corsWhiteList)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.corsWhiteList = corsWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getEncoding</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> encoding;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEncoding</span><span class="params">(String encoding)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.encoding = encoding;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getErrorPageUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> errorPageUrl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrorPageUrl</span><span class="params">(String errorPageUrl)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.errorPageUrl = errorPageUrl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>security.yml:<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输入/输出字符编码</span></span><br><span class="line"><span class="attr">encoding:</span> <span class="string">UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 报错页面</span></span><br><span class="line"><span class="attr">errorPageUrl:</span> <span class="string">/error</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不拦截的URI的白名单</span></span><br><span class="line"><span class="attr">uriWhiteList:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">/error</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不拦截的扩展名</span></span><br><span class="line"><span class="attr">extWhiteList:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">jpg</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">gif</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">zip</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">rar</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pdf</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">doc</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">docx</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">xls</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">xlsx</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ppt</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pptx</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">js</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">css</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可合法访问域名白名单（小写；不写协议；80和443不需要写端口）</span></span><br><span class="line"><span class="comment"># 用于Host和Referer校验</span></span><br><span class="line"><span class="comment"># 注意把自己电脑、测试环境、生产环境等都配置好</span></span><br><span class="line"><span class="attr">hostWhiteList:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8080</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">localhost:8080</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">www.yourdomain.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># XSS、SQL注入字符黑名单（小写）</span></span><br><span class="line"><span class="comment"># 注意：因绕过注入过滤方法很多，安全负责人需持续关注</span></span><br><span class="line"><span class="attr">bannedKeywords:</span></span><br><span class="line">  <span class="comment"># 防SQL注入</span></span><br><span class="line">  <span class="comment"># 各种引号</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;&quot;&#x27;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%uff07&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%u0022&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%u0027&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%22&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%27&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%c0%a7&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%c0%27&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># SQL关键字</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;@@&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;select &quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot; from &quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot; where &quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;delete &quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;update &quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;exec &quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;drop &quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;create &quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;alter &quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot; union &quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot; or &quot;</span>      <span class="comment"># 注意容易误判</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;+or+&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;+or &quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot; or+&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot; and &quot;</span>     <span class="comment"># 注意容易误判</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;+and+&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;+and &quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot; and+&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot; having &quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot; sys&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot; sp_&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;db_name&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;db_id&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;host_name&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;host_id&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 防XSS</span></span><br><span class="line">  <span class="comment"># 标签</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt;a&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt;audio&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt;iframe&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt;img&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt;input&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt;noscript&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt;object&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt;script&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt;style&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt;title&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt; a&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt; audio&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt; iframe&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt; img&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt; input&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt; noscript&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt; object&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt; script&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt; style&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&lt; title&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%3ca&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%3caudio&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%3ciframe&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%3cimg&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%3cinput&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%3cnoscript&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%3cobject&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%3cscript&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%3cstyle&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%3ctitle&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot; src=&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%20src=&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;style=&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;style =&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;style%20=&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&amp;lt;&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&amp;gt;&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&amp;amp;lt;&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&amp;amp;gt;&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%0a&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;%0d&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># JavaScript</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onclick&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;ondblclick&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onmousedown&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onmousemove&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onmouseout&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onmouseover&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onmouseup&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onkeydown&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onkeyup&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onkeypress&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onchange&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onselect&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onfocus&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onblur&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onerror&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onhelp&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onload&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;onunload&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;javascript&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;vbscript&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;jscript&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;window.&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;window[&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;document.&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;.do(&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;.do (&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;.do%20(&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;expression(&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;expression (&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;expression%20(&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;eval(&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;eval (&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;eval%20(&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;function(&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;function (&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;function%20(&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;=&gt;&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 恶意脚本（应付检查的成分更多一些）</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;.bak&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;.php&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;.asp&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;.source&quot;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 其他注入</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;$&#123;&quot;</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;#&#123;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 防注入例外字段名单</span></span><br><span class="line"><span class="comment"># 例如公司英文名字段（company_name）中出现&quot;联合跨国公司&quot;，英文名中带有&quot; UNION &quot;，可加入例外）</span></span><br><span class="line"><span class="attr">keywordWhiteList:</span></span><br><span class="line">  <span class="attr">company_name:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot; union &quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot; and &quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许跨域资源共享白名单（需要完整URL）</span></span><br><span class="line"><span class="attr">corsWhiteList:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://www.theirdomain.com</span></span><br></pre></td></tr></table></figure><br>pom.xml：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.52<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.yaml<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>snakeyaml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><br>build.gradle：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    implementation <span class="string">&#x27;org.apache.commons:commons-lang3&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;com.alibaba:fastjson:1.2.52&#x27;</span></span><br><span class="line">    implementation <span class="string">&#x27;org.yaml:snakeyaml:1.25&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;对于行业系统来说，如果开发人员水平一般，而且又忙于赶工期，Web安全问题就很容易抛到脑后。然而，在这类系统中，用户输入内容往往是业务相关的，范围可以预测，不会特意输入敏感词语，因此又可以用简单粗暴的方法挡住大部分常见攻击。&lt;/p&gt;
&lt;p&gt;在Java应用中，页面加载之前会先经过过滤器（Filter），我们便可以设置一个安全过滤器SecurityFilter，以“宁可错杀一万，不可放过一个”的方式拦截常见攻击，满足基本的安全需求。&lt;br&gt;</summary>
    
    
    
    <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Web" scheme="https://plusnan.me/tags/Web/"/>
    
    <category term="安全" scheme="https://plusnan.me/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>风险提示：请使用正版！</title>
    <link href="https://plusnan.me/2019/08/16/genius-software/"/>
    <id>https://plusnan.me/2019/08/16/genius-software/</id>
    <published>2019-08-15T16:00:00.000Z</published>
    <updated>2020-01-20T13:25:32.796Z</updated>
    
    <content type="html"><![CDATA[<p>道理大家都懂，其中的坑大家却不一定都清楚。</p><p>在中国，使用盗版软件已经是习以为常的事情。即使你去公安局自首，说自己电脑上装了一堆破解版，警察叔叔也不会把你抓起来，只会把你轰回家。但是请注意，给公司工作就是另一码事了——律师函警告！</p><p>希望借本文给大家提个醒，挣钱不易，务必小心！<br><a id="more"></a></p><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><p>在公司上班，使用盗版可能会给自己和公司招来严重后果。</p><h2 id="后门安全问题"><a href="#后门安全问题" class="headerlink" title="后门安全问题"></a>后门安全问题</h2><ul><li>2012年1月31日，<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXRob21lLmNvbS9odG1sL2l0LzEwMDY4Lmh0bQ==">部分汉化版PuTTY、WinSCP、SSH Secure等软件存在后门<i class="fa fa-external-link-alt"></i></span>。</li><li>2015年，<span class="exturl" data-url="aHR0cHM6Ly93d3cuYW50aXkuY29tL3Jlc3BvbnNlL3hjb2RlZ2hvc3QuaHRtbA==">XcodeGhost事件<i class="fa fa-external-link-alt"></i></span>：中国网络环境问题，促进了恶意版本编程软件的传播。</li><li>2016年11月，<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXFuaXUuY29tL3RocmVhdC1hbGVydC8yMTEzNi5odG1s">有人在CSDN等地散布含有勒索软件的PL/SQL Developer<i class="fa fa-external-link-alt"></i></span>。</li></ul><h2 id="律师函警告"><a href="#律师函警告" class="headerlink" title="律师函警告"></a>律师函警告</h2><ul><li><span class="exturl" data-url="aHR0cDovL2ZpbmFuY2Uuc2luYS5jb20uY24vY2hhbmppbmcvZ3NuZXdzLzIwMTQwODAxLzAxNTAxOTg3OTc4My5zaHRtbA==">公司遭到工商部门“突袭”检查盗版<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuaXRob21lLmNvbS8wLzQxMi80NzYuaHRt">2019年3月，某公司实习生使用盗版Photoshop和字体，使公司陷入诉讼和巨额赔偿<i class="fa fa-external-link-alt"></i></span>。</li><li>“版权流氓”苏州思杰马克丁：在网上散布假破解版，查到企业使用后发真律师函；国内代理价格高于官方渠道……被这家代理“污染”的软件列表可见<span class="exturl" data-url="aHR0cDovL3d3dy5tYWtlZGluZy5jb20vcHJvZHVjdHMuaHRtbA==">其官网介绍<i class="fa fa-external-link-alt"></i></span>（注意其中有常用的Photoshop、TeamViewer、Xshell）。</li><li><del>任天堂最强法务部、迪士尼最强法务部、蔡徐坤律师函警告</del></li></ul><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="破财消灾"><a href="#破财消灾" class="headerlink" title="破财消灾"></a>破财消灾</h2><p>从道理上讲，花钱买正版天经地义，权益遭到侵害，维权也天经地义。如果软件真的在用，其地位不可替代，那么当然应该去买正版（虽然公司不见得能同意花钱），否则吃官司赔钱也是活该。</p><p>然而，有些厂商发律师函索要赔偿，更多是为了讹钱，甚至会“放长线钓大鱼”，在你们公司创业阶段视而不见，等你们公司挣到钱了再发律师函。对于这类公司，事先买些正版授权，把钱给够，没准以后用多少盗版他们也会视而不见了。</p><h2 id="金盆洗手"><a href="#金盆洗手" class="headerlink" title="金盆洗手"></a>金盆洗手</h2><p>别急着付钱！</p><p>如果软件不是很常用，而且官方喜欢打官司，读完本文之后，尽快把软件和软件的使用痕迹清除掉，或者采取一些防范措施，别让人用技术手段给查出来，成为日后对方发律师函和起诉的证据。</p><p>假如真的有律师函发过来，你可以先评估一下他们是真的掌握证据了，还是“敲诈勒索”（有的真是敲诈勒索）。想一想自己早在几个月前就把东西给删得干干净净的，就算各种部门现在马上来突击检查，也查不到任何证据，那么就可以理所当然地不鸟他们了，甚至怼他们一下：你说我们用你家盗版，你的证据呢？（小心反告你们敲诈勒索……）</p><h2 id="使用免费-开源替代品"><a href="#使用免费-开源替代品" class="headerlink" title="使用免费/开源替代品"></a>使用免费/开源替代品</h2><p>钱不是白来的，实在不想花钱的话，也可以使用免费或开源替代品（至少要让别人觉得你有替代品）。</p><p>不过需要注意的是，有些软件个人使用免费，商业使用收费。在安装之前，要先阅读许可协议，别看都不看就直接点同意，除非你确定对方厂商懒得管。</p><h2 id="加强教育"><a href="#加强教育" class="headerlink" title="加强教育"></a>加强教育</h2><p>有新入职员工时，要及时提醒注意版权问题。特别要留意喜欢“折腾”的人，要么要求他们买正版，要么要求使用无版权风险的软件，要么要求放弃个人喜好，使用与开发团队一样的软件（别集体翻车就行）。</p><p>除所用软件外，各种资料，例如程序代码、多媒体素材、字体等也要注意版权。要不然的话，即使躲过代理Photoshop的思杰马克丁，可能又会因应用登录页面的一张背景图片<span class="exturl" data-url="aHR0cDovL3d3dy54aW5odWFuZXQuY29tLzIwMTktMDQvMTIvY18xMjEwMTA3Mjg2Lmh0bQ==">让视觉中国找上门<i class="fa fa-external-link-alt"></i></span>（毕竟连国旗国徽的版权都是视觉中国的）。</p><p>即使是免费软件，也要到正规渠道下载，不要随便找“绿色版”、“汉化版”。谁知道里头有没有藏着删库（却让你跑不了路）的后门呢？</p><h1 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h1><h2 id="树大招风"><a href="#树大招风" class="headerlink" title="树大招风"></a>树大招风</h2><p>除了使用盗版软件，抄袭别人成果也是有风险的：</p><ul><li>汉芯：<span class="exturl" data-url="aHR0cHM6Ly9uZXdzLm15ZHJpdmVycy5jb20vMS82MTYvNjE2NzM3Lmh0bQ==">被一家装修公司“出卖”<i class="fa fa-external-link-alt"></i></span></li><li>银河麒麟：<span class="exturl" data-url="aHR0cHM6Ly93d3cud2lsbGlhbWxvbmcuaW5mby9hcmNoaXZlcy81MDguaHRtbA==">被发现是改版FreeBSD<i class="fa fa-external-link-alt"></i></span>。</li><li>红芯浏览器：<span class="exturl" data-url="aHR0cHM6Ly93d3cudGhlcGFwZXIuY24vbmV3c0RldGFpbF9mb3J3YXJkXzIzNTUyMzk=">被发现是换了壳的Chrome<i class="fa fa-external-link-alt"></i></span></li><li>木兰编程语言：<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXRob21lLmNvbS8wLzQ2OS8yMDUuaHRt">改名“素贞编程语言”才更符合其性质<i class="fa fa-external-link-alt"></i></span></li></ul><p>未经蔡徐坤本人同意就制作打篮球视频也是有风险的。</p><h2 id="在中国没遭到迫害，出国之后却吃了牢饭"><a href="#在中国没遭到迫害，出国之后却吃了牢饭" class="headerlink" title="在中国没遭到迫害，出国之后却吃了牢饭"></a>在中国没遭到迫害，出国之后却吃了牢饭</h2><p>本文开头提到，你去公安局自首，警察会把你直接轰回家。然而，换成重视版权的国家，结局会沦为吃官司和吃牢饭。因此，如果你有机会去发达国家，无论是出游、出差还是出逃，建议稍微注意一下。</p><p>不过，像非洲那类地方就无所谓了，比起挣多少钱或者用什么软件，你更需要担心自己能不能活着回国。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;道理大家都懂，其中的坑大家却不一定都清楚。&lt;/p&gt;
&lt;p&gt;在中国，使用盗版软件已经是习以为常的事情。即使你去公安局自首，说自己电脑上装了一堆破解版，警察叔叔也不会把你抓起来，只会把你轰回家。但是请注意，给公司工作就是另一码事了——律师函警告！&lt;/p&gt;
&lt;p&gt;希望借本文给大家提个醒，挣钱不易，务必小心！&lt;br&gt;</summary>
    
    
    
    <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
  </entry>
  
</feed>
