<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>infNaN</title>
  
  
  <link href="/rss.xml" rel="self"/>
  
  <link href="https://plusnan.me/"/>
  <updated>2020-02-29T05:56:00.080Z</updated>
  <id>https://plusnan.me/</id>
  
  <author>
    <name>infNaN</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在Web开发中，如果无法回避ActiveX控件——一种让用户在非IE浏览器调用控件的思路</title>
    <link href="https://plusnan.me/2019/11/25/activex-helper/"/>
    <id>https://plusnan.me/2019/11/25/activex-helper/</id>
    <published>2019-11-24T16:00:00.000Z</published>
    <updated>2020-02-29T05:56:00.080Z</updated>
    
    <content type="html"><![CDATA[<p>如果Web系统需要调用特定ActiveX控件才能操作，像身份证阅读器、读卡器、获取电脑网卡MAC地址等，而且预计控件厂商在一段时间内无法解决浏览器兼容性问题，那我们能不能想法让用户在非IE浏览器中也能调用控件呢？</p><p>本文提出一种解决思路：开发一个“控件小助手”代理程序。该程序安装在用户电脑中，负责调用ActiveX控件，并在本地建立一个简易Web Server，而业务系统相关页面则通过Ajax（备注：实际是JSONP）调用代理接口，从而间接地与控件交互。</p><a id="more"></a><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>假设业务系统未开启HTTPS，因为启用HTTPS后问题会变得复杂。</p><h1 id="示意图"><a href="#示意图" class="headerlink" title="示意图"></a>示意图</h1><p>以身份证阅读器为例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">|-----------------------------------|                      |</span><br><span class="line">|              IE浏览器              |      Windows系统      |      外设</span><br><span class="line">|                                   |                      |</span><br><span class="line">|  |------------|   |------------|  |                      |</span><br><span class="line">|  | JavaScript |---| ActiveX控件 |-------身份证阅读器驱动--------身份证阅读器</span><br><span class="line">|  |------------|   |------------|  |                      |</span><br><span class="line">|                                   |                      |</span><br><span class="line">|-----------------------------------|                      |</span><br></pre></td></tr></table></figure></p><p>ActiveX是微软专利，其他浏览器无法调用。然而，在用户电脑中安装一个代理程序（即“控件小助手”），便可通过代理程序来操作控件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">                             |------------------------------------|                |</span><br><span class="line">|------------------|         |               代理程序              |   Windows系统   |      外设</span><br><span class="line">|   Chrome浏览器    |         |                                    |                |</span><br><span class="line">|                  |         |  |--------------|   |----------|   |                |</span><br><span class="line">|  |------------|  |         |  |     小型      |   | ActiveX  |  |     身份证       |</span><br><span class="line">|  | JavaScript |-----JSONP-----|  Web Server  |---|   控件    |--------阅读器-----------身份证阅读器</span><br><span class="line">|  |------------|  |         |  |--------------|   |----------|   |     驱动        |</span><br><span class="line">|                  |         |                                    |                |</span><br><span class="line">|------------------|         |------------------------------------|                |</span><br></pre></td></tr></table></figure><h1 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h1><p>假设原先的读卡逻辑为：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"readCardButton"</span> <span class="attr">onclick</span>=<span class="string">"readCard()"</span>&gt;</span>读取身份证<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">readCard</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (<span class="built_in">window</span>.cardReader.Check) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> check = <span class="built_in">window</span>.cardReader.Check();</span></span><br><span class="line">            if (check &gt; 0) &#123;</span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> ret = <span class="built_in">window</span>.cardReader.ReadCard();</span></span><br><span class="line">                if (ret !== 0) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 读取不成功，需要重试</span></span></span><br><span class="line"><span class="actionscript">                    setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                        readCard()</span><br><span class="line">                    &#125;, 1000);</span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">'读卡成功！身份证号码为'</span> + <span class="built_in">window</span>.cardReader.IdCard);</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">'无法读取身份证，请检查身份证阅读器是否连接到电脑，驱动是否正确安装！'</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            alert(<span class="string">'无法读取身份证，请检查身份证阅读器控件是否正确安装！'</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">classid</span>=<span class="string">"clsid:xxxxxx"</span> <span class="attr">id</span>=<span class="string">"cardReader"</span> <span class="attr">width</span>=<span class="string">"0"</span> <span class="attr">height</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="小助手原型"><a href="#小助手原型" class="headerlink" title="小助手原型"></a>小助手原型</h2><p>我们采用C#快速实现原型程序，这样的话需要提前准备好Visual Studio。</p><p>进入Visual Studio，新建“Windows 窗体应用 (.Net Framework)”，命名为ControlHelper，并在NuGet管理器中安装<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL05hbmN5RngvTmFuY3k=" title="https://github.com/NancyFx/Nancy">Nancy<i class="fa fa-external-link"></i></span>。在窗体Form1中添加身份证阅读器控件，命名为CardReader。</p><p>Form1.cs代码如下：<br><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Nancy.Hosting.Self;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ControlHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> NancyHost server = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 启动Web Server</span></span><br><span class="line">            server = <span class="keyword">new</span> NancyHost(<span class="keyword">new</span> Uri(<span class="string">"http://127.0.0.1:12345"</span>));</span><br><span class="line">            server.Start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> CheckResult <span class="title">Check</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> ret = CardReader.Check();</span><br><span class="line">            <span class="keyword">var</span> obj = <span class="keyword">new</span> CheckResult();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (ret &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                obj.Result = <span class="number">1</span>;</span><br><span class="line">                obj.Message = <span class="string">"身份证阅读器检测成功！"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                obj.Result = <span class="number">0</span>;</span><br><span class="line">                obj.Message = <span class="string">"无法读取身份证，请检查身份证阅读器是否连接到电脑，驱动是否正确安装！"</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> obj;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;IdCard&gt; <span class="title">ReadIdCard</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> obj = <span class="keyword">new</span> IdCard();</span><br><span class="line"></span><br><span class="line">            obj.result = <span class="number">0</span>;</span><br><span class="line">            obj.message = <span class="string">"无法读取身份证，请重试！"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> retry = <span class="number">3</span>; retry &gt; <span class="number">0</span>; retry--)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">var</span> ret = CardReader.ReadCard();</span><br><span class="line">                    <span class="keyword">if</span> (ret == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        obj.Result = <span class="number">1</span>;</span><br><span class="line">                        obj.Message = <span class="string">"读卡成功"</span>;</span><br><span class="line">                        obj.IdCard = CardReader.IdCard;</span><br><span class="line">                        <span class="comment">// 此处省略其他属性</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.Threading.Thread.Sleep(<span class="number">1000</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> obj;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Helper.cs：<br><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Nancy;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ControlHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Helper</span> : <span class="title">NancyModule</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Helper</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Get(<span class="string">"/idcard/check"</span>, param =&gt; Response.AsJson(Program.mainForm.Check()));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读卡不一定能立刻返回结果，使用async</span></span><br><span class="line">            Get(<span class="string">"/idcard/read"</span>, <span class="keyword">async</span> (context, t) =&gt; Response.AsJson(<span class="keyword">await</span> Program.mainForm.ReadIdCard()));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Serializable</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">IdCard</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Result &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Message &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> IdCard &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        <span class="comment">// 其他属性：姓名、性别、民族、出生日期、地址、签发机关、有效期、照片等</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Serializable</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CheckResult</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Result &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Message &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>代码中的监听端口为12345。为了避免冲突，可以修改成其他端口（最大65535，尽量用五位数）。由于监听地址为127.0.0.1（本机），与业务系统不同，会涉及跨域问题。为了避免离题讨论，本文代码以GET方式提供服务，并返回JSON格式数据，以便业务系统通过JSONP调用，不使用POST。</p><h2 id="Web应用页面代码调整"><a href="#Web应用页面代码调整" class="headerlink" title="Web应用页面代码调整"></a>Web应用页面代码调整</h2><p>调整读卡按钮的逻辑，先判断ActiveX控件是否可用。如果可用，沿用原先的ActiveX操作方式；如果不可用，则尝试通过$.ajax向“小助手”的小型Web Server发送请求。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readCardNew</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'#readCardButton'</span>).prop(<span class="string">'disabled'</span>, <span class="literal">true</span>);</span><br><span class="line">    <span class="comment">// 先尝试调用ActiveX控件，调不通的话就调用辅助程序</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.cardreader.ReadCard) &#123;</span><br><span class="line">        readCard();</span><br><span class="line">        $(<span class="string">'#readCardButton'</span>).prop(<span class="string">'disabled'</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: <span class="string">'http://127.0.0.1:12345/idcard/check'</span>,</span><br><span class="line">            dataType: <span class="string">'jsonp'</span>,</span><br><span class="line">            timeout: <span class="number">500</span>,</span><br><span class="line">            cache: <span class="literal">false</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">data1</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (data1.Result === <span class="number">0</span>) &#123;</span><br><span class="line">                    alert(data1.Message);</span><br><span class="line">                    $(<span class="string">'#readCardButton'</span>).prop(<span class="string">'disabled'</span>, <span class="literal">false</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line">                        url: <span class="string">'http://127.0.0.1:12345/idcard/read'</span>,</span><br><span class="line">                        dataType: <span class="string">'jsonp'</span>,</span><br><span class="line">                        cache: <span class="literal">false</span>,</span><br><span class="line">                        success: <span class="function"><span class="keyword">function</span> (<span class="params">data2</span>) </span>&#123;</span><br><span class="line">                            $(<span class="string">'#readCardButton'</span>).prop(<span class="string">'disabled'</span>, <span class="literal">false</span>);</span><br><span class="line">                            <span class="keyword">if</span> (data2.Result === <span class="number">0</span>) &#123;</span><br><span class="line">                                alert(data2.Message);</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                alert(<span class="string">'读卡成功！身份证号为'</span> + data2.IdCard);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        error: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            alert(<span class="string">'无法读取身份证，请重试！'</span>);</span><br><span class="line">                            $(<span class="string">'#readCardButton'</span>).prop(<span class="string">'disabled'</span>, <span class="literal">false</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                alert(<span class="string">'无法读取身份证，请检查小助手是否启动！'</span>);</span><br><span class="line">                $(<span class="string">'#readCardButton'</span>).prop(<span class="string">'disabled'</span>, <span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="投入商业使用之前"><a href="#投入商业使用之前" class="headerlink" title="投入商业使用之前"></a>投入商业使用之前</h1><p>以上是实验用原型，质量粗糙，还需要进行一些功能优化才能交付用户，例如：</p><ul><li>兼顾不同操作系统的兼容性，以及不同版本.Net Framework的兼容性。（建议使用Visual C++重新开发）</li><li>增加校验，检测用户是否已经正确安装驱动和控件，并帮助用户完成安装（需注意遵守驱动和控件的许可协议，以免吃官司）。目前状态下，如控件未正确安装，程序一启动就会崩溃。</li><li>增加开机自启、版本更新等功能。</li></ul><p>如果团队有Windows桌面应用开发经验，或者能够接受研发成本，可以考虑进一步将工具开发出来，满足用户需求，解决实际问题。当然，无论是从解决问题的角度来看，还是从开发成本的角度来看，让控件厂商去做浏览器兼容才是最合适的解决办法。</p><h2 id="关于HTTPS"><a href="#关于HTTPS" class="headerlink" title="关于HTTPS"></a>关于HTTPS</h2><p>在决定开发之前，还需要特别留意一个问题：业务系统若进行HTTPS改造，“小助手”将完全失效，因为浏览器会拒绝HTTPS网站访问HTTP网站。这是浏览器的安全特性，JavaScript脚本无法干预此行为。</p><p>一种解决思路是为“localhost”签发自签名证书，让“小助手”也使用HTTPS服务，并要求用户将该证书添加到系统信任中（注意Firefox有自己的证书库，因此Firefox要单独安装）。</p><h1 id="进一步思考"><a href="#进一步思考" class="headerlink" title="进一步思考"></a>进一步思考</h1><p>从上面代码可以看出，控件读取的身份证号是明文，用户可通过浏览器控制台等途径篡改数据，带来安全隐患，而且这个漏洞无法在前端与控件层面补救。但是，如果全面改用“小助手”，便可在“小助手”一端“动手脚”，用可逆算法加密身份证信息，传到服务器之后才进行解密，从而防止用户在浏览器非法录入信息或篡改数据。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果Web系统需要调用特定ActiveX控件才能操作，像身份证阅读器、读卡器、获取电脑网卡MAC地址等，而且预计控件厂商在一段时间内无法解决浏览器兼容性问题，那我们能不能想法让用户在非IE浏览器中也能调用控件呢？&lt;/p&gt;
&lt;p&gt;本文提出一种解决思路：开发一个“控件小助手”代理程序。该程序安装在用户电脑中，负责调用ActiveX控件，并在本地建立一个简易Web Server，而业务系统相关页面则通过Ajax（备注：实际是JSONP）调用代理接口，从而间接地与控件交互。&lt;/p&gt;
    
    </summary>
    
    
      <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
      <category term="ActiveX" scheme="https://plusnan.me/tags/ActiveX/"/>
    
  </entry>
  
  <entry>
    <title>基于第三方CDN的IPv6支持改造实施方案</title>
    <link href="https://plusnan.me/2019/11/17/add-ipv6-support/"/>
    <id>https://plusnan.me/2019/11/17/add-ipv6-support/</id>
    <published>2019-11-16T16:00:00.000Z</published>
    <updated>2020-01-30T07:56:35.199Z</updated>
    
    <content type="html"><![CDATA[<p>为响应国家号召，我们又需要给生产系统增加IPv6支持，而该工作同样可借助（支持IPv6的）CDN来完成。本文为IPv6改造工作的实施方案。</p><a id="more"></a><h1 id="工作内容"><a href="#工作内容" class="headerlink" title="工作内容"></a>工作内容</h1><ol><li>应用程序改造<ul><li>排查程序中涉及IP地址的代码，修改不适用于IPv6地址的逻辑。</li><li>排查数据库中涉及IP地址的字段，如果长度不够，需扩到39或以上。</li></ul></li><li>按<a href="/2019/11/16/http-to-https/">前文方案</a>给应用系统套CDN。</li></ol><p>（完）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为响应国家号召，我们又需要给生产系统增加IPv6支持，而该工作同样可借助（支持IPv6的）CDN来完成。本文为IPv6改造工作的实施方案。&lt;/p&gt;
    
    </summary>
    
    
      <category term="运维" scheme="https://plusnan.me/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CDN" scheme="https://plusnan.me/tags/CDN/"/>
    
      <category term="IPv6" scheme="https://plusnan.me/tags/IPv6/"/>
    
  </entry>
  
  <entry>
    <title>基于第三方CDN的HTTPS改造实施方案</title>
    <link href="https://plusnan.me/2019/11/16/http-to-https/"/>
    <id>https://plusnan.me/2019/11/16/http-to-https/</id>
    <published>2019-11-15T16:00:00.000Z</published>
    <updated>2020-01-30T13:01:04.875Z</updated>
    
    <content type="html"><![CDATA[<p>为了提升Web系统安全性，我们需对生产系统进行HTTPS改造，改造实质上可以通过套CDN来实现。本文即整个改造工作的实施方案。</p><a id="more"></a><p>（本文系统架构、域名、IP均为虚构）</p><h1 id="改造目标"><a href="#改造目标" class="headerlink" title="改造目标"></a>改造目标</h1><ol><li>部署CDN</li><li>通过CDN实现HTTPS支持</li></ol><h1 id="系统部署架构"><a href="#系统部署架构" class="headerlink" title="系统部署架构"></a>系统部署架构</h1><p>系统为传统的Web应用部署架构。系统分为PC端和微信端两部分，域名和IP分别为 <span class="exturl" data-url="aHR0cDovL3d3dy54eHguY29t" title="http://www.xxx.com">www.xxx.com<i class="fa fa-external-link"></i></span> (xx.yy.zz.aa) 与 weixin.xxx.com (xx.yy.zz.bb)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Internet        |             机房内网</span><br><span class="line">                |</span><br><span class="line">PC端用户--------网关---负载均衡1---PC端应用服务器（集群）</span><br><span class="line">                |                      ↑           ↖︎</span><br><span class="line">                |                  数据库服务器     某些第三方接口</span><br><span class="line">                |                      ↓           ↙︎</span><br><span class="line">微信用户--微信---网关---负载均衡2---微信端应用服务器（集群）</span><br><span class="line">                |</span><br></pre></td></tr></table></figure><p>加入CDN后将变为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Internet              |             机房内网</span><br><span class="line">                      |</span><br><span class="line">PC端用户------\        |   &#x2F;-负载均衡1---PC端应用服务器（集群）</span><br><span class="line">              \    &#x2F;-网关-&#x2F;                   ↑           ↖︎</span><br><span class="line">              CDN--   |                  数据库服务器     某些第三方接口</span><br><span class="line">              &#x2F;    \-网关-\                   ↓           ↙︎</span><br><span class="line">微信用户--微信-&#x2F;        |   \-负载均衡2---微信端应用服务器（集群）</span><br><span class="line">                      |</span><br></pre></td></tr></table></figure><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="沟通协调"><a href="#沟通协调" class="headerlink" title="沟通协调"></a>沟通协调</h2><p>改造工作，技术不是什么难题，难就难在让不同单位不同部门之间协调一致。实施之前，确认以下各环节具体负责人，提前做好协调沟通工作：</p><ul><li>总负责人（包括业务方面和技术方面的总负责）：汇报改造工作目的、内容、预期效果和实施风险，征求领导同意。</li><li>应用系统负责人：负责应用系统改造，确保切换HTTPS之后系统能正常运行。<ul><li>对接的第三方接口负责人：同步调整应用URL。</li><li>微信公众号负责人：同步调整微信公众号后台API的URL。</li></ul></li><li>HTTPS证书管理员：负责提供HTTPS证书。</li><li>CDN对接人：负责调整CDN设置，包括引入CDN加速、导入HTTPS证书等。</li><li>域名管理员：负责在CDN设置好之后调整域名的CNAME记录。</li></ul><p>约定好实施日期与负责人联系方式，后面部分工作需各方同步进行。</p><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>由于域名已准备好，无需再做准备工作，否则要事先把一二级域名准备好并完成备案。</p><p>务必将 <span class="exturl" data-url="aHR0cDovL3d3dy54eHguY29t" title="http://www.xxx.com">www.xxx.com<i class="fa fa-external-link"></i></span> 与 weixin.xxx.com 解析出的IP记录下来，否则套CDN之后再想找源头IP会很麻烦。</p><h2 id="HTTPS证书"><a href="#HTTPS证书" class="headerlink" title="HTTPS证书"></a>HTTPS证书</h2><p>需购买HTTPS证书。具体内容本文不再讨论。</p><h2 id="CDN服务"><a href="#CDN服务" class="headerlink" title="CDN服务"></a>CDN服务</h2><p>需购买第三方CDN服务，并调好基本设置，准备随时启用。</p><h2 id="应用程序改造"><a href="#应用程序改造" class="headerlink" title="应用程序改造"></a>应用程序改造</h2><p>需对应用程序进行排查和改造，防止协议升级之后无法访问。改造完成后，需使用HTTPS域名进行测试，避免生产环境发生异常。</p><h3 id="URL排查"><a href="#URL排查" class="headerlink" title="URL排查"></a>URL排查</h3><p>浏览器通常会阻止加载Mixed Content（HTTPS页面中的HTTP资源），因此需检查前端代码和后端代码中是否有写死的网址（可用查找功能搜索“http://”），如果有http，需修改成无协议网址（例如<code>//www.xxx.com/static/js/xxx.js</code>）或https。</p><p>需要特别留意AJAX请求和POST请求。改造完成后，访问HTTP，可能会被302到HTTPS页面中，而302跳转不仅对效率有影响，还无法正确处理POST请求。</p><h3 id="安全组件排查"><a href="#安全组件排查" class="headerlink" title="安全组件排查"></a>安全组件排查</h3><p>如果应用中有安全组件（例如<a href="/2019/08/25/security-filter">简单粗暴的那种</a>），需检查URL由HTTP修改为HTTPS之后是否会被错误地拦截。</p><h3 id="接口排查"><a href="#接口排查" class="headerlink" title="接口排查"></a>接口排查</h3><p>如果对接厂商使用了我们的域名，需通知相关厂商同步调整系统URL。</p><h1 id="实施工作"><a href="#实施工作" class="headerlink" title="实施工作"></a>实施工作</h1><h2 id="用户公告"><a href="#用户公告" class="headerlink" title="用户公告"></a>用户公告</h2><p>提前通知用户：系统将进行维护，为避免业务数据丢失，请尽量避免在系统维护时段办理业务。</p><h2 id="系统部署"><a href="#系统部署" class="headerlink" title="系统部署"></a>系统部署</h2><p>分为应用程序部署、CDN部署与域名CNAME记录调整，这三项操作需同步进行。</p><h3 id="应用程序部署"><a href="#应用程序部署" class="headerlink" title="应用程序部署"></a>应用程序部署</h3><p>我们和第三方接口对接厂商需及时将新版应用部署到生产环境。</p><h3 id="CDN部署"><a href="#CDN部署" class="headerlink" title="CDN部署"></a>CDN部署</h3><p>首先，在CDN控制台需开启两个网站的加速：</p><table><thead><tr><th>域名</th><th>回源地址</th><th>端口</th></tr></thead><tbody><tr><td><span class="exturl" data-url="aHR0cDovL3d3dy54eHguY29t" title="http://www.xxx.com">www.xxx.com<i class="fa fa-external-link"></i></span></td><td>xx.yy.zz.aa</td><td>80</td></tr><tr><td>weixin.xxx.com</td><td>xx.yy.zz.bb</td><td>80</td></tr></tbody></table><p>其次需上传HTTPS证书，或通过其他CDN平台支持的方式导入证书，然后再开启HTTPS支持。</p><p>在不同CDN厂商控制台中，HTTPS支持的形式可能不同。可根据自己需要来决定继续提供HTTP访问，还是全部重定向到HTTPS。无论如何调整参数，我们需记住，HTTP到HTTPS的升级是由CDN来实现的，原站没有进行改动，始终是HTTP协议、80端口。</p><h3 id="域名CNAME记录调整"><a href="#域名CNAME记录调整" class="headerlink" title="域名CNAME记录调整"></a>域名CNAME记录调整</h3><p>CDN设置好之后，需登录域名管理控制台，按照CDN平台所提供信息修改 <span class="exturl" data-url="aHR0cDovL3d3dy54eHguY29t" title="http://www.xxx.com">www.xxx.com<i class="fa fa-external-link"></i></span> 和 weixin.xxx.com 的CNAME记录。</p><h2 id="微信后台调整"><a href="#微信后台调整" class="headerlink" title="微信后台调整"></a>微信后台调整</h2><p>登录微信公众号管理界面，修改API的地址，由HTTP改为HTTPS。</p><p>如果公众号有菜单，且菜单中涉及 weixin.xxx.com 的URL，那么需要更新一下公众号菜单。</p><h2 id="网络策略调整"><a href="#网络策略调整" class="headerlink" title="网络策略调整"></a>网络策略调整</h2><p>调整服务器网络策略，放行CDN节点的IP地址。在域名记录修改彻底生效之后，可进一步增加策略，拦截除CDN之外的所有IP访问。</p><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>由于域名CNAME调整可能不会马上生效，需要通过修改hosts的方式进行访问验证。系统正常运行则说明改造完成。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了提升Web系统安全性，我们需对生产系统进行HTTPS改造，改造实质上可以通过套CDN来实现。本文即整个改造工作的实施方案。&lt;/p&gt;
    
    </summary>
    
    
      <category term="运维" scheme="https://plusnan.me/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CDN" scheme="https://plusnan.me/tags/CDN/"/>
    
      <category term="HTTPS" scheme="https://plusnan.me/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>Web应用出现奇怪故障，原因居然是机房偷偷部署了WAF（Web应用防火墙）……</title>
    <link href="https://plusnan.me/2019/10/07/waf/"/>
    <id>https://plusnan.me/2019/10/07/waf/</id>
    <published>2019-10-06T16:00:00.000Z</published>
    <updated>2020-01-28T16:10:11.277Z</updated>
    
    <content type="html"><![CDATA[<p>近期用户反馈系统出现奇怪故障，根据系统架构对系统的每个环节都进行了排查，却未发现问题。一番折腾之后，才知道是甲方偷偷地部署了WAF（Web应用防火墙）……</p><a id="more"></a><p>（本文根据回忆编写，文中系统架构、URL与代码均为虚构）</p><h1 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h1><ul><li>业务操作A从某时起突然开始提示“操作失败”，且更换账号、清理缓存、更换浏览器等方案皆无效，用户反馈显示所有人都无法成功办理业务。</li><li>业务操作B从差不多的时间开始出故障，点击按钮没有反应，更换账号或浏览器同样无效。</li><li>其他业务未反馈异常。</li><li>询问实施与运维人员，确认近期没有碰过生产应用、生产数据库或其他相关服务器。</li></ul><h1 id="系统部署架构"><a href="#系统部署架构" class="headerlink" title="系统部署架构"></a>系统部署架构</h1><p>业务系统采用了既经典又传统的Web应用部署架构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  Internet     |                    机房</span><br><span class="line">               |</span><br><span class="line">用户 ← CDN ← 网关 ← 负载均衡 ← 应用服务器（集群） ← 数据库服务器</span><br><span class="line">               |                     ↑</span><br><span class="line">               |                 Redis服务器</span><br><span class="line">               |</span><br></pre></td></tr></table></figure><p>根据架构图，询问各环节是否靠谱：</p><ul><li>用户经常“出故障”，然而本次已确认是系统问题，不是用户环境或操作问题。</li><li>CDN由一家比较靠谱的第三方公司提供，出故障机率不大。</li><li>负载均衡设备由一家比较靠谱的厂商生产，没有故障记录。</li><li>Redis服务器、数据库服务器偶尔出故障，但本次业务问题应该与数据库无关（猜测，需要进一步确认）。</li><li>应用服务器集群，每个节点部署的应用完全相同。应用服务器有故障记录，而且有些不靠谱的开发人员会把bug带到生产系统。</li></ul><h1 id="检查过程"><a href="#检查过程" class="headerlink" title="检查过程"></a>检查过程</h1><p>因故障发生前后未对生产系统服务器进行操作，首先排除自己人操作导致故障的可能性。</p><p>接下来排除集群节点故障，因为集群各节点应用相同，且只有特定功能失败，其他功能正常，不会是节点卡死导致的。</p><p>然后又排除了CDN的原因——通过修改自己电脑的hosts文件绕过了CDN，直接与服务器原始IP连接，问题依旧。</p><p>向开发人员确认两业务的代码：操作A是Ajax请求，操作B是普通的form表单提交。</p><p>下面分别分析A与B两个业务的情况。</p><h2 id="业务A"><a href="#业务A" class="headerlink" title="业务A"></a>业务A</h2><p>使用浏览器控制台观察请求，发现业务A在Networks页面现象如下：</p><p><img src="/img/2019-10-07-waf/a-1.png" alt="a-1"></p><p>其他请求正常，说明应用服务器没挂，唯独这个个别业务可能有bug。需要登录服务器检查应用后台日志。</p><p>登录到服务器，对每个节点的应用日志进行检查，未发现报错。重复操作几遍之后再检查日志，仍然未发现报错。我们怀疑程序未打错误日志。</p><p>然而再仔细观察浏览器抓包的内容：</p><p><img src="/img/2019-10-07-waf/a-2.png" alt="a-2"></p><p>从图中可以发现，在Header里面未找到“Response Headers”，没有返回内容，“General”中也没有找到“Status Code”，说明甚至没有HTTP状态码。看来连接可能是被“掐断”了。</p><p>再用curl测试一下。本地调用的话是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ curl -v -X POST -H &quot;Content-Type: application&#x2F;json&quot; -b &quot;JSESSIONID&#x3D;从服务器拷过来的cookie&quot; -d &quot;从浏览器抓到的AJAX提交的内容&quot; http:&#x2F;&#x2F;www.xxx.com&#x2F;business&#x2F;submit</span><br><span class="line">*   Trying xxx.xxx.xxx.xxx...</span><br><span class="line">* TCP_NODELAY set</span><br><span class="line">* Connected to www.xxx.com (xxx.xxx.xxx.xxx) port 80 (#0)</span><br><span class="line">&gt; POST &#x2F;business&#x2F;submit HTTP&#x2F;1.1</span><br><span class="line">&gt; Host: www.xxx.com</span><br><span class="line">&gt; User-Agent: curl&#x2F;7.58.0</span><br><span class="line">&gt; Accept: *&#x2F;*</span><br><span class="line">&gt; Cookie: JSESSIONID&#x3D;xxxxxxx</span><br><span class="line">&gt; Content-Type: application&#x2F;json</span><br><span class="line">&gt; Content-Length: xxx</span><br><span class="line">&gt;</span><br><span class="line">* upload completely sent off: xxx out of xxx bytes</span><br><span class="line">* Empty reply from server</span><br><span class="line">* Connection #0 to host xxx.xxx.xxx.xxx left intact</span><br><span class="line">curl: (52) Empty reply from server</span><br><span class="line">* Closing connection 0</span><br></pre></td></tr></table></figure><p>未返回任何数据。</p><p>但登录到服务器里面操作就能返回HTTP 200 OK，还能看到JSON串，说明应用能正常响应：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># curl -v -X POST -H &quot;Content-Type: application&#x2F;json&quot; -b &quot;JSESSIONID&#x3D;从服务器拷过来的cookie&quot; -d &quot;从浏览器抓到的AJAX提交的内容&quot; http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;business&#x2F;submit</span><br><span class="line">*   Trying 127.0.0.1...</span><br><span class="line">* TCP_NODELAY set</span><br><span class="line">* Connected to 127.0.0.1 port 8080 (#0)</span><br><span class="line">&gt; POST &#x2F;business&#x2F;submit HTTP&#x2F;1.1</span><br><span class="line">&gt; Host: 127.0.0.1:8080</span><br><span class="line">&gt; User-Agent: curl&#x2F;7.58.0</span><br><span class="line">&gt; Accept: *&#x2F;*</span><br><span class="line">&gt; Cookie: JSESSIONID&#x3D;xxxxxxx</span><br><span class="line">&gt; Content-Type: application&#x2F;json</span><br><span class="line">&gt; Content-Length: xxx</span><br><span class="line">&gt;</span><br><span class="line">&lt; HTTP&#x2F;1.1 200 OK</span><br><span class="line">&lt; Cache-Control: no-cache</span><br><span class="line">&lt; Connection: keep-alive</span><br><span class="line">&lt; Content-Length: xxx</span><br><span class="line">&lt; Content-Type: application&#x2F;json</span><br><span class="line">&lt; Date: xxx, xx xxx xxxx xx:xx:xx GMT</span><br><span class="line">&lt;</span><br><span class="line">一个乱七八糟的JSON串</span><br><span class="line"></span><br><span class="line">* Connection #0 to host 127.0.0.1 left intact</span><br><span class="line">* Closing connection 0</span><br></pre></td></tr></table></figure><p>将127.0.0.1:1080换成负载均衡地址，重复操作几遍，仍然返回200 OK，说明负载均衡设备应该没有问题。另外对JSON串的内容进行检查，发现提示“办理“成功”或“办理失败！请勿重复办理！”，说明数据库也是正常的，否则不可能校验出“重复办理”。</p><h2 id="业务B"><a href="#业务B" class="headerlink" title="业务B"></a>业务B</h2><p>在进入B业务页面时，浏览器控制台显示oper.js有JavaScript语法错误：</p><p><img src="/img/2019-10-07-waf/b.png" alt="oper.js"></p><p>直接用浏览器查看oper.js内容，发现JavaScript脚本并未完整加载。分别在本地和服务器上使用curl命令获取oper.js内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在本地操作：</span><br><span class="line">$ curl http:&#x2F;&#x2F;www.xxx.com&#x2F;static&#x2F;js&#x2F;oper.js</span><br><span class="line">curl: (18) transfer closed with outstanding read data remaining</span><br><span class="line">一堆不完整的js代码</span><br><span class="line"></span><br><span class="line">登录到服务器：</span><br><span class="line"># curl http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;static&#x2F;js&#x2F;oper.js</span><br><span class="line">一堆完整的js代码</span><br></pre></td></tr></table></figure><p>发现：在我们电脑上执行curl，脚本还没加载完整，网络连接就被“掐断”了；在服务器上执行curl（域名分别使用127.0.0.1:8080与负载均衡地址），脚本内容能完整加载。</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>根据上面一系列现象判断，我们确认现有系统与设备未发生故障，可能某个环节调整了安全策略，导致正常请求被错误拦截。</p><p>和甲方负责人员沟通之后，得知机房近期部署了WAF，但甲方既未通知各相关单位，也未派人观察WAF拦截记录。我们直接和WAF负责人员沟通，维护白名单之后问题解决。</p><h1 id="附录：比对本地与生产环境js"><a href="#附录：比对本地与生产环境js" class="headerlink" title="附录：比对本地与生产环境js"></a>附录：比对本地与生产环境js</h1><p>与Ajax相比，对js进行排查比较简单，可以通过脚本实现。</p><p>向实施人员索要WAR包，解压到某个位置，并在终端中cd到那个位置，然后可通过一段shell脚本来进行比对：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">find . -name <span class="string">'*.js'</span> | <span class="keyword">while</span> <span class="built_in">read</span> file; <span class="keyword">do</span></span><br><span class="line">  url=<span class="string">"http://www.xxx.com/<span class="variable">$&#123;file/.\//&#125;</span>"</span></span><br><span class="line"> </span><br><span class="line">  sha_1=`shasum <span class="string">"<span class="variable">$file</span>"</span> | cut -f 1 -d <span class="string">" "</span>`</span><br><span class="line">  sha_2=`curl <span class="string">"<span class="variable">$url</span>"</span> 2&gt;/dev/null | shasum | cut -f 1 -d <span class="string">" "</span>`</span><br><span class="line">  <span class="keyword">if</span> [[ <span class="variable">$sha_1</span> != <span class="variable">$sha_2</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ERROR: <span class="variable">$url</span>"</span> &gt;&amp;2</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>检查报错的URL，如果确实是js文件未完整加载，那么可以拉清单让WAF负责人放行。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近期用户反馈系统出现奇怪故障，根据系统架构对系统的每个环节都进行了排查，却未发现问题。一番折腾之后，才知道是甲方偷偷地部署了WAF（Web应用防火墙）……&lt;/p&gt;
    
    </summary>
    
    
      <category term="运维" scheme="https://plusnan.me/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Web" scheme="https://plusnan.me/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>并不简单的基础开发工作（三）：信息录入表单</title>
    <link href="https://plusnan.me/2019/09/21/edit-page/"/>
    <id>https://plusnan.me/2019/09/21/edit-page/</id>
    <published>2019-09-20T16:00:00.000Z</published>
    <updated>2020-01-30T13:08:38.111Z</updated>
    
    <content type="html"><![CDATA[<p>本文继续以“学生信息管理系统”为例，讲述信息录入表单设计与开发中的一些问题。</p><a id="more"></a> <h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>在<a href="/2019/02/09/list-page/">前一篇文章所需功能</a>的基础上，实现学生信息录入页面：</p><table>    <tbody>        <tr>            <td>身份证号码：</td>            <td><input type="text"></td>            <td rowspan="5" style="text-align: center;">                <img width="150" src="/img/2019-09-21-edit-page/photo.png">                <a class="btn" href="#"><i class="fa fa-arrow-circle-up fa-fw"></i>&nbsp;上传照片</a>            </td>        </tr>        <tr>            <td>姓名：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>性别：</td>            <td>                <input type="radio" name="gender" id="male">                <label for="male">男</label>                <input type="radio" name="gender" id="female">                <label for="female">女</label>            </td>        </tr>        <tr>            <td>民族：</td>            <td><select><option>请选择</option></select></td>        </tr>        <tr>            <td>户籍地址：</td>            <td><select><option>请选择</option></select><select><option>--</option></select><select><option>--</option></select></td>        </tr>        <tr>            <td>出生日期：</td>            <td colspan="2"><input type="text">年<input type="text">月<input type="text">日</td>        </tr>        <tr>            <td>学院：</td>            <td colspan="2"><select><option>请选择</option></select></td>        </tr>        <tr>            <td>班级：</td>            <td colspan="2"><input type="text"></td>        </tr>        <tr>            <td>学号：</td>            <td colspan="2"><input type="text"></td>        </tr>        <tr>            <td>联系电话：</td>            <td colspan="2"><input type="text"></td>        </tr>        <tr>            <td>未来意向：</td>            <td colspan="2"><select><option>请选择</option></select></td>        </tr>        <tr>            <td>荣誉或奖励：</td>            <td colspan="2"><textarea></textarea></td>        </tr>        <tr>            <td>所受处分：</td>            <td colspan="2"><textarea></textarea></td>        </tr>    </tbody></table><a class="btn" href="#"><i class="fa fa-save fa-fw"></i>保存</a><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>当用户点击“保存”按钮时，浏览器会将表单输入内容发送给后台，后台接收到数据（通常由框架实现）之后，需要进行一些校验，校验通过后，将输入内容INSERT到数据库中。</p><p>除了新增内容，用户有时需要对现有内容进行修改。这时候需要由列表页面向表单页面传入现有内容的id。表单页面加载之前，需根据此id去数据库读取记录，并将数据库内容展示到用户页面中。当用户点击保存时，除了页面输入内容，此id也要传到后台，这样后台才能得知用户是修改已有记录并执行UPDATE操作，而不是增加新记录。</p><h1 id="设计方面的问题"><a href="#设计方面的问题" class="headerlink" title="设计方面的问题"></a>设计方面的问题</h1><h2 id="自由输入"><a href="#自由输入" class="headerlink" title="自由输入"></a>自由输入</h2><p>能做成选择题的地方就不要做成填空题！</p><p>如果把可以做成选择题的地方做成填空题，让用户自由输入，会难以规范输入内容，给后续统计、分析等工作带来麻烦。例如填写地址，同样是山东莱芜（莱芜已并入山东省会济南），用户可以填成：</p><ul><li>莱芜</li><li>莱芜市</li><li>山东莱芜</li><li>山东省莱芜市</li><li>山东莱芜市</li><li>山东省莱芜</li><li>山东省济南市莱芜区</li><li>山东省济南市来无区（不小心打错字了）</li><li>山东省济南市莱城区（写成了旧地名，还写错了）</li><li>济南市莱芜区</li><li>山东 莱芜</li><li>山東省濟南市萊蕪區（忘把繁体字开关关掉了）</li><li>……</li></ul><h2 id="页面布局"><a href="#页面布局" class="headerlink" title="页面布局"></a>页面布局</h2><p>录入表单是一件令人不爽的事情，操作时间长了，很容易陷入疲劳。</p><p>如果页面摆放凌乱，该对齐的地方不对齐，字体、字号、间距不一致，用户肯定感到不爽。就算有对齐，各页面风格不一致（甚至同一页面内部风格就不一致）也会让人迷惑。</p><p>如果需要录入的字段很多，页面应适当分组，让用户有“喘气”的时间，例如：</p><table>    <tbody>        <tr>            <th colspan="2">基本信息</th>        </tr>        <tr>            <td>身份证号码：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>姓名：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>性别：</td>            <td>                <input type="radio" name="gender" id="male">                <label for="male">男</label>                <input type="radio" name="gender" id="female">                <label for="female">女</label>            </td>        </tr>        <tr>            <td colspan="2">...</td>        </tr>        <tr>            <th colspan="2">学籍信息</th>        </tr>        <tr>            <td>学院：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>班级：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>学号：</td>            <td><input type="text"></td>        </tr>        <tr>            <td colspan="2">...</td>        </tr>        <tr>            <th colspan="2">学生个人发展信息</th>        </tr>        <tr>            <td>未来意向：</td>            <td><input type="text"></td>        </tr>        <tr>            <td colspan="2">...</td>        </tr>    </tbody></table><p>或者</p><table>    <tbody>        <tr>            <td colspan="2" style="text-align: center;">                <span style="border: 1px solid black; border-radius: 50px; width: 30px; height: 30px; display: inline-block; color: white; background-color: black;">1</span>                基本信息                →                <span style="border: 1px solid black; border-radius: 50px; width: 30px; height: 30px; display: inline-block;;">2</span>                学籍信息                →                <span style="border: 1px solid black; border-radius: 50px; width: 30px; height: 30px; display: inline-block;">3</span>                学生发展情况            </td>        </tr>        <tr>            <td>身份证号码：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>姓名：</td>            <td><input type="text"></td>        </tr>        <tr>            <td colspan="2">...</td>        </tr>        <tr>            <th colspan="2" style="text-align: right;">                <a class="btn" href="#"><i class="fa fa-arrow-circle-right fa-fw"></i>&nbsp;下一步</a>            </th>        </tr>    </tbody></table><h2 id="选填与必填"><a href="#选填与必填" class="headerlink" title="选填与必填"></a>选填与必填</h2><p>如果页面既有必填项，也有选填项，应明确告知用户，这样用户就能及时把必填项填好。如果用户点提交按钮的时候才知道页面开头有个东西是必填项，而且需要自己翻到页面开头把东西填好，心情一定会非常差。</p><p>区分必填和选填也有一些技巧，例如：</p><ul><li>全部为必填项时，不需要特意告知用户字段必填。可以用校验代替。</li><li>必填项比选填项多时，选填项提示<code>（选填）</code>。</li><li>选填项比必填项多时，必填项提示<code>(*)</code>。</li><li>全部是选填项时，需要在业务层面考虑一下必要性。如果确实需要，在页面顶部显眼位置给出提示。</li></ul><p>排布字段时，尽量把必填项放前面，选填项放后面。</p><h2 id="不必要的字段"><a href="#不必要的字段" class="headerlink" title="不必要的字段"></a>不必要的字段</h2><p>尽量减少字段数量。如果字段在业务上没有意义，而技术上又是必需的（例如id、数据有效性等），那么不要暴露给用户，放到后台处理。</p><p>常用字段可以提供默认值，例如“民族”默认值可以设置成“汉族”（通常是汉族人多——如果不是民族学校的话）。能自动填写的字段也尽量做成自动填写，例如自动带出历史数据，或者在填好“身份证号”之后，由系统自动填写“生日”和“性别”。</p><h2 id="提示信息"><a href="#提示信息" class="headerlink" title="提示信息"></a>提示信息</h2><p>提示信息应该简单、明确，并且措辞要考虑实际业务场景，避免产生歧义。举一些不好的例子：</p><ul><li><code>请输入姓名（必填）：[    ]</code>（啰嗦，<code>姓名(*)：</code>就够了）</li><li><code>电话号（格式：xxx-xxxxxxx）：[     ]</code>（应当用input标签的placeholder代替）</li><li><code>类型：[     ]</code>（“类型”、“情况”等词语语意含糊，容易产生歧义，除非业务本身就这么叫）</li></ul><p>对于用户容易犯错误的地方：</p><ul><li>如果能由程序“消化”，例如输入数据包含空格，那么默默地“消化”即可。</li><li>否则给加个显眼的提示，例如提示“2019级”和“2019届”的区别。</li></ul><p>“表单填写注意事项”要放在醒目位置，用醒目的样式书写，以便引起用户重视。许多人经常不在乎注意事项，所以行文更要挑重点，避免占篇幅。值得注意但能让用户在填写时顺便留意的事情可以交给校验处理。</p><h2 id="“下一个”"><a href="#“下一个”" class="headerlink" title="“下一个”"></a>“下一个”</h2><p>需要考虑一下业务场景：在实际操作时，用户需要录入的数据多吗？</p><p>如果数据量比较多，那么建议给用户加个“下一个”按钮，录完一个就直接进下一个（当然别忘了把数据给保存好），节约时间。数量越多，节约效果越好。</p><h1 id="实现方面的问题"><a href="#实现方面的问题" class="headerlink" title="实现方面的问题"></a>实现方面的问题</h1><h2 id="权限问题"><a href="#权限问题" class="headerlink" title="权限问题"></a>权限问题</h2><p>在读取数据和保存数据时应对用户权限进行验证，防止读取或修改无权操作的记录。</p><p>假如编辑的URL是<code>http://127.0.0.1:8080/student/edit/3</code>，而数据库id=2的记录是其他人录入的，我们无权操作，那么在浏览器输入<code>http://127.0.0.1:8080/student/edit/2</code>之后就不应该把数据库里的数据查出来，否则就是一个严重的安全漏洞。</p><h2 id="重复提交问题"><a href="#重复提交问题" class="headerlink" title="重复提交问题"></a>重复提交问题</h2><p>开发环境的网络往往非常好，点完按钮就能跳转到操作成功的页面。但是，用户的网络不一定非常好，他们可能急于操作，担心系统保存不上而反复点击提交按钮，这样会产生多条提交的请求，系统可能也会产生多条相同记录。</p><p>这类问题有两种解决方法：</p><p>一种是在表单中设置隐藏的token，每次进入表单都生成不同的token。一旦重复提交，系统会发现token已经无效而拒绝进一步操作。有一种常见的Web攻击方式是跨站请求伪造攻击（CSRF），Web框架通常会提供基于token的解决方案，顺便就把重复提交问题给解决了。</p><p>还有一种简单粗暴却很有效果的方法：点击提交按钮之后，相关按钮立刻变灰，不允许用户点击，并且由页面给出“正在保存”的反馈信息，使用户能够耐心等待表单提交。当然，一旦保存失败，不要忘记让按钮变回原来可以点击的状态。</p><h2 id="校验问题"><a href="#校验问题" class="headerlink" title="校验问题"></a>校验问题</h2><p>前台校验是不可信任的：如果只在前台进行校验，未在后台进行校验，那么用户就可以先进入浏览器控制台，再输入<code>document.forms[0].submit()</code>来绕过各类校验。出于安全考虑，即使赶工或偷懒，也要先把后台校验给做好。</p><p>校验失败的错误提示不要含糊不清，不要只告诉用户“输入内容有误”，而是要告诉用户“手机号格式错误、学号格式错误”。除此之外，报错要避免像挤牙膏一样一次只提示一种错误，尽量一口气把所有错误都告诉用户，否则用户改了好几遍还提交不上去，心情就是崩溃的了。</p><p>另外，各表单校验风格应当统一：A页面将所有错误用一个弹窗提示出来，而B页面将每个错误字段的提示信息都放在对应字段右边，这样也会让用户困扰。</p><p>为了规避这些问题，建议使用（或自行实现专门的）校验框架来实现校验，既能统一行为，又能简化代码，让后续调整也变得方便些。</p><h2 id="没有反馈"><a href="#没有反馈" class="headerlink" title="没有反馈"></a>没有反馈</h2><p>用户提交完成后，系统不要什么反馈都没有，否则用户容易认为系统有故障。系统要给用户一个明显的信号，例如提示“提交成功”，或者直接进入下一步操作页面。即使又回到了输入页面，也不要让用户输入数据发生变化甚至消失。</p><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ol><li><a href="/2019/02/08/login-page/">登录页面</a></li><li><a href="/2019/02/09/list-page/">信息展示列表</a></li><li><strong>信息录入表单</strong></li><li>业务申办-审批流程</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文继续以“学生信息管理系统”为例，讲述信息录入表单设计与开发中的一些问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="功能设计" scheme="https://plusnan.me/tags/%E5%8A%9F%E8%83%BD%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>实现一个简单粗暴的Java Web安全过滤器</title>
    <link href="https://plusnan.me/2019/08/25/security-filter/"/>
    <id>https://plusnan.me/2019/08/25/security-filter/</id>
    <published>2019-08-24T16:00:00.000Z</published>
    <updated>2020-01-29T05:22:31.983Z</updated>
    
    <content type="html"><![CDATA[<p>对于行业系统来说，如果开发人员水平一般，而且又忙于赶工期，Web安全问题就很容易抛到脑后。然而，在这类系统中，用户输入内容往往是业务相关的，范围可以预测，不会特意输入敏感词语，因此又可以用简单粗暴的方法挡住大部分常见攻击。</p><p>在Java应用中，页面加载之前会先经过过滤器（Filter），我们便可以设置一个安全过滤器SecurityFilter，以“宁可错杀一万，不可放过一个”的方式拦截常见攻击，满足基本的安全需求。</p><a id="more"></a><h1 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h1><p>建立SecurityFilter类，假如包名称为com.testcompany.testapp.utils.filter，骨架如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.testcompany.testapp.utils;</span><br><span class="line"></span><br><span class="line"><span class="comment">//import org.springframework.stereotype.Component;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest httpRequest = (HttpServletRequest) request;</span><br><span class="line">        HttpServletResponse httpResponse = (HttpServletResponse) response;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> intercept = <span class="keyword">false</span>;</span><br><span class="line">        String message = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取请求 URL 和 URI</span></span><br><span class="line">        String url = httpRequest.getRequestURL().toString();</span><br><span class="line">        String uri = httpRequest.getRequestURI();</span><br><span class="line"></span><br><span class="line">        logger.debug(<span class="string">"url: "</span> + url);</span><br><span class="line">        logger.debug(<span class="string">"uri: "</span> + uri);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是否属于白名单，直接放行</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 各种策略</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 结果</span></span><br><span class="line">        <span class="keyword">if</span> (!intercept) &#123;</span><br><span class="line">            <span class="comment">// 正常请求</span></span><br><span class="line">            chain.doFilter(request, response);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 被拦截，转发到报错页面</span></span><br><span class="line">            request.setAttribute(<span class="string">"message"</span>, message);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/error"</span>).forward(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 安全过滤器销毁</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码未进行任何拦截，我们将在后面逐步完善拦截规则。</p><p>如果你的项目有web.xml，那么需要加入以下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>SecurityFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.testcompany.testapp.utils.SecurityFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>SecurityFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果你的项目没有web.xml，例如SpringBoot项目，那么你需要给SecurityFilter增加相关注解（@Component）。</p><h1 id="具体规则"><a href="#具体规则" class="headerlink" title="具体规则"></a>具体规则</h1><h2 id="防止SQL注入、跨站脚本攻击（XSS）"><a href="#防止SQL注入、跨站脚本攻击（XSS）" class="headerlink" title="防止SQL注入、跨站脚本攻击（XSS）"></a>防止SQL注入、跨站脚本攻击（XSS）</h2><p>可考虑采取敏感词的形式来预防SQL注入和XSS攻击。假设敏感词列表（具体词语参见文末）放在了<code>bannedKeywords</code>中，那么可提取GET/POST参数进行匹配：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!intercept) &#123;</span><br><span class="line">    <span class="comment">// 获取GET/POST参数</span></span><br><span class="line">    Map&lt;String, String[]&gt; paramMap = httpRequest.getParameterMap();</span><br><span class="line"></span><br><span class="line">    post_filter:</span><br><span class="line">    <span class="keyword">for</span> (String param: paramMap.keySet()) &#123;</span><br><span class="line">        <span class="keyword">for</span> (String keyword: bannedKeywords) &#123;</span><br><span class="line">            <span class="keyword">if</span> (param.toLowerCase().contains(keyword)) &#123;</span><br><span class="line">                intercept = <span class="keyword">true</span>;</span><br><span class="line">                message = <span class="string">"检测到非法字符【"</span> + keyword + <span class="string">"】，请重新输入！"</span>;</span><br><span class="line">                <span class="keyword">break</span> post_filter;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String[] values = paramMap.get(param);</span><br><span class="line">        <span class="keyword">if</span> (values != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String value: values) &#123;</span><br><span class="line">                <span class="keyword">for</span> (String keyword: bannedKeywords) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (value.toLowerCase().contains(keyword)) &#123;</span><br><span class="line">                        intercept = <span class="keyword">true</span>;</span><br><span class="line">                        message = <span class="string">"检测到非法字符【"</span> + keyword + <span class="string">"】，请重新输入！"</span>;</span><br><span class="line">                        <span class="keyword">break</span> post_filter;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外再通过设置安全相关HTTP Header来加强防御：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 浏览器拒绝响应MIME类型不正确的资源</span></span><br><span class="line">httpResponse.setHeader(<span class="string">"X-Content-Type-Options"</span>, <span class="string">"nosniff"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 内容安全策略（CSP）设置</span></span><br><span class="line"><span class="comment">// 参见：http://www.ruanyifeng.com/blog/2016/09/csp.html</span></span><br><span class="line"><span class="comment">// httpResponse.setHeader("Content-Security-Policy", "default-src 'self'");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 浏览器防XSS设置</span></span><br><span class="line"><span class="comment">// 参见：https://www.freebuf.com/articles/web/138769.html</span></span><br><span class="line">httpResponse.addHeader(<span class="string">"X-XSS-Protection"</span>, <span class="string">"1; mode=block"</span>);</span><br></pre></td></tr></table></figure><p>需要注意的是：</p><ol><li>敏感词机制非常容易导致误判（例如拦截<code>AND</code>会把正常的英语内容也给拦截掉），需要增加例外机制，并结合业务进行充分测试。</li><li>敏感词机制无法防止所有注入，例如攻击者仍然可以通过字符编码、加空格、加回车、加注释等方式来绕过拦截。</li><li>上面GET/POST参数检测无法检测Restful API和JSON请求。如果业务有这两种请求，需另外写代码进行处理。</li></ol><h2 id="防止跨站请求伪造（CSRF）"><a href="#防止跨站请求伪造（CSRF）" class="headerlink" title="防止跨站请求伪造（CSRF）"></a>防止跨站请求伪造（CSRF）</h2><p>可以通过两种方式预防CSRF攻击，一个是校验Referer，另一个是在表单中设置并验证token。对于拦截器来说，前一种实现方式比较简单。</p><p>假如Referer域名白名单为<code>hostWhiteList</code>，那么代码可以写成：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">String referer = httpRequest.getHeader(<span class="string">"Referer"</span>);</span><br><span class="line"><span class="keyword">if</span> (!intercept &amp;&amp; referer != <span class="keyword">null</span>) &#123;</span><br><span class="line">    String domain = referer.replaceAll(<span class="string">"^https?:\\/\\/(.*?)\\/.*"</span>, <span class="string">"$1"</span>).toLowerCase();</span><br><span class="line">    <span class="keyword">if</span> (!hostWhiteList.contains(domain)) &#123;</span><br><span class="line">        intercept = <span class="keyword">true</span>;</span><br><span class="line">        message = <span class="string">"检测到跨站请求攻击，请检查操作是否正常！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了防止非法提交，可进一步考虑限制POST请求中必须有合法Referer。</p><h2 id="Host头攻击"><a href="#Host头攻击" class="headerlink" title="Host头攻击"></a>Host头攻击</h2><p>此攻击主要针对虚拟主机，换句话说，如果服务器上只有一个站点，Host头攻击实际上没有意义。然而，为了应付甲方检查，可能需要再加一遍限制：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String host = httpRequest.getHeader(<span class="string">"Host"</span>);</span><br><span class="line"><span class="keyword">if</span> (!intercept &amp;&amp; host != <span class="keyword">null</span> &amp;&amp; !hostWhiteList.contains(host.toLowerCase())) &#123;</span><br><span class="line">    intercept = <span class="keyword">true</span>;</span><br><span class="line">    message = <span class="string">"检测到Host头攻击【"</span> + host + <span class="string">"】，请检查网址是否正确并重新登录系统！"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="点击劫持（Clickjacking）漏洞"><a href="#点击劫持（Clickjacking）漏洞" class="headerlink" title="点击劫持（Clickjacking）漏洞"></a>点击劫持（Clickjacking）漏洞</h2><p>加一句话即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 避免点击劫持漏洞</span></span><br><span class="line">httpResponse.addHeader(<span class="string">"X-Frame-Options"</span>, <span class="string">"sameorigin"</span>);</span><br></pre></td></tr></table></figure><h2 id="防止未登录访问、防止越权访问"><a href="#防止未登录访问、防止越权访问" class="headerlink" title="防止未登录访问、防止越权访问"></a>防止未登录访问、防止越权访问</h2><p>应用需要防止用户未登录就直接访问特定功能的URL。由于不同认证组件的管理方式不同，本文不再展开讨论。</p><p>在校验Cookie和会话时，需留意生产环境是否为集群。若配置负载均衡等设备，同一用户的请求不见得会被同一台服务器接收，实现会话机制时要考虑会话共享问题（例如配置Redis服务器）。</p><h2 id="Cookie加固"><a href="#Cookie加固" class="headerlink" title="Cookie加固"></a>Cookie加固</h2><p>Cookie需设置为HttpOnly、Secure，防止前台通过JavaScript获取到Cookie内容。</p><p>使用比较新的中间件，Cookie应该已经是HttpOnly，或者可以很容易设置成HttpOnly。然而，如果Tomcat等软件太老，你需要手工修改Cookie：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HttpSession session = httpRequest.getSession(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">if</span> (session != <span class="keyword">null</span>) &#123;</span><br><span class="line">    String sessionId = session.getId();</span><br><span class="line">    String header = <span class="string">"JSESSIONID="</span> + sessionId + <span class="string">"; Secure; HttpOnly; Path=/"</span>;</span><br><span class="line">    httpResponse.setHeader(<span class="string">"Set-Cookie"</span>, header);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="“使用HTTP动词篡改的认证旁路”"><a href="#“使用HTTP动词篡改的认证旁路”" class="headerlink" title="“使用HTTP动词篡改的认证旁路”"></a>“使用HTTP动词篡改的认证旁路”</h2><p>使用AppScan等扫描软件进行扫描，可能会出现这个问题。解决起来很简单，只留一些常用的动词（GET、POST、OPTIONS等），其余全部拦截。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String method = httpRequest.getMethod();</span><br><span class="line"><span class="keyword">if</span> (!intercept &amp;&amp; !<span class="string">"GET,POST,HEAD,OPTIONS,PUT,DELETE"</span>.contains(method)) &#123;</span><br><span class="line">    intercept = <span class="keyword">true</span>;</span><br><span class="line">    message = <span class="string">"检测到未授权的请求方式！"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你的系统使用了PUT、DELETE等浏览器不支持的动词，需要分两种情况讨论：</p><ul><li>浏览器页面：框架往往会进行一些特殊处理（例如将实际请求方式保存在name为_method的隐藏域中），使浏览器以POST方式提交用户请求。这样的话不需要特意放行PUT和DELETE。</li><li>后台接口：由于调用方不是浏览器，可直接使用相应动词，此时过滤器需放行PUT和DELETE等动词。</li></ul><h2 id="限制指定IP访问-获取用户IP地址"><a href="#限制指定IP访问-获取用户IP地址" class="headerlink" title="限制指定IP访问 / 获取用户IP地址"></a>限制指定IP访问 / 获取用户IP地址</h2><p>不建议在Java层面进行控制。下面只给出获取用户IP的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取用户 IP</span></span><br><span class="line"><span class="comment">// 注意：</span></span><br><span class="line"><span class="comment">// （1）X-Real-IP需要反向代理软件进行配合设置才能获取到。</span></span><br><span class="line"><span class="comment">//      如果反向代理软件配置正确，其值可被信任。</span></span><br><span class="line"><span class="comment">// （2）X-Forwarded-For记录了用户真实IP，但该Header能被用户伪造，不可信任。</span></span><br><span class="line"><span class="comment">// （3）getRemoteAddr返回的是直接访问服务器的IP地址。虽然取值可信，</span></span><br><span class="line"><span class="comment">//     但是配置反向代理、负载均衡等设备之后，getRemoteAddr将返回网络设备IP，而不是用户IP。</span></span><br><span class="line"><span class="comment">// 建议：设置nginx等软件，将用户真实IP记录在X-Real-IP头中。</span></span><br><span class="line">String ip = httpRequest.getHeader(<span class="string">"X-Real-IP"</span>);</span><br><span class="line"><span class="keyword">if</span> (StringUtils.isEmpty(ip)) &#123;</span><br><span class="line">    ip = httpRequest.getHeader(<span class="string">"X-Forwarded-For"</span>);</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isNotEmpty(ip)) &#123;</span><br><span class="line">        <span class="comment">// X-Forwarded-For中可能有多个IP地址，第一个IP是用户真实IP。</span></span><br><span class="line">        ip = ip.split(<span class="string">","</span>)[<span class="number">0</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ip = request.getRemoteAddr();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">logger.debug(<span class="string">"ip: "</span> + ip);</span><br></pre></td></tr></table></figure><h2 id="限制指定浏览器访问"><a href="#限制指定浏览器访问" class="headerlink" title="限制指定浏览器访问"></a>限制指定浏览器访问</h2><p>如果应用不应该直接通过浏览器访问，可对浏览器UA进行限制。例如仅允许微信浏览器访问：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取用户 User-Agent</span></span><br><span class="line"><span class="comment">// 注意：用户可以篡改User-Agent，伪装成各种浏览器</span></span><br><span class="line">String ua = httpRequest.getHeader(<span class="string">"User-Agent"</span>);</span><br><span class="line">logger.debug(<span class="string">"ua: "</span> + ua);</span><br><span class="line"><span class="keyword">if</span> (!intercept &amp;&amp; ua != <span class="keyword">null</span> &amp;&amp; !ua.contains(<span class="string">"MicroMessenger"</span>)) &#123;</span><br><span class="line">    intercept = <span class="keyword">true</span>;</span><br><span class="line">    message = <span class="string">"请使用微信访问本页面！"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外，出于友好性考虑，可将报错页面换成微信公众号二维码，以便用户扫描关注。</p><h2 id="直接放行"><a href="#直接放行" class="headerlink" title="直接放行"></a>直接放行</h2><p>有些文件格式完全无害，例如服务器本身提供的js、css等静态资源，可考虑直接放行此类扩展名。</p><p>由于重定向之后会再次经过SecurityFilter，而所有已经拦截的请求都重定向到了报错页面，所以报错页面也需要放行，不要再将报错页面forward到报错页面，导致死循环。</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>本过滤器功能简单粗暴，然而仍然会有漏网之鱼，例如通过加注释符号便可绕过SQL注入拦截。</p><p>最有效的解决方案，还是要求开发人员平时就注重安全（例如SQL使用参数绑定、页面渲染时进行HTML转义等），测试人员也针对安全问题进行测试，在上线之前就尽量消除隐患。</p><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><p>以Spring框架为例，将上述代码组合到一起，并加入yml配置文件支持，完整代码如下：</p><p>SecurityFilter.java：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.testcompany.testapp.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.ClassPathResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.yaml.snakeyaml.Yaml;</span><br><span class="line"><span class="keyword">import</span> org.yaml.snakeyaml.error.YAMLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(SecurityFilter<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 系统安全参数设置</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SecurityConfig config = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从配置文件读取系统安全参数配置</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        Yaml yaml = <span class="keyword">new</span> Yaml();</span><br><span class="line">        <span class="keyword">try</span> (InputStream inputStream = <span class="keyword">new</span> ClassPathResource(<span class="string">"security.yml"</span>).getInputStream()) &#123;</span><br><span class="line">            config = yaml.loadAs(inputStream, SecurityConfig<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 报错页面加入安全白名单</span></span><br><span class="line">            config.getUriWhiteList().add(config.getErrorPageUrl());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | YAMLException e) &#123;</span><br><span class="line">            logger.error(<span class="string">"加载安全设置失败"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest httpRequest = (HttpServletRequest) request;</span><br><span class="line">        HttpServletResponse httpResponse = (HttpServletResponse) response;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (config == <span class="keyword">null</span>) &#123;</span><br><span class="line">            request.setAttribute(<span class="string">"message"</span>, <span class="string">"系统安全设置加载失败，请检查错误并重新启动系统！"</span>);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/error"</span>).forward(request, response);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取请求 URL 和 URI</span></span><br><span class="line">        String url = httpRequest.getRequestURL().toString();</span><br><span class="line">        String uri = httpRequest.getRequestURI();</span><br><span class="line"></span><br><span class="line">        logger.debug(<span class="string">"url: "</span> + url);</span><br><span class="line">        logger.debug(<span class="string">"uri: "</span> + uri);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是否属于不过滤的白名单URI</span></span><br><span class="line">        <span class="keyword">if</span> (config.getUriWhiteList().contains(uri)) &#123;</span><br><span class="line">            chain.doFilter(request, response);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是否为白名单扩展名</span></span><br><span class="line">        <span class="keyword">int</span> pos = uri.lastIndexOf(<span class="string">"."</span>);</span><br><span class="line">        <span class="keyword">if</span> (pos &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">            String extName = uri.substring(pos + <span class="number">1</span>).toLowerCase();</span><br><span class="line">            <span class="keyword">if</span> (config.extWhiteList.contains(extName)) &#123;</span><br><span class="line">                chain.doFilter(request, response);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> intercept = <span class="keyword">false</span>;</span><br><span class="line">        String message = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 指定输入/输出字符编码</span></span><br><span class="line">        String encoding = config.getEncoding();</span><br><span class="line">        <span class="keyword">if</span> (encoding != <span class="keyword">null</span>) &#123;</span><br><span class="line">            httpRequest.setCharacterEncoding(encoding);</span><br><span class="line">            httpResponse.setCharacterEncoding(encoding);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断用户是否登录（略）</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 验证用户权限（略）</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 增加Cookie安全性：添加HttpOnly和Secure属性，防止Cookie被通过js非法获取</span></span><br><span class="line">        <span class="comment">// 注意：一般是很老的中间件才需要手动设置</span></span><br><span class="line">        HttpSession session = httpRequest.getSession(<span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">if</span> (session != <span class="keyword">null</span>) &#123;</span><br><span class="line">            String sessionId = session.getId();</span><br><span class="line">            String header = <span class="string">"JSESSIONID="</span> + sessionId + <span class="string">"; Secure; HttpOnly; Path=/"</span>;</span><br><span class="line">            httpResponse.setHeader(<span class="string">"Set-Cookie"</span>, header);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 避免点击劫持漏洞</span></span><br><span class="line">        httpResponse.addHeader(<span class="string">"X-Frame-Options"</span>, <span class="string">"sameorigin"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 跨域资源共享CORS</span></span><br><span class="line">        String origin = httpRequest.getHeader(<span class="string">"Origin"</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(origin)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (config.getCorsWhiteList().contains(origin)) &#123;</span><br><span class="line">                httpResponse.setHeader(<span class="string">"Access-Control-Allow-Origin"</span>, origin);</span><br><span class="line">                httpResponse.setHeader(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"POST,GET,OPTIONS"</span>);</span><br><span class="line">                httpResponse.setHeader(<span class="string">"Access-Control-Max-Age"</span>, <span class="string">"86400"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 浏览器拒绝响应MIME类型不正确的资源</span></span><br><span class="line">        httpResponse.setHeader(<span class="string">"X-Content-Type-Options"</span>, <span class="string">"nosniff"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 内容安全策略（CSP）设置</span></span><br><span class="line">        <span class="comment">// 参见：http://www.ruanyifeng.com/blog/2016/09/csp.html</span></span><br><span class="line">        <span class="comment">// httpResponse.setHeader("Content-Security-Policy", "default-src 'self'");</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 浏览器防XSS设置</span></span><br><span class="line">        <span class="comment">// 参见：https://www.freebuf.com/articles/web/138769.html</span></span><br><span class="line">        httpResponse.addHeader(<span class="string">"X-XSS-Protection"</span>, <span class="string">"1; mode=block"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// GET/POST请求参数过滤</span></span><br><span class="line">        <span class="comment">// 主要用于防止各类注入（XSS、SQL注入等）</span></span><br><span class="line">        <span class="keyword">if</span> (!intercept) &#123;</span><br><span class="line">            <span class="comment">// 获取GET参数，实际上不需要</span></span><br><span class="line">            <span class="comment">// String queryString = httpRequest.getQueryString();</span></span><br><span class="line">            <span class="comment">// MultiValueMap&lt;String, String&gt; parameters = UriComponentsBuilder.fromUriString(uri).build().getQueryParams();</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取GET/POST参数</span></span><br><span class="line">            Map&lt;String, String[]&gt; paramMap = httpRequest.getParameterMap();</span><br><span class="line"></span><br><span class="line">            post_filter:</span><br><span class="line">            <span class="keyword">for</span> (String param: paramMap.keySet()) &#123;</span><br><span class="line">                <span class="keyword">for</span> (String keyword: config.getBannedKeywords()) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (param.toLowerCase().contains(keyword)) &#123;</span><br><span class="line">                        intercept = <span class="keyword">true</span>;</span><br><span class="line">                        message = <span class="string">"检测到非法字符【"</span> + keyword + <span class="string">"】，请重新输入！"</span>;</span><br><span class="line">                        <span class="keyword">break</span> post_filter;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                String[] values = paramMap.get(param);</span><br><span class="line">                <span class="keyword">if</span> (values != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    Set&lt;String&gt; whiteList = config.getKeywordWhiteList().get(param.toLowerCase());</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span> (String value: values) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (String keyword: config.getBannedKeywords()) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (value.toLowerCase().contains(keyword) &amp;&amp; !(whiteList != <span class="keyword">null</span> &amp;&amp; whiteList.contains(keyword))) &#123;</span><br><span class="line">                                intercept = <span class="keyword">true</span>;</span><br><span class="line">                                message = <span class="string">"检测到非法字符【"</span> + keyword + <span class="string">"】，请重新输入！"</span>;</span><br><span class="line">                                <span class="keyword">break</span> post_filter;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 注意：如使用Restful风格的URL，还需要考虑检查url本身，并需要防止误判</span></span><br><span class="line">            <span class="comment">// for (String keyword: config.getBannedKeywords()) &#123;</span></span><br><span class="line">            <span class="comment">//     if (uri.toLowerCase().contains(keyword)) &#123;</span></span><br><span class="line">            <span class="comment">//         intercept = true;</span></span><br><span class="line">            <span class="comment">//         message = "检测到非法字符【" + keyword + "】，请重新输入！";</span></span><br><span class="line">            <span class="comment">//         break;</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 注意：上面无法检查JSON格式内容，如有需要，可在下面代码基础上进行完善</span></span><br><span class="line">            <span class="comment">// String contentType = httpRequest.getHeader("Content-Type");</span></span><br><span class="line">            <span class="comment">// if (contentType != null &amp;&amp; contentType.toLowerCase().contains("json")) &#123;</span></span><br><span class="line">            <span class="comment">//     // 获取JSON提交内容</span></span><br><span class="line">            <span class="comment">//     StringBuilder jsonStr = new StringBuilder();</span></span><br><span class="line">            <span class="comment">//     try &#123;</span></span><br><span class="line">            <span class="comment">//         BufferedReader reader = request.getReader();</span></span><br><span class="line">            <span class="comment">//         String line;</span></span><br><span class="line">            <span class="comment">//         while ((line = reader.readLine()) != null) &#123;</span></span><br><span class="line">            <span class="comment">//             jsonStr.append(line);</span></span><br><span class="line">            <span class="comment">//         &#125;</span></span><br><span class="line">            <span class="comment">//     &#125; catch (IOException e) &#123;</span></span><br><span class="line">            <span class="comment">//         logger.error("JSON读取错误", e);</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//     // 测试是否为合法JSON对象</span></span><br><span class="line">            <span class="comment">//     String json = jsonStr.toString();</span></span><br><span class="line">            <span class="comment">//     try &#123;</span></span><br><span class="line">            <span class="comment">//         JSON.parse(json);</span></span><br><span class="line">            <span class="comment">//     &#125; catch (JSONException e) &#123;</span></span><br><span class="line">            <span class="comment">//         intercept = true;</span></span><br><span class="line">            <span class="comment">//         message = "无效JSON";</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//     // 检查是否包含敏感字符</span></span><br><span class="line">            <span class="comment">//     for (String keyword: config.getBannedKeywords()) &#123;</span></span><br><span class="line">            <span class="comment">//         if ("\"".equals(keyword) || "'".equals(keyword)) &#123;</span></span><br><span class="line">            <span class="comment">//             continue;</span></span><br><span class="line">            <span class="comment">//         &#125;</span></span><br><span class="line">            <span class="comment">//         if (json.toLowerCase().contains(keyword)) &#123;</span></span><br><span class="line">            <span class="comment">//             intercept = true;</span></span><br><span class="line">            <span class="comment">//             message = "检测到非法字符【" + keyword + "】，请重新输入！";</span></span><br><span class="line">            <span class="comment">//             break;</span></span><br><span class="line">            <span class="comment">//         &#125;</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// "使用HTTP动词篡改的认证旁路"</span></span><br><span class="line">        <span class="comment">// 该策略用于应对甲方的安全扫测，实际无安全风险。</span></span><br><span class="line">        String method = httpRequest.getMethod();</span><br><span class="line">        <span class="keyword">if</span> (!intercept &amp;&amp; !<span class="string">"GET,POST,HEAD,OPTIONS,PUT,DELETE"</span>.contains(method)) &#123;</span><br><span class="line">            intercept = <span class="keyword">true</span>;</span><br><span class="line">            message = <span class="string">"检测到未授权的请求方式！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Host头攻击拦截</span></span><br><span class="line">        <span class="comment">// 该策略用于应对甲方的安全扫测，实际安全风险不大。</span></span><br><span class="line">        String host = httpRequest.getHeader(<span class="string">"Host"</span>);</span><br><span class="line">        <span class="keyword">if</span> (!intercept &amp;&amp; host != <span class="keyword">null</span> &amp;&amp; !config.getHostWhiteList().contains(host.toLowerCase())) &#123;</span><br><span class="line">            intercept = <span class="keyword">true</span>;</span><br><span class="line">            message = <span class="string">"检测到Host头攻击【"</span> + host + <span class="string">"】，请检查网址是否正确并重新登录系统！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Referer拦截</span></span><br><span class="line">        <span class="comment">// 该策略主要用于预防CSRF攻击，并可在一定程度上预防盗链</span></span><br><span class="line">        <span class="comment">// 注意：</span></span><br><span class="line">        <span class="comment">// （1）Referer内容可被用户伪造</span></span><br><span class="line">        <span class="comment">// （2）仅凭Referer拦截的话，防盗链效果有限。如果想有效地防盗链，需要再采取其他措施，这里不再展开讨论。</span></span><br><span class="line">        String referer = httpRequest.getHeader(<span class="string">"Referer"</span>);</span><br><span class="line">        <span class="keyword">if</span> (!intercept) &#123;</span><br><span class="line">            <span class="keyword">if</span> (referer != <span class="keyword">null</span>) &#123;</span><br><span class="line">                String domain = referer.replaceAll(<span class="string">"^https?:\\/\\/(.*?)\\/.*"</span>, <span class="string">"$1"</span>).toLowerCase();</span><br><span class="line">                <span class="keyword">if</span> (!config.getHostWhiteList().contains(domain)) &#123;</span><br><span class="line">                    intercept = <span class="keyword">true</span>;</span><br><span class="line">                    message = <span class="string">"检测到跨站请求攻击，请检查操作是否正常！"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 要求POST请求中包含Referer，防止非法提交表单</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"POST"</span>.equals(httpRequest.getMethod())) &#123;</span><br><span class="line">                    intercept = <span class="keyword">true</span>;</span><br><span class="line">                    message = <span class="string">"检测到跨站请求攻击，请检查操作是否正常！"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 结果</span></span><br><span class="line">        <span class="keyword">if</span> (!intercept) &#123;</span><br><span class="line">            <span class="comment">// 正常请求</span></span><br><span class="line">            chain.doFilter(request, response);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 被拦截，转发到报错页面</span></span><br><span class="line">            request.setAttribute(<span class="string">"message"</span>, message);</span><br><span class="line">            request.getRequestDispatcher(config.getErrorPageUrl()).forward(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 安全配置文件格式</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Set&lt;String&gt; uriWhiteList;</span><br><span class="line">        <span class="keyword">private</span> Set&lt;String&gt; extWhiteList;</span><br><span class="line">        <span class="keyword">private</span> Set&lt;String&gt; hostWhiteList;</span><br><span class="line">        <span class="keyword">private</span> List&lt;String&gt; bannedKeywords;</span><br><span class="line">        <span class="keyword">private</span> Map&lt;String, Set&lt;String&gt;&gt; keywordWhiteList;</span><br><span class="line">        <span class="keyword">private</span> Set&lt;String&gt; corsWhiteList;</span><br><span class="line">        <span class="keyword">private</span> String encoding;</span><br><span class="line">        <span class="keyword">private</span> String errorPageUrl;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">SecurityConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getUriWhiteList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> uriWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUriWhiteList</span><span class="params">(Set&lt;String&gt; uriWhiteList)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.uriWhiteList = uriWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getExtWhiteList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> extWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setExtWhiteList</span><span class="params">(Set&lt;String&gt; extWhiteList)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.extWhiteList = extWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getHostWhiteList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> hostWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHostWhiteList</span><span class="params">(Set&lt;String&gt; hostWhiteList)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.hostWhiteList = hostWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getBannedKeywords</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> bannedKeywords;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBannedKeywords</span><span class="params">(List&lt;String&gt; bannedKeywords)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.bannedKeywords = bannedKeywords;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Map&lt;String, Set&lt;String&gt;&gt; getKeywordWhiteList() &#123;</span><br><span class="line">            <span class="keyword">return</span> keywordWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setKeywordWhiteList</span><span class="params">(Map&lt;String, Set&lt;String&gt;&gt; keywordWhiteList)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.keywordWhiteList = keywordWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getCorsWhiteList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> corsWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCorsWhiteList</span><span class="params">(Set&lt;String&gt; corsWhiteList)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.corsWhiteList = corsWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getEncoding</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> encoding;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEncoding</span><span class="params">(String encoding)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.encoding = encoding;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getErrorPageUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> errorPageUrl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrorPageUrl</span><span class="params">(String errorPageUrl)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.errorPageUrl = errorPageUrl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>security.yml:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输入/输出字符编码</span></span><br><span class="line"><span class="attr">encoding:</span> <span class="string">UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 报错页面</span></span><br><span class="line"><span class="attr">errorPageUrl:</span> <span class="string">/error</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不拦截的URI的白名单</span></span><br><span class="line"><span class="attr">uriWhiteList:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">/error</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不拦截的扩展名</span></span><br><span class="line"><span class="attr">extWhiteList:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">jpg</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">gif</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">zip</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">rar</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pdf</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">doc</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">docx</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">xls</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">xlsx</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ppt</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pptx</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">js</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">css</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可合法访问域名白名单（小写；不写协议；80和443不需要写端口）</span></span><br><span class="line"><span class="comment"># 用于Host和Referer校验</span></span><br><span class="line"><span class="comment"># 注意把自己电脑、测试环境、生产环境等都配置好</span></span><br><span class="line"><span class="attr">hostWhiteList:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8080</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">localhost:8080</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">www.yourdomain.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># XSS、SQL注入字符黑名单（小写）</span></span><br><span class="line"><span class="comment"># 注意：因绕过注入过滤方法很多，安全负责人需持续关注</span></span><br><span class="line"><span class="attr">bannedKeywords:</span></span><br><span class="line">  <span class="comment"># 防SQL注入</span></span><br><span class="line">  <span class="comment"># 各种引号</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"'"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">'"'</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%uff07"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%u0022"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%u0027"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%22"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%27"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%c0%a7"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%c0%27"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># SQL关键字</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"@@"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"select "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" from "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" where "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"delete "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"update "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"exec "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"drop "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"create "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"alter "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" union "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" or "</span>      <span class="comment"># 注意容易误判</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"+or+"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"+or "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" or+"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" and "</span>     <span class="comment"># 注意容易误判</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"+and+"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"+and "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" and+"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" having "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" sys"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" sp_"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"db_name"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"db_id"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"host_name"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"host_id"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 防XSS</span></span><br><span class="line">  <span class="comment"># 标签</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;a"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;audio"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;iframe"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;img"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;input"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;noscript"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;object"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;script"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;style"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;title"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; a"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; audio"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; iframe"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; img"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; input"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; noscript"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; object"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; script"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; style"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; title"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3ca"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3caudio"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3ciframe"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3cimg"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3cinput"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3cnoscript"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3cobject"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3cscript"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3cstyle"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3ctitle"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" src="</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%20src="</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"style="</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"style ="</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"style%20="</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&amp;lt;"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&amp;gt;"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&amp;amp;lt;"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&amp;amp;gt;"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%0a"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%0d"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># JavaScript</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onclick"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"ondblclick"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onmousedown"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onmousemove"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onmouseout"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onmouseover"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onmouseup"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onkeydown"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onkeyup"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onkeypress"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onchange"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onselect"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onfocus"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onblur"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onerror"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onhelp"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onload"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onunload"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"javascript"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"vbscript"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"jscript"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"window."</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"window["</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"document."</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">".do("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">".do ("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">".do%20("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"expression("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"expression ("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"expression%20("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"eval("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"eval ("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"eval%20("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"function("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"function ("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"function%20("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"=&gt;"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 恶意脚本（应付检查的成分更多一些）</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">".bak"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">".php"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">".asp"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">".source"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 其他注入</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"$&#123;"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"#&#123;"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 防注入例外字段名单</span></span><br><span class="line"><span class="comment"># 例如公司英文名字段（company_name）中出现"联合跨国公司"，英文名中带有" UNION "，可加入例外）</span></span><br><span class="line"><span class="attr">keywordWhiteList:</span></span><br><span class="line">  <span class="attr">company_name:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">" union "</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">" and "</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许跨域资源共享白名单（需要完整URL）</span></span><br><span class="line"><span class="attr">corsWhiteList:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://www.theirdomain.com</span></span><br></pre></td></tr></table></figure><p>pom.xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.52<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.yaml<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>snakeyaml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>build.gradle：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    implementation <span class="string">'org.apache.commons:commons-lang3'</span></span><br><span class="line">    implementation <span class="string">'com.alibaba:fastjson:1.2.52'</span></span><br><span class="line">    implementation <span class="string">'org.yaml:snakeyaml:1.25'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于行业系统来说，如果开发人员水平一般，而且又忙于赶工期，Web安全问题就很容易抛到脑后。然而，在这类系统中，用户输入内容往往是业务相关的，范围可以预测，不会特意输入敏感词语，因此又可以用简单粗暴的方法挡住大部分常见攻击。&lt;/p&gt;
&lt;p&gt;在Java应用中，页面加载之前会先经过过滤器（Filter），我们便可以设置一个安全过滤器SecurityFilter，以“宁可错杀一万，不可放过一个”的方式拦截常见攻击，满足基本的安全需求。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Web" scheme="https://plusnan.me/tags/Web/"/>
    
      <category term="安全" scheme="https://plusnan.me/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>风险提示：请使用正版！</title>
    <link href="https://plusnan.me/2019/08/16/genius-software/"/>
    <id>https://plusnan.me/2019/08/16/genius-software/</id>
    <published>2019-08-15T16:00:00.000Z</published>
    <updated>2020-01-20T13:25:32.796Z</updated>
    
    <content type="html"><![CDATA[<p>道理大家都懂，其中的坑大家却不一定都清楚。</p><p>在中国，使用盗版软件已经是习以为常的事情。即使你去公安局自首，说自己电脑上装了一堆破解版，警察叔叔也不会把你抓起来，只会把你轰回家。但是请注意，给公司工作就是另一码事了——律师函警告！</p><p>希望借本文给大家提个醒，挣钱不易，务必小心！<br><a id="more"></a></p><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><p>在公司上班，使用盗版可能会给自己和公司招来严重后果。</p><h2 id="后门安全问题"><a href="#后门安全问题" class="headerlink" title="后门安全问题"></a>后门安全问题</h2><ul><li>2012年1月31日，<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXRob21lLmNvbS9odG1sL2l0LzEwMDY4Lmh0bQ==" title="https://www.ithome.com/html/it/10068.htm">部分汉化版PuTTY、WinSCP、SSH Secure等软件存在后门<i class="fa fa-external-link"></i></span>。</li><li>2015年，<span class="exturl" data-url="aHR0cHM6Ly93d3cuYW50aXkuY29tL3Jlc3BvbnNlL3hjb2RlZ2hvc3QuaHRtbA==" title="https://www.antiy.com/response/xcodeghost.html">XcodeGhost事件<i class="fa fa-external-link"></i></span>：中国网络环境问题，促进了恶意版本编程软件的传播。</li><li>2016年11月，<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXFuaXUuY29tL3RocmVhdC1hbGVydC8yMTEzNi5odG1s" title="https://www.aqniu.com/threat-alert/21136.html">有人在CSDN等地散布含有勒索软件的PL/SQL Developer<i class="fa fa-external-link"></i></span>。</li></ul><h2 id="律师函警告"><a href="#律师函警告" class="headerlink" title="律师函警告"></a>律师函警告</h2><ul><li><span class="exturl" data-url="aHR0cDovL2ZpbmFuY2Uuc2luYS5jb20uY24vY2hhbmppbmcvZ3NuZXdzLzIwMTQwODAxLzAxNTAxOTg3OTc4My5zaHRtbA==" title="http://finance.sina.com.cn/chanjing/gsnews/20140801/015019879783.shtml">公司遭到工商部门“突袭”检查盗版<i class="fa fa-external-link"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuaXRob21lLmNvbS8wLzQxMi80NzYuaHRt" title="https://www.ithome.com/0/412/476.htm">2019年3月，某公司实习生使用盗版Photoshop和字体，使公司陷入诉讼和巨额赔偿<i class="fa fa-external-link"></i></span>。</li><li>“版权流氓”苏州思杰马克丁：在网上散布假破解版，查到企业使用后发真律师函；国内代理价格高于官方渠道……被这家代理“污染”的软件列表可见<span class="exturl" data-url="aHR0cDovL3d3dy5tYWtlZGluZy5jb20vcHJvZHVjdHMuaHRtbA==" title="http://www.makeding.com/products.html">其官网介绍<i class="fa fa-external-link"></i></span>（注意其中有常用的Photoshop、TeamViewer、Xshell）。</li><li><del>任天堂最强法务部、迪士尼最强法务部、蔡徐坤律师函警告</del></li></ul><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="破财消灾"><a href="#破财消灾" class="headerlink" title="破财消灾"></a>破财消灾</h2><p>从道理上讲，花钱买正版天经地义，权益遭到侵害，维权也天经地义。如果软件真的在用，其地位不可替代，那么当然应该去买正版（虽然公司不见得能同意花钱），否则吃官司赔钱也是活该。</p><p>然而，有些厂商发律师函索要赔偿，更多是为了讹钱，甚至会“放长线钓大鱼”，在你们公司创业阶段视而不见，等你们公司挣到钱了再发律师函。对于这类公司，事先买些正版授权，把钱给够，没准以后用多少盗版他们也会视而不见了。</p><h2 id="金盆洗手"><a href="#金盆洗手" class="headerlink" title="金盆洗手"></a>金盆洗手</h2><p>别急着付钱！</p><p>如果软件不是很常用，而且官方喜欢打官司，读完本文之后，尽快把软件和软件的使用痕迹清除掉，或者采取一些防范措施，别让人用技术手段给查出来，成为日后对方发律师函和起诉的证据。</p><p>假如真的有律师函发过来，你可以先评估一下他们是真的掌握证据了，还是“敲诈勒索”（有的真是敲诈勒索）。想一想自己早在几个月前就把东西给删得干干净净的，就算各种部门现在马上来突击检查，也查不到任何证据，那么就可以理所当然地不鸟他们了，甚至怼他们一下：你说我们用你家盗版，你的证据呢？（小心反告你们敲诈勒索……）</p><h2 id="使用免费-开源替代品"><a href="#使用免费-开源替代品" class="headerlink" title="使用免费/开源替代品"></a>使用免费/开源替代品</h2><p>钱不是白来的，实在不想花钱的话，也可以使用免费或开源替代品（至少要让别人觉得你有替代品）。</p><p>不过需要注意的是，有些软件个人使用免费，商业使用收费。在安装之前，要先阅读许可协议，别看都不看就直接点同意，除非你确定对方厂商懒得管。</p><h2 id="加强教育"><a href="#加强教育" class="headerlink" title="加强教育"></a>加强教育</h2><p>有新入职员工时，要及时提醒注意版权问题。特别要留意喜欢“折腾”的人，要么要求他们买正版，要么要求使用无版权风险的软件，要么要求放弃个人喜好，使用与开发团队一样的软件（别集体翻车就行）。</p><p>除所用软件外，各种资料，例如程序代码、多媒体素材、字体等也要注意版权。要不然的话，即使躲过代理Photoshop的思杰马克丁，可能又会因应用登录页面的一张背景图片<span class="exturl" data-url="aHR0cDovL3d3dy54aW5odWFuZXQuY29tLzIwMTktMDQvMTIvY18xMjEwMTA3Mjg2Lmh0bQ==" title="http://www.xinhuanet.com/2019-04/12/c_1210107286.htm">让视觉中国找上门<i class="fa fa-external-link"></i></span>（毕竟连国旗国徽的版权都是视觉中国的）。</p><p>即使是免费软件，也要到正规渠道下载，不要随便找“绿色版”、“汉化版”。谁知道里头有没有藏着删库（却让你跑不了路）的后门呢？</p><h1 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h1><h2 id="树大招风"><a href="#树大招风" class="headerlink" title="树大招风"></a>树大招风</h2><p>除了使用盗版软件，抄袭别人成果也是有风险的：</p><ul><li>汉芯：<span class="exturl" data-url="aHR0cHM6Ly9uZXdzLm15ZHJpdmVycy5jb20vMS82MTYvNjE2NzM3Lmh0bQ==" title="https://news.mydrivers.com/1/616/616737.htm">被一家装修公司“出卖”<i class="fa fa-external-link"></i></span></li><li>银河麒麟：<span class="exturl" data-url="aHR0cHM6Ly93d3cud2lsbGlhbWxvbmcuaW5mby9hcmNoaXZlcy81MDguaHRtbA==" title="https://www.williamlong.info/archives/508.html">被发现是改版FreeBSD<i class="fa fa-external-link"></i></span>。</li><li>红芯浏览器：<span class="exturl" data-url="aHR0cHM6Ly93d3cudGhlcGFwZXIuY24vbmV3c0RldGFpbF9mb3J3YXJkXzIzNTUyMzk=" title="https://www.thepaper.cn/newsDetail_forward_2355239">被发现是换了壳的Chrome<i class="fa fa-external-link"></i></span></li><li>木兰编程语言：<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXRob21lLmNvbS8wLzQ2OS8yMDUuaHRt" title="https://www.ithome.com/0/469/205.htm">改名“素贞编程语言”才更符合其性质<i class="fa fa-external-link"></i></span></li></ul><p>未经蔡徐坤本人同意就制作打篮球视频也是有风险的。</p><h2 id="在中国没遭到迫害，出国之后却吃了牢饭"><a href="#在中国没遭到迫害，出国之后却吃了牢饭" class="headerlink" title="在中国没遭到迫害，出国之后却吃了牢饭"></a>在中国没遭到迫害，出国之后却吃了牢饭</h2><p>本文开头提到，你去公安局自首，警察会把你直接轰回家。然而，换成重视版权的国家，结局会沦为吃官司和吃牢饭。因此，如果你有机会去发达国家，无论是出游、出差还是出逃，建议稍微注意一下。</p><p>不过，像非洲那类地方就无所谓了，比起挣多少钱或者用什么软件，你更需要担心自己能不能活着回国。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;道理大家都懂，其中的坑大家却不一定都清楚。&lt;/p&gt;
&lt;p&gt;在中国，使用盗版软件已经是习以为常的事情。即使你去公安局自首，说自己电脑上装了一堆破解版，警察叔叔也不会把你抓起来，只会把你轰回家。但是请注意，给公司工作就是另一码事了——律师函警告！&lt;/p&gt;
&lt;p&gt;希望借本文给大家提个醒，挣钱不易，务必小心！&lt;br&gt;
    
    </summary>
    
    
      <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>从Eclipse切换到IDEA（三）：传统Web项目转为Gradle项目</title>
    <link href="https://plusnan.me/2019/08/03/switch-to-idea-3/"/>
    <id>https://plusnan.me/2019/08/03/switch-to-idea-3/</id>
    <published>2019-08-02T16:00:00.000Z</published>
    <updated>2020-01-20T09:03:19.846Z</updated>
    
    <content type="html"><![CDATA[<p>除了在IDEA手工配置项目，也可考虑将传统Web项目转为Gradle项目，以便简化项目依赖管理、实现标准化构建等，也便于后续结合Jenkins等进一步实现自动化。<br><a id="more"></a></p><h1 id="项目目录结构"><a href="#项目目录结构" class="headerlink" title="项目目录结构"></a>项目目录结构</h1><p>我们以下面项目为例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&gt; WebProj1                      ----&gt; Web模块1</span><br><span class="line">    &gt; src                       ----&gt; Java源代码1</span><br><span class="line">    .   &gt; com</span><br><span class="line">    .       ...</span><br><span class="line">    &gt; config                    ----&gt; 模块配置文件1，部署时计划放到 WEB-INF&#x2F;classes 目录中</span><br><span class="line">    .   SpringMVC-servlet.xml</span><br><span class="line">    .   ...</span><br><span class="line">    &gt; WebContent                ----&gt; Web文件目录</span><br><span class="line">        &gt; WEB-INF</span><br><span class="line">        .   &gt; lib               ----&gt; 所需jar包</span><br><span class="line">        .       ...</span><br><span class="line">        .   web.xml</span><br><span class="line">        .   ...</span><br><span class="line">        index.jsp</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">&gt; WebProj2                      ----&gt; Web模块2</span><br><span class="line">    &gt; src                       ----&gt; Java源代码2</span><br><span class="line">    .   &gt; com</span><br><span class="line">    .       ...</span><br><span class="line">    &gt; config                    ----&gt; 模块配置文件2</span><br><span class="line">    .   SpringMVC-servlet.xml</span><br><span class="line">    .   ...</span><br><span class="line">    &gt; WebContent                ----&gt; Web文件目录</span><br><span class="line">        &gt; WEB-INF</span><br><span class="line">        .   &gt; lib               ----&gt; 所需jar包</span><br><span class="line">        .       ...</span><br><span class="line">        .   web.xml</span><br><span class="line">        .   ...</span><br><span class="line">        index.jsp</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">&gt; CommonProj                    ----&gt; 公共代码，另外两个Project的依赖项</span><br><span class="line">    &gt; src                       ----&gt; Java源代码</span><br><span class="line">    .   &gt; com</span><br><span class="line">    .       ...</span><br><span class="line">    &gt; commonConfig              ----&gt; 全局配置文件</span><br><span class="line">        log4j.xml</span><br><span class="line">        ...</span><br></pre></td></tr></table></figure></p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li>安装JDK 8：本文所用的Gradle 5.4既不支持古老的JDK 6，也不支持崭新的JDK 10。后文会解释如何保证不同版本JDK的兼容性。</li><li>检查各模块是否存在循环依赖：例如WebProj1依赖CommonProj，而CommonProj反过来又依赖WebProj1。这种情况在Eclipse里面能正常打包，然而切换到Gradle之后会出错，需要通过代码重构来消除错误。</li><li>统一java文件的字符编码（java就行，其他文件类型无妨）。假如一部分java代码文件是UTF-8，另一部分java代码文件用GBK，要么会出现编译错误，要么会产生乱码。</li><li>团队开发时，要提前和团队其他成员打好招呼，让大家有所准备。改造工作需要调整代码结构，因此在正式切换之前需要让大家理清未提交的代码，并保证配置文件能够正确构建。</li></ol><h1 id="开始改造"><a href="#开始改造" class="headerlink" title="开始改造"></a>开始改造</h1><h2 id="项目文件结构调整"><a href="#项目文件结构调整" class="headerlink" title="项目文件结构调整"></a>项目文件结构调整</h2><p>Maven和Gradle有很多约定俗成的要求，例如Java代码存放位置。我们需要按照这些约定来调整我们的代码结构：</p><ul><li>src（Java代码） → src/main/java</li><li>test（Java代码） → test/main/java</li><li>config（需要拷到 WEB-INF/classes 下面的配置文件） → src/main/resources</li><li>WebContent（Web文件内容，例如jsp等） → src/main/webapp</li><li>增加gradle相关配置文件，后文将介绍如何编写这些文件。</li></ul><p>调整效果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&gt; WebProj1                      ----&gt; Web模块1</span><br><span class="line">    &gt; src                       </span><br><span class="line">    .   &gt; 【main】</span><br><span class="line">    .   .   &gt; 【java】          ----&gt; Java源代码1挪到此处</span><br><span class="line">    .   .   .   &gt; com</span><br><span class="line">    .   .   .       ...</span><br><span class="line">    .   .   &gt; 【resources】     ----&gt; 模块配置文件1（原config）挪到此处</span><br><span class="line">    .   .   .   SpringMVC-servlet.xml</span><br><span class="line">    .   .   .   ...</span><br><span class="line">    .   .   &gt; 【webapp】        ----&gt; Web文件目录（原WebContent）挪到此处</span><br><span class="line">    .   .       &gt; WEB-INF</span><br><span class="line">    .   .       .   &gt; lib       ----&gt; 所需jar包</span><br><span class="line">    .   .       .       ...</span><br><span class="line">    .   .       .   web.xml</span><br><span class="line">    .   .       index.jsp</span><br><span class="line">    .   .       ...</span><br><span class="line">    .   &gt; 【test】              ----&gt; 即使未编写测试代码，也建议保留目录结构</span><br><span class="line">    .       &gt; java</span><br><span class="line">    .       &gt; resources</span><br><span class="line">    【build.gradle】            ----&gt; 新增的构建脚本</span><br><span class="line"></span><br><span class="line">&gt; WebProj2                      ----&gt; Web模块2</span><br><span class="line">    &gt; src                       </span><br><span class="line">    .   &gt; 【main】</span><br><span class="line">    .   .   &gt; 【java】          ----&gt; Java源代码2挪到此处</span><br><span class="line">    .   .   .   &gt; com</span><br><span class="line">    .   .   .       ...</span><br><span class="line">    .   .   &gt; 【resources】     ----&gt; 模块配置文件2（原config）挪到此处</span><br><span class="line">    .   .   .   SpringMVC-servlet.xml</span><br><span class="line">    .   .   .   ...</span><br><span class="line">    .   .   &gt; 【webapp】        ----&gt; Web文件目录（原WebContent）挪到此处</span><br><span class="line">    .   .       &gt; WEB-INF</span><br><span class="line">    .   .       .   &gt; lib       ----&gt; 所需jar包</span><br><span class="line">    .   .       .       ...</span><br><span class="line">    .   .       .   web.xml</span><br><span class="line">    .   .       index.jsp</span><br><span class="line">    .   .       ...</span><br><span class="line">    .   &gt; 【test】</span><br><span class="line">    .       &gt; java</span><br><span class="line">    .       &gt; resources</span><br><span class="line">    【build.gradle】            ----&gt; 新增的构建脚本</span><br><span class="line"></span><br><span class="line">&gt; CommonProj                    ----&gt; 公共代码，另外两个Project的依赖项</span><br><span class="line">    &gt; src                       </span><br><span class="line">    .   &gt; 【main】</span><br><span class="line">    .   .   &gt; 【java】          ----&gt; Java源代码挪到此处</span><br><span class="line">    .   .   .   &gt; com</span><br><span class="line">    .   .   .       ...</span><br><span class="line">    .   .   &gt; 【resources】     ----&gt; 全局配置文件挪到此处</span><br><span class="line">    .   .   .   log4j.xml</span><br><span class="line">    .   .   .   ...</span><br><span class="line">    .   &gt; test</span><br><span class="line">    .       &gt; java</span><br><span class="line">    .       &gt; resources</span><br><span class="line">    &gt; lib                      ----&gt; 为了消除编译错误，这里需要准备一份CommonProj必需的jar包</span><br><span class="line">    .   ...</span><br><span class="line">    【build.gradle】            ----&gt; 新增的构建脚本</span><br><span class="line"></span><br><span class="line">&gt; gradle                       ----&gt; Gradle Wrapper，后面会用命令来生成该目录及文件。</span><br><span class="line">    &gt; wrapper</span><br><span class="line">        gradle-wrapper.jar</span><br><span class="line">        gradle-wrapper.properties</span><br><span class="line">build.gradle                   ----&gt; 新增的构建脚本。此脚本范围为整个项目。</span><br><span class="line">settings.gradle</span><br><span class="line">gradle.properties</span><br></pre></td></tr></table></figure></p><h2 id="配置Gradle"><a href="#配置Gradle" class="headerlink" title="配置Gradle"></a>配置Gradle</h2><ol><li><span class="exturl" data-url="aHR0cHM6Ly93d3cueWlpYmFpLmNvbS9ncmFkbGUvaG93LWluc3RhbGwtZ3JhZGxlLXdpbmRvd3MuaHRtbA==" title="https://www.yiibai.com/gradle/how-install-gradle-windows.html">安装Gradle<i class="fa fa-external-link"></i></span></li><li>放置Gradle Wrapper：打开终端，进入项目所在的根目录，输入<code>gradle wrapper</code>。以后其他成员只要在终端中直接输入“./gradlew”就能自动下载相同版本的Gradle。</li></ol><p>考虑到国内网络情况，需要进行两种额外处理步骤（二选一）：</p><ol><li>将gradle-5.4-all.zip分发给团队其他成员，让大家都按照上面方法手工安装Gradle。</li><li>上传到国内或公司内的服务器，例如<code>http://10.11.22.33:8088/gradle-5.4-all.zip</code>，然后修改你项目中的 gradle/wrapper/gradle-wrapper.properties 文件，将 distributionUrl 修改成该地址。后续其他成员只要执行gradlew就会自动从这个URL下载Gradle。</li></ol><p>假如需要代理才能访问网络，可在自己电脑 ~/.gradle/gradle.properties（C:\Users\xxx\.gradle\gradle.properties）中配置网络代理。</p><p>若使用HTTP代理，地址为<code>http://127.0.0.1:1081</code>，可加入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemProp.http.proxyHost&#x3D;127.0.0.1</span><br><span class="line">systemProp.http.proxyPort&#x3D;1081</span><br><span class="line">systemProp.https.proxyHost&#x3D;127.0.0.1</span><br><span class="line">systemProp.https.proxyPort&#x3D;1081</span><br></pre></td></tr></table></figure></p><p>若使用SOCKS5代理，地址为<code>127.0.0.1:1080</code>，则是<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.gradle.jvmargs&#x3D;-DsocksProxyHost&#x3D;127.0.0.1 -DsocksProxyPort&#x3D;1080</span><br></pre></td></tr></table></figure></p><p>配置代理之后，个别情况下会出现<code>Error 403 Forbidden</code>报错，这种情况说明仓库屏蔽了你的代理，你只能换梯子或换国内源了。</p><h2 id="编写Gradle构建脚本"><a href="#编写Gradle构建脚本" class="headerlink" title="编写Gradle构建脚本"></a>编写Gradle构建脚本</h2><h3 id="build-gradle"><a href="#build-gradle" class="headerlink" title="/build.gradle"></a>/build.gradle</h3><p>build.gradle是构建脚本的核心。由于本文的案例是多模块项目，build.gradle也就分成了两层，外层是项目整体的，内层是各模块的。本小节是整体的配置。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    group = <span class="string">'com.yourcompany.xxx'</span></span><br><span class="line">    version = <span class="string">'1.0'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// subprojects是各模块的统一配置</span></span><br><span class="line">subprojects &#123;</span><br><span class="line">    apply <span class="string">plugin:</span> <span class="string">'java'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Java 版本</span></span><br><span class="line">    sourceCompatibility = <span class="number">1.8</span></span><br><span class="line">    targetCompatibility = <span class="number">1.8</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用Maven库管理部分依赖</span></span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenCentral()</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用阿里镜像</span></span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">'http://maven.aliyun.com/nexus/content/groups/public/'</span></span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">'http://maven.aliyun.com/nexus/content/repositories/jcenter'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认编译器是javac，如果构建所用JDK与生产环境JDK版本不一致，可能会产生兼容性问题。</span></span><br><span class="line">    <span class="comment">// 将javac换成Eclipse编译器可避免问题。</span></span><br><span class="line">    configurations &#123;</span><br><span class="line">        ecj</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dependencies &#123;</span><br><span class="line">        ecj <span class="string">'org.eclipse.jdt.core.compiler:ecj:4.6.1'</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    compileJava &#123;</span><br><span class="line">        options.fork = <span class="literal">true</span></span><br><span class="line">        options.forkOptions.with &#123;</span><br><span class="line">            executable = <span class="string">'java'</span></span><br><span class="line">            jvmArgs = [<span class="string">'-classpath'</span>, project.configurations.ecj.asPath, <span class="string">'org.eclipse.jdt.internal.compiler.batch.Main'</span>, <span class="string">'-nowarn'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构建系统</span></span><br><span class="line">task myproj() &#123;</span><br><span class="line">    dependsOn <span class="string">':WebProj1:build'</span>, <span class="string">':WebProj2:build'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果java代码采用GBK编码，那么需要下面的调整：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">subprojects &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    compileJava &#123;</span><br><span class="line">        <span class="comment">// 字符编码</span></span><br><span class="line">        options.encoding = <span class="string">'GBK'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="settings-gradle"><a href="#settings-gradle" class="headerlink" title="/settings.gradle"></a>/settings.gradle</h3><p>该文件用于表示项目有哪些子模块（subproject）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rootProject.name &#x3D; &#39;myproj&#39;</span><br><span class="line"></span><br><span class="line">include &#39;CommonProj&#39;</span><br><span class="line">include &#39;WebProj1&#39;</span><br><span class="line">include &#39;WebProj2&#39;</span><br></pre></td></tr></table></figure><h3 id="gradle-properties"><a href="#gradle-properties" class="headerlink" title="/gradle.properties"></a>/gradle.properties</h3><p>该文件用于配置Gradle本身的环境，例如JVM参数等：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 内存设置</span><br><span class="line">org.gradle.jvmargs&#x3D;-Xmx1280m</span><br><span class="line"># 允许并行</span><br><span class="line">org.gradle.parallel&#x3D;true</span><br></pre></td></tr></table></figure></p><p>如果项目文件使用的字符编码是GBK，可加入（其中Xmx与字符编码无关，需要根据自己电脑情况设置）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemProp.file.encoding&#x3D;GBK</span><br><span class="line">org.gradle.jvmargs&#x3D;-Xmx1280m -Dfile.encoding&#x3D;GBK</span><br></pre></td></tr></table></figure></p><h3 id="WebProj1-build-gradle"><a href="#WebProj1-build-gradle" class="headerlink" title="/WebProj1/build.gradle"></a>/WebProj1/build.gradle</h3><p>该文件负责WebProj1模块的构建。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">'war'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">// 依赖模块：CommonProj</span></span><br><span class="line">    implementation(project(<span class="string">':CommonProj'</span>)) &#123;</span><br><span class="line">        <span class="comment">// 不要引入CommonProj的jar包，否则打包时依赖jar包会被打两遍</span></span><br><span class="line">        <span class="comment">// 但这样做你需要保证WebProj1和WebProj2中有必需的jar包，否则运行应用时会报错</span></span><br><span class="line">        transitive = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 本地jar包</span></span><br><span class="line">    providedCompile fileTree(<span class="string">dir:</span> <span class="string">'src/main/webapp/WEB-INF/lib'</span>, <span class="string">include:</span> <span class="string">'*.jar'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Servlet API，部署到生产环境时实际由Tomcat等中间件提供</span></span><br><span class="line">    providedCompile <span class="string">'javax.servlet:servlet-api:2.5'</span></span><br><span class="line">    providedCompile <span class="string">'javax.servlet.jsp:jsp-api:2.1'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传统项目的jar包需要手动管理，在切换成Gradle之后，可转交Gradle管理，例如删除SpringMVC相关jar包删除，并修改build.gradle：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    implementation <span class="string">'org.springframework:spring-webmvc:4.1.6.RELEASE'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>WebProj2/build.gradle内容相同，不再赘述。</p><h3 id="CommonProj-build-gradle"><a href="#CommonProj-build-gradle" class="headerlink" title="/CommonProj/build.gradle"></a>/CommonProj/build.gradle</h3><p>内容比较简单。实际构建时会被打成jar包并放在其他模块的WEB-INF/lib中。<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation fileTree(<span class="string">dir:</span> <span class="string">'lib'</span>, <span class="string">include:</span> <span class="string">'*.jar'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Servlet API</span></span><br><span class="line">    implementation <span class="string">'javax.servlet:servlet-api:2.5'</span></span><br><span class="line">    implementation <span class="string">'javax.servlet.jsp:jsp-api:2.1'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="gitignore"><a href="#gitignore" class="headerlink" title="/.gitignore"></a>/.gitignore</h3><p>需要让版本控制软件忽略Gradle产生的中间文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.gradle</span><br><span class="line"></span><br><span class="line">&#x2F;WebProj1&#x2F;build&#x2F;</span><br><span class="line">&#x2F;WebProj2&#x2F;build&#x2F;</span><br><span class="line">&#x2F;CommonProj&#x2F;build&#x2F;</span><br><span class="line"></span><br><span class="line"># 不要忽略gradle-wrapper.jar</span><br><span class="line">!gradle-wrapper.jar</span><br></pre></td></tr></table></figure><p>虽然gitignore只适用于Git，不过其他版本控制软件要做的事情也是相似的。</p><h1 id="验证测试"><a href="#验证测试" class="headerlink" title="验证测试"></a>验证测试</h1><p>打开终端，进入到项目所在目录，输入<code>gradle myproj</code>或<code>./gradlew myproj</code>。</p><p>如果构建成功，Gradle会生成一个jar包和两个WAR包，分别位于<code>CommonProj/build/libs</code>、<code>WebProj1/build/libs</code>和<code>WebProj2/build/libs</code>。其中CommonProj是jar包，并且会被加到另外两个WAR包中（WEB-INF/lib）。</p><p>接下来你需要展开两个WAR包，并与传统方式编译生成出来的内容进行比较。重点检查WEB-INF、WEB-INF/lib和WEB-INF/classes，如果二者一致，就说明打包打出来的内容是对的，否则需要根据实际情况来挪动源代码的文件。</p><p>可以确定的是，打出来的包缺少CommonProj模块中的class及配置文件，因为它们都在WEB-INF/lib/CommonProj-1.0.jar中。另外WEB-INF/classes中会缺少config目录，然而事实上也不需要这个目录（将config中的内容摊到WEB-INF/classes下面才是正确的）。如果部署测试之后未发现问题，那么可以忽略这两点差异。</p><p>项目能够正确打包，并且部署到Tomcat等中间件之后应用也能正常使用，你就可以把改动提交到版本控制系统，让同事也开始使用Gradle。</p><h1 id="其他需求（待补完）"><a href="#其他需求（待补完）" class="headerlink" title="其他需求（待补完）"></a>其他需求（待补完）</h1><h2 id="不要改变项目目录结构"><a href="#不要改变项目目录结构" class="headerlink" title="不要改变项目目录结构"></a>不要改变项目目录结构</h2><p>考虑到实际生产过程中开发团队的学习成本与切换成本，可能无法要求团队全部切换到Gradle，也不能改变代码目录结构。这样的话Gradle配置文件需要进行以下额外的调整：</p><p>根目录的build.gradle：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">subprojects &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 手动指定路径</span></span><br><span class="line">    sourceSets &#123;</span><br><span class="line">        main &#123;</span><br><span class="line">            java &#123;</span><br><span class="line">                srcDirs = [<span class="string">'src'</span>]</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            resources &#123;</span><br><span class="line">                srcDirs = [<span class="string">'src/config'</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        test &#123;</span><br><span class="line">            java &#123;</span><br><span class="line">                srcDirs = [<span class="string">'test'</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>WebProj1/build.gradle 和 WebProj2/build.gradle 需在文件中加入：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 手动指定Web文件路径</span></span><br><span class="line">webAppDirName = <span class="string">'WebRoot'</span></span><br></pre></td></tr></table></figure></p><p>CommonProj/build.gradle不用调整，然而你仍然需要建立/CommonProj/lib目录，并把CommonProj所需的jar包放进去。</p><h2 id="不要将CommonProj打成jar包"><a href="#不要将CommonProj打成jar包" class="headerlink" title="不要将CommonProj打成jar包"></a>不要将CommonProj打成jar包</h2><p>从上面的项目结构中可以看出，CommonProj中有一些公共的配置文件，将其打成jar包之后可能无法正确加载。为避免这种情况发生，可在打WAR包时将CommonProj的内容展开。</p><p>在根目录的build.gradle中进行如下调整：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">subprojects &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    processCommonProj = &#123; excludes = <span class="literal">null</span> -&gt;</span><br><span class="line">        war.from(zipTree(<span class="string">"$&#123;project(':CommonProj').buildDir&#125;/libs/CommonProj.jar"</span>)) &#123;</span><br><span class="line">            into <span class="string">'WEB-INF/classes'</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// WEB-INF/classes/META-INF 是解压之后出现的多余的东西，需要删除</span></span><br><span class="line">            exclude <span class="string">'META-INF/**'</span></span><br><span class="line">            <span class="keyword">if</span> (excludes != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (String <span class="string">s:</span> excludes) &#123;</span><br><span class="line">                    exclude s</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        war.rootSpec.exclude <span class="string">'CommonProj.jar'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在CommonProj/build.gradle中追加：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将jar包名字固定下来，以便后面处理</span></span><br><span class="line">jar &#123;</span><br><span class="line">    archiveName = <span class="string">'CommonProj.jar'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在两个WebProj的build.gradle中追加：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">war &#123;</span><br><span class="line">    processCommonProj()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="运行（待补完）"><a href="#运行（待补完）" class="headerlink" title="运行（待补完）"></a>运行（待补完）</h2><h2 id="按不同环境打包不同的配置文件（待补完）"><a href="#按不同环境打包不同的配置文件（待补完）" class="headerlink" title="按不同环境打包不同的配置文件（待补完）"></a>按不同环境打包不同的配置文件（待补完）</h2><h1 id="关于IDEA"><a href="#关于IDEA" class="headerlink" title="关于IDEA"></a>关于IDEA</h1><p>使用IDEA打开配置好的项目之后，IDEA会发现这是一个Gradle项目，并提示是否“Import”。点击屏幕右下角的“Enable Import”，并等Sync操作完成后，便可以直接在IDEA中执行Gradle任务。</p><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ul><li><a href="/2018/12/12/switch-to-idea-0/">为什么进行切换</a></li><li><a href="/2018/12/13/switch-to-idea-1/">切换的基本操作</a></li><li><a href="/2019/01/27/switch-to-idea-2">传统Web项目在IDEA的Project Structure</a></li><li><strong>传统Web项目转为Gradle项目</strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;除了在IDEA手工配置项目，也可考虑将传统Web项目转为Gradle项目，以便简化项目依赖管理、实现标准化构建等，也便于后续结合Jenkins等进一步实现自动化。&lt;br&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Gradle" scheme="https://plusnan.me/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>那些容易遗忘的非功能性需求</title>
    <link href="https://plusnan.me/2019/07/25/non-functional-requirement/"/>
    <id>https://plusnan.me/2019/07/25/non-functional-requirement/</id>
    <published>2019-07-24T16:00:00.000Z</published>
    <updated>2020-01-29T05:20:23.988Z</updated>
    
    <content type="html"><![CDATA[<p>非功能性需求不会给项目带来收益，然而非功能性需求不仅要在需求阶段考虑好，而且在设计与开发过程中也要多加留意，否则都会成为项目的坑……</p><p>本文以一个政府的Web应用项目为例，讨论一些容易遗忘的非功能性需求。</p><a id="more"></a><h2 id="易用性"><a href="#易用性" class="headerlink" title="易用性"></a>易用性</h2><p>用户界面应当设计友好，操作简洁，而且讲好现代标准汉语。</p><p>近些年来，各级政府正在大力推行政务改革，实现“一网通办”，达到“一网受理、只跑一次、一次办成”的目标。我们对用户办件条件进行校验时也要尽量做到“只跑一次”：例如用户不满足3个办件条件，我们尽量一次性把这3个条件都提示给用户，而不是挤牙膏式一项一项提醒，让用户录入三四遍才能成功申报。</p><p>团队开发时，每个人负责的功能都应当保持“画风一致”。要是A业务界面风格与操作方式像《喜羊羊与灰太狼》，而B业务的界面风格与操作方式像《熊出没》，这样太“沙雕”了。</p><h2 id="可靠性"><a href="#可靠性" class="headerlink" title="可靠性"></a>可靠性</h2><p>输入数据要进行有效性检查，并给出准确友好的错误提示。虽然这样说，有些问题还是容易忽略掉，例如：</p><ul><li>过度检查：<ul><li>姓名：有些民族的人名中没有姓氏，系统不能强制要求这些人录入姓氏。</li><li>手机号：“虚拟运营商”开始运营之后，中国已有170开头的手机号。2017年底，中国电信又推出了199开头的手机号……</li></ul></li><li>最大长度不够长：<ul><li>姓名：阿不都热依木·伊盖木拜尔迪</li><li>地址：新疆维吾尔自治区伊犁哈萨克自治州塔城地区和布克赛尔蒙古自治县教育学院买依墩卡萨克能科特奈分校（虽然这只是个网上流传的段子）</li><li>考虑长度时，不光要考虑字数，还要考虑字节数。例如Oracle里面一个汉字占3字节，设计表结构时要留得足够长。</li></ul></li><li>串号：登录A用户，办完业务之后注销，再以B用户身份登录，结果用户因浏览器窗口没关干净就操作而串号。</li></ul><p>为避免让用户承担不必要的责任，系统应防止用户在关键节点上误操作，例如：</p><ul><li>点击申报、删除等按钮时，弹出确认提示框，避免意外提交、丢失数据。</li><li>点击查询、保存等按钮之后，立刻让按钮变灰，避免让用户再次点击，否则网速不好的时候用户容易多次操作，导致系统负载增加、产生重复数据等。</li></ul><p>需要考虑系统整体的可靠性，以及故障恢复的能力。以缴费为例，假如用户网络出现故障，或者服务器系统故障，而用户实际上未完成缴费，系统需要能够回滚支付状态，不能给工作单标记成“已缴费”，更不能让银行扣用户的钱。</p><h2 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h2><p>关于安全，国家有一个专门的安全等保制度要求（可搜索“等保2.0”了解详细情况）。本文只讨论一些容易遗忘的需求。</p><h3 id="抵御常见攻击"><a href="#抵御常见攻击" class="headerlink" title="抵御常见攻击"></a>抵御常见攻击</h3><p>系统需要能够抵挡常见的攻击，例如XSS、SQL注入、CSRF、暴力破解口令等。</p><h3 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h3><p>考虑功能需求时，很容易就想到要判断哪些角色能够办理哪些业务。然而以下情况就容易忽略了：</p><ul><li>如果用户没有业务办理权限，却知道相应系统功能的URL，那么系统需要防止用户直接在浏览器录入URL来进行操作。</li><li>系统需要防止对其他账号（不应该接触到的）信息进行查询和操作，增加业务数据与用户身份关系的校验。举个例子，开发期间大家都用广东的账号来操作，那么你需要确认广西的账号里不会出现这些不该碰到的信息。<ul><li>接上一条，在URL和&lt;form&gt;层面也要加以防范，否则用户只要修改网址上面的id与页面里的隐藏域就能操作别人的信息了。</li></ul></li></ul><h3 id="审计"><a href="#审计" class="headerlink" title="审计"></a>审计</h3><p>系统登录注销、业务办理等操作要有跟踪记录，例如什么人、什么时间、用什么IP（注意预留IPv6支持）做了什么操作，以便在出事之后追查责任人。与第三方公司对接时更要做好日志记录，否则出问题时大家就要互相踢皮球了。</p><p>系统需要能够防范一些恶意操作，如猜测密码、频繁查询、构造恶意查询条件（分页每页显示10000条记录）等。</p><p>除应用层面，在数据库层面也要考虑审计记录，例如建立触发器和跟踪表，记录数据变化情况。</p><h3 id="处理敏感信息"><a href="#处理敏感信息" class="headerlink" title="处理敏感信息"></a>处理敏感信息</h3><p>证件号码、手机号等敏感信息应考虑加密，例如“130****5678”，更要防止被人导出。</p><p>允许用户生产内容的地方（例如意见反馈）需考虑敏感词过滤和人工审核。假如用户利用你的系统发表了《<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU4JUE2JTgxJUU2JUIxJTgyJUU0JUI5JUEwJUU4JUJGJTkxJUU1JUI5JUIzJUU4JUJFJTlFJUU0JUJCJUJCJUU2JTgwJUJCJUU0JUI5JUE2JUU4JUFFJUIwJUU1JTg1JUFDJUU1JUJDJTgwJUU0JUJGJUExJUU0JUJBJThCJUU0JUJCJUI2" title="https://zh.wikipedia.org/wiki/%E8%A6%81%E6%B1%82%E4%B9%A0%E8%BF%91%E5%B9%B3%E8%BE%9E%E4%BB%BB%E6%80%BB%E4%B9%A6%E8%AE%B0%E5%85%AC%E5%BC%80%E4%BF%A1%E4%BA%8B%E4%BB%B6">关于要求xxx同志辞去党和国家领导职务的公开信<i class="fa fa-external-link"></i></span>》，而且还登上了你的系统首页，你就等着被有关部门处理吧。当然，政府项目还好，自己做产品的时候要更加注意。</p><p>除了输入输出，数据传输过程也要考虑安全，例如HTTP协议是明文传输，无论是GET还是POST请求，用户与服务器之间交互的数据都能被监听和篡改，而HTTPS协议解决了此问题。建议只要有条件就使用HTTPS。</p><h2 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h2><p>设计系统时，需考虑性能指标，例如响应时间、并发用户数、资源利用率等，另外也要考虑未来上线之后的业务规模与增长情况，性能和容量（包括网络带宽）都要足够才行。</p><p>计算性能需求时，需要留意的是“并发数”和“在线数”的区别。最大在线2000人并不等于最大并发2000，在功能上面的操作时间会“冲淡”并发数。一般场景主要是“最大在线数”，而抢票那种特殊场景要更加注重“最大并发数”。</p><p>设计系统架构时，需要考虑是否采用集群部署、负载均衡，考虑采用传统的单应用还是微服务架构，而且上线之前就要想好业务量增长以后该怎么办，不要等系统真的扛不住之后才想起来调整架构。（另外，如果使用负载均衡，还要考虑session会话共享的问题，否则会成为一个大坑）</p><h2 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h2><p>以浏览器为例。目前的开发框架基本上都能兼容主流浏览器，然而我们需要额外考虑</p><ul><li>老版本IE：有些政府部门的电脑仍然是XP系统、IE6/7/8，我们需要考虑是否兼容这些电脑。</li><li>新版本IE：同上。</li><li>移动设备：确认是否需要兼容移动设备，例如Android、iOS等。</li><li>“国产化”：国家已命令各政府部门和公共机构三年内实现国产化替代。对于开发人员来说，这项要求实质上就是“页面能够在龙芯处理器电脑、老版本Linux系统的个位数版本Firefox上正确展示和操作”（没错，我们说的就是中标麒麟。如果连中标麒麟都能正常使用，那么能冲进<span class="exturl" data-url="aHR0cHM6Ly9kaXN0cm93YXRjaC5jb20v" title="https://distrowatch.com/">DistroWatch<i class="fa fa-external-link"></i></span>前十名的深度操作系统就更没问题了）。</li></ul><p>兼容性问题必须一开始就考虑好。一旦开始开发，后面就很难再做调整了。</p><p>另一个例子是字符编码。字符编码一定要用UTF-8，不要用别的，否则一个名字带生僻字、拒绝去派出所改名而且还经常办业务的人可以让政府部门用户与系统开发人员集体崩溃。</p><h2 id="扩展性"><a href="#扩展性" class="headerlink" title="扩展性"></a>扩展性</h2><p>系统的硬件资源、软件资源、软件功能等应便于进行扩展调整。</p><p>需求不是一成不变的，甲方日后可能会提出需求变更，甚至自己打自己脸，推翻以前提出的需求。设计和开发时要提前考虑提高代码可复用性，降低需求变更成本：能参数化的地方增加参数化配置，能形成组件的东西做成组件，能避免copy-paste的地方就避免copy-paste（封装成公共类或公共函数），这样后面真发生需求变更时你能相对舒服一些。</p><p>开发业务系统时，还需考虑到“一网通办”的时代背景，留意未来有可能会与其他政府部门的系统进行对接。想象一下，假如你的业务逻辑代码是通过copy-paste写到不同平台的，而且Controller也夹杂着业务逻辑，没有使用服务，也没有形成公共方法或组件，那么一旦甲方提出需求变更，你就需要挨个检查PC端、移动端、自助服务终端、上海市政府一网通办接口、国家政务服务平台接口的代码然后再考虑如何修改……</p><h2 id="容易忽略的真·功能性需求"><a href="#容易忽略的真·功能性需求" class="headerlink" title="容易忽略的真·功能性需求"></a>容易忽略的真·功能性需求</h2><p>有一些功能需求，即使用户没提，我们也有必要加以考虑。</p><h3 id="查询统计"><a href="#查询统计" class="headerlink" title="查询统计"></a>查询统计</h3><p>领导们都喜欢“讲大局”，这样就会产生定期或不定期的统计需求，例如用户注册量、平均访问量、高峰时期访问量、业务办理量、退单率等。实现业务功能时要记得顺便做好信息记录与数据采集，不要等到领导提统计需求时才发现系统连原始数据记录都没有。</p><h3 id="待办查询和提醒"><a href="#待办查询和提醒" class="headerlink" title="待办查询和提醒"></a>待办查询和提醒</h3><p>很多用户工作繁忙，无法兼顾系统所有业务，而且也有个别用户神经大条，经常健忘。建议为这类用户开发一个“待办事项查询”功能，一个页面展示所有未完成的工作，并且对未及时处理的业务作出提醒，以免遗忘。</p><h3 id="系统公告"><a href="#系统公告" class="headerlink" title="系统公告"></a>系统公告</h3><p>遇到紧急情况，可通过系统功能向用户发出公告，否则找页面文件、增加alert代码、申请修改生产系统等一系列步骤容易耽误事。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;非功能性需求不会给项目带来收益，然而非功能性需求不仅要在需求阶段考虑好，而且在设计与开发过程中也要多加留意，否则都会成为项目的坑……&lt;/p&gt;
&lt;p&gt;本文以一个政府的Web应用项目为例，讨论一些容易遗忘的非功能性需求。&lt;/p&gt;
    
    </summary>
    
    
      <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="需求分析" scheme="https://plusnan.me/tags/%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>使用Puppeteer制作微信消息通知机器人</title>
    <link href="https://plusnan.me/2019/06/03/wechat-bot/"/>
    <id>https://plusnan.me/2019/06/03/wechat-bot/</id>
    <published>2019-06-02T16:00:00.000Z</published>
    <updated>2020-01-14T18:15:06.675Z</updated>
    
    <content type="html"><![CDATA[<p>微信机器人是一个比较难搞的东西，因为微信登录比较麻烦，而且官方不仅不提供API，还积极封杀机器人和“非法登录”的途径，导致研发风险较大。目前比较成熟的两种方式是模拟微信网页版以及程序控制微信PC版应用。</p><p>本文采用Puppeteer框架，借助真实的浏览器访问微信网页版，模拟浏览器的正常操作，以降低被封杀的风险。<br><a id="more"></a></p><h2 id="大致思路"><a href="#大致思路" class="headerlink" title="大致思路"></a>大致思路</h2><ul><li>使用Express框架提供对外接口，让其他程序能够调用。</li><li>使用Puppeteer来访问微信网页版。由于微信网页版需要扫码登录，需要设计接口来暴露二维码（这里直接提供网页截图）。另外二维码会过期，因此需要刷新机制（本文程序的话，重启就行，不需要再另行实现）。</li><li>通过操作DOM来判断页面的状态。</li><li>通过模拟按键来寻找好友或群组、输入消息和发送消息。</li><li>通过捕获浏览器AJAX请求来获取新消息内容（本文未实现）。</li><li>实现敏感词和敏感言论过滤机制，以防无意或有意的攻击。</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>详细参见<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2luZm5hbi9TaW1wbGVOb3RpZnlCb3Q=" title="https://github.com/infnan/SimpleNotifyBot">https://github.com/infnan/SimpleNotifyBot<i class="fa fa-external-link"></i></span>。</p><p>开启浏览器：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开启无头浏览器</span></span><br><span class="line"><span class="keyword">const</span> browser = <span class="keyword">await</span> puppeteer.launch(&#123;</span><br><span class="line">    headless: <span class="literal">true</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> page = (<span class="keyword">await</span> browser.pages())[<span class="number">0</span>];                 <span class="comment">// 取浏览器第一个Tab页</span></span><br><span class="line"><span class="keyword">await</span> page.setViewport(&#123; <span class="attr">width</span>: <span class="number">1366</span>, <span class="attr">height</span>: <span class="number">768</span> &#125;);    <span class="comment">// 浏览器窗口大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用简体中文界面</span></span><br><span class="line"><span class="keyword">await</span> page.goto(<span class="string">'https://wx.qq.com/?lang=zh_CN'</span>);</span><br></pre></td></tr></table></figure></p><p>发送消息的过程：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sendMessage = <span class="keyword">async</span> (target, message) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 判断是否登录</span></span><br><span class="line">    <span class="keyword">const</span> unloginTest = <span class="keyword">await</span> page.$(<span class="string">'body.unlogin'</span>);</span><br><span class="line">    <span class="keyword">if</span> (unloginTest) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> MessageError(<span class="string">'Not login'</span>, <span class="string">'NOLOGIN'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!target) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> MessageError(<span class="string">'Target not found'</span>, <span class="string">'NOTARGET'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果当前聊天就是目标，那么不用搜了，直接蹦到聊天框</span></span><br><span class="line">    <span class="keyword">const</span> testEle1 = <span class="keyword">await</span> page.$(<span class="string">'#chatArea a.title_name'</span>);</span><br><span class="line">    <span class="keyword">const</span> test1 = <span class="keyword">await</span> (<span class="keyword">await</span> testEle1.getProperty(<span class="string">'textContent'</span>)).jsonValue();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (test1 !== target) &#123;</span><br><span class="line">        <span class="keyword">const</span> searchEle = <span class="keyword">await</span> page.$(<span class="string">'#search_bar &gt; input'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清空搜索框和搜索结果</span></span><br><span class="line">        <span class="keyword">await</span> page.$<span class="built_in">eval</span>(<span class="string">'#search_bar input'</span>, node =&gt; node.value = <span class="string">''</span>);</span><br><span class="line">        <span class="keyword">await</span> searchEle.focus();</span><br><span class="line">        <span class="keyword">await</span> searchEle.type(<span class="string">' '</span>);</span><br><span class="line">        <span class="keyword">await</span> searchEle.press(<span class="string">'Backspace'</span>);</span><br><span class="line">        <span class="comment">// 延时，使页面上原有的搜索结果消失</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> timeout = <span class="number">40</span>; timeout &gt;= <span class="number">0</span>; timeout--) &#123;</span><br><span class="line">            <span class="keyword">const</span> testEle2 = <span class="keyword">await</span> page.$(<span class="string">'#search_bar div.mmpop'</span>);</span><br><span class="line">            <span class="keyword">if</span> (!testEle2) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">await</span> sleep(<span class="number">50</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输入目标群组名称</span></span><br><span class="line">        <span class="keyword">await</span> searchEle.type(target);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 等待出现搜索结果，最长等待5秒</span></span><br><span class="line">        <span class="keyword">let</span> ok = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> timeout = <span class="number">100</span>; timeout &gt;= <span class="number">0</span>; timeout--) &#123;</span><br><span class="line">            <span class="keyword">const</span> testEle3 = <span class="keyword">await</span> page.$(<span class="string">'#search_bar div.mmpop h4.contact_title'</span>);</span><br><span class="line">            <span class="keyword">if</span> (testEle3) &#123;</span><br><span class="line">                <span class="keyword">const</span> test3 = <span class="keyword">await</span> (<span class="keyword">await</span> testEle3.getProperty(<span class="string">'textContent'</span>)).jsonValue();</span><br><span class="line">                <span class="keyword">if</span> (test3 === <span class="string">'找不到匹配的结果'</span>) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> MessageError(<span class="string">'Target not found'</span>, <span class="string">'NOTARGET'</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    ok = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">await</span> sleep(<span class="number">50</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!ok) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> MessageError(<span class="string">'WeChat not responding'</span>, <span class="string">'NORESPONSE'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历搜索结果</span></span><br><span class="line">        <span class="comment">// 由于overflow数字不大，且翻页需要消耗操作和等待网络请求的时间，建议目标名称独一无二，免得不好找。</span></span><br><span class="line">        <span class="keyword">const</span> pop = <span class="keyword">await</span> page.$(<span class="string">'#search_bar div.mmpop'</span>);</span><br><span class="line">        <span class="keyword">let</span> lastname = <span class="string">''</span>;</span><br><span class="line">        ok = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> overflow = <span class="number">100</span>; overflow &gt;= <span class="number">0</span>; overflow--) &#123;</span><br><span class="line">            <span class="keyword">const</span> nowEle = <span class="keyword">await</span> pop.$(<span class="string">'div.contact_item.on'</span>);</span><br><span class="line">            <span class="comment">// 说明正在loading</span></span><br><span class="line">            <span class="keyword">if</span> (!nowEle) &#123;</span><br><span class="line">                <span class="keyword">await</span> sleep(<span class="number">50</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">let</span> currname = <span class="keyword">await</span> (<span class="keyword">await</span> (<span class="keyword">await</span> nowEle.$(<span class="string">'h4'</span>)).getProperty(<span class="string">'textContent'</span>)).jsonValue();</span><br><span class="line">            <span class="keyword">if</span> (lastname === currname) &#123;</span><br><span class="line">                <span class="comment">// 未找到目标，结束</span></span><br><span class="line">                ok = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            lastname = currname;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果没找到而且能往下翻那么就继续往下翻</span></span><br><span class="line">            <span class="comment">// 找到的话按一下回车键，进入聊天界面</span></span><br><span class="line">            <span class="keyword">if</span> (currname === target) &#123;</span><br><span class="line">                ok = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">await</span> searchEle.press(<span class="string">'Enter'</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">await</span> searchEle.press(<span class="string">'ArrowDown'</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 等待微信响应</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> timeout = <span class="number">10</span>; timeout &gt;= <span class="number">0</span>; timeout--) &#123;</span><br><span class="line">                    <span class="keyword">const</span> nowEle2 = <span class="keyword">await</span> pop.$(<span class="string">'div.contact_item.on'</span>);</span><br><span class="line">                    <span class="keyword">if</span> (nowEle2) &#123;</span><br><span class="line">                        <span class="keyword">let</span> currname2 = <span class="keyword">await</span> (<span class="keyword">await</span> (<span class="keyword">await</span> nowEle2.$(<span class="string">'h4'</span>)).getProperty(<span class="string">'textContent'</span>)).jsonValue();</span><br><span class="line">                        <span class="keyword">if</span> (currname !== currname2) &#123;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">await</span> sleep(<span class="number">20</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="comment">// 暂时到底了，需要loading</span></span><br><span class="line">                        <span class="keyword">await</span> sleep(<span class="number">200</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!ok) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> MessageError(<span class="string">'Target not found'</span>, <span class="string">'NOTARGET'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 等待进入聊天界面</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> timeout = <span class="number">50</span>; timeout &gt;= <span class="number">0</span>; timeout--) &#123;</span><br><span class="line">            <span class="keyword">const</span> titleEle = <span class="keyword">await</span> page.$(<span class="string">'#chatArea a.title_name'</span>);</span><br><span class="line">            <span class="keyword">const</span> title = <span class="keyword">await</span> (<span class="keyword">await</span> titleEle.getProperty(<span class="string">'textContent'</span>)).jsonValue();</span><br><span class="line">            <span class="keyword">if</span> (title === target) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">await</span> sleep(<span class="number">20</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> testEle4 = <span class="keyword">await</span> page.$(<span class="string">'#chatArea a.title_name'</span>);</span><br><span class="line">    <span class="keyword">const</span> test4 = <span class="keyword">await</span> (<span class="keyword">await</span> testEle4.getProperty(<span class="string">'textContent'</span>)).jsonValue();</span><br><span class="line">    <span class="keyword">if</span> (test4 === target) &#123;</span><br><span class="line">        <span class="comment">// 输入消息</span></span><br><span class="line">        <span class="keyword">await</span> page.$<span class="built_in">eval</span>(<span class="string">'#editArea'</span>, node =&gt; node.textContent = <span class="string">''</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> editEle = <span class="keyword">await</span> page.$(<span class="string">'#editArea'</span>);</span><br><span class="line">        <span class="keyword">await</span> editEle.focus();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> [i, line] <span class="keyword">of</span> message.split(<span class="string">'\n'</span>).entries()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 发送多行消息时需要用 Ctrl+Enter 换行</span></span><br><span class="line">                <span class="keyword">await</span> page.keyboard.down(<span class="string">'Control'</span>);</span><br><span class="line">                <span class="keyword">await</span> page.keyboard.press(<span class="string">'Enter'</span>);</span><br><span class="line">                <span class="keyword">await</span> page.keyboard.up(<span class="string">'Control'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">await</span> editEle.type(line);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 按下发送按钮</span></span><br><span class="line">        <span class="keyword">await</span> page.keyboard.press(<span class="string">'Enter'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> MessageError(<span class="string">'Target not confirmed'</span>, <span class="string">'NORESPONSE'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="保号注意事项"><a href="#保号注意事项" class="headerlink" title="保号注意事项"></a>保号注意事项</h2><p>为确保安全，使用机器人时需要多加注意，以免封号甚至招致牢狱之灾。以下皆为网友经验，仅供参考。</p><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><ul><li>使用真实手机注册，避免用模拟器或双开软件。<ul><li>使用模拟器的话需要先用xprivacy控制好微信的权限，否则会无法登录或被微信封禁。</li><li>使用双开之前先调查靠不靠谱，例如有些双开会被微信识别，导致账号被封，而小米手机的双开就比较安全。</li></ul></li><li>使用真实手机号注册，并进行实名认证，然后绑定一张银行卡，再往微信钱包里头存一块钱。</li><li>手机和手机号尽量专用，一个设备或手机号不要拿着注册很多微信号，也不要拿着频繁登录注销。</li><li>新注册的账号要在真实的手机上挂15至30天，然后再进行其他操作，以免让系统“大数据”识别。</li><li>不要忘记设置昵称、地区和头像。</li><li>至少保持三个真实好友。</li><li>一天之内不要加太多好友。</li><li>好友不要超过5000。</li></ul><h3 id="发送消息"><a href="#发送消息" class="headerlink" title="发送消息"></a>发送消息</h3><ul><li>注意消息发送频率不要太高。几秒钟就发一大堆消息（例如像<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL2F2Mzk0MjgxLw==" title="https://www.bilibili.com/video/av394281/">脸滚键盘<i class="fa fa-external-link"></i></span>那样），这样很容易被封号。</li><li>不定期往“filehelper”或专用群发送keepalive消息，以防掉线。</li><li>注意设计监控和报警机制，掉线之后能及时去恢复连接。</li><li>要特别注意控制消息发送内容！尤其是接受用户输入的程序，一定要做好言论控制，以免他人无意或有意触发政治敏感话题，导致你的账号被封，甚至让你被警方请去喝茶。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;微信机器人是一个比较难搞的东西，因为微信登录比较麻烦，而且官方不仅不提供API，还积极封杀机器人和“非法登录”的途径，导致研发风险较大。目前比较成熟的两种方式是模拟微信网页版以及程序控制微信PC版应用。&lt;/p&gt;
&lt;p&gt;本文采用Puppeteer框架，借助真实的浏览器访问微信网页版，模拟浏览器的正常操作，以降低被封杀的风险。&lt;br&gt;
    
    </summary>
    
    
      <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
      <category term="Puppeteer" scheme="https://plusnan.me/tags/Puppeteer/"/>
    
      <category term="微信" scheme="https://plusnan.me/tags/%E5%BE%AE%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>资料/知识分享软件或网站推荐</title>
    <link href="https://plusnan.me/2019/06/02/document-management/"/>
    <id>https://plusnan.me/2019/06/02/document-management/</id>
    <published>2019-06-01T16:00:00.000Z</published>
    <updated>2019-06-03T16:13:10.315Z</updated>
    
    <content type="html"><![CDATA[<p>我们曾经使用源代码版本控制软件来组织文档，然而版本控制软件的长项是管理代码，而非管理文档。用作档案库还算凑合，但是管理和检索知识并不方便，因此考虑了一些文档软件。大家可根据实际需求选用不同的系统。<br><a id="more"></a></p><p>本文有很多系统需要自行搭建。从信息安全的角度讲，建议内部文档不要使用现成的服务，而是自行准备服务器，并做好安全防范措施。从操作的角度上将，建议使用Docker部署，操作便捷。</p><h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><p>博客的特点是“流水账”，文章主题不固定，彼此之间关系也不紧密，访问也没有限制（当然你仍然可以在服务器上面进行限制），适合公开分享个人/项目经历以及经验教训之类的内容。</p><h3 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h3><ul><li>格式：富文本</li><li>官网：<span class="exturl" data-url="aHR0cHM6Ly93b3JkcHJlc3Mub3Jn" title="https://wordpress.org">https://wordpress.org<i class="fa fa-external-link"></i></span>和<span class="exturl" data-url="aHR0cHM6Ly93b3JkcHJlc3MuY29t" title="https://wordpress.com">https://wordpress.com<i class="fa fa-external-link"></i></span>（前者是软件，后者是把软件搭好的现成服务）</li><li>部署：需自行搭建</li><li>最流行的博客系统，不需要再详细叙述。文档可以直接在系统里面维护和发布，操作非常便捷。</li></ul><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><ul><li>格式：Markdown</li><li>官网：<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv" title="https://hexo.io">https://hexo.io<i class="fa fa-external-link"></i></span></li><li>部署：需自行搭建Web Server，或者放到GitHub Pages/GitLab Pages等里面。每次更改文档需要重新生成代码和部署。</li><li>本博客就是用Hexo搭建的。但是，为了使博客运行，需要至少准备一个Web Server。想要玩得转的话，需要把源代码放在Git上面，还要需要配置CI，使用时还要先Git Pull再Git Push，对于大家来说实在太麻烦，不推荐。</li></ul><h2 id="维基和书籍类"><a href="#维基和书籍类" class="headerlink" title="维基和书籍类"></a>维基和书籍类</h2><p>这两类适合存放成体系的内容，检索起来也比较方便，可以用来建设知识库、资料库等。</p><h3 id="MediaWiki"><a href="#MediaWiki" class="headerlink" title="MediaWiki"></a>MediaWiki</h3><ul><li>格式：富文本（需使用MediaWiki语法）</li><li>官网：<span class="exturl" data-url="aHR0cHM6Ly9tZWRpYXdpa2kub3Jn" title="https://mediawiki.org">https://mediawiki.org<i class="fa fa-external-link"></i></span></li><li>部署：需自行搭建</li><li>该软件最初就用于维基百科，适合构建百科类网站，组织知识零碎、有一定范围但各内容彼此之间关系不密切的内容。</li><li>软件有三个值得注意的缺点：<ul><li>学习成本比较高，需要熟悉维基语法和系统；</li><li>从零开始构建比较麻烦，需要设计一些模板，即使从维基百科导入工作也不轻松；</li><li>使用时需要明确内容编写与分类规范，否则很容易就写乱套了。</li></ul></li></ul><h3 id="BookStack"><a href="#BookStack" class="headerlink" title="BookStack"></a>BookStack</h3><ul><li>格式：富文本或Markdown，取决于网站设置</li><li>官网：<span class="exturl" data-url="aHR0cHM6Ly9ib29rc3RhY2thcHAuY29t" title="https://bookstackapp.com">https://bookstackapp.com<i class="fa fa-external-link"></i></span></li><li>部署：需自行搭建</li><li>该软件适合存放成体系、内容彼此之间关联密切的内容，例如书籍、手册等。我们目前正在使用此软件管理资料库。</li></ul><h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><p>Evernote、OneNote、Notable等软件的重点是个人笔记，本文不再介绍。</p><h3 id="Etherpad"><a href="#Etherpad" class="headerlink" title="Etherpad"></a>Etherpad</h3><ul><li>类型：纯文本或富文本（取决于网站设置）</li><li>官网：<span class="exturl" data-url="aHR0cHM6Ly9ldGhlcnBhZC5vcmc=" title="https://etherpad.org">https://etherpad.org<i class="fa fa-external-link"></i></span></li><li>部署：需自行搭建。个人建议直接放自己电脑上跑，需要的时候才启动。</li><li>该软件适合多人同时编辑同一个文件，而且彼此之间可以看到谁在修改哪些内容，建议协作时使用。</li></ul><h2 id="粘贴箱类"><a href="#粘贴箱类" class="headerlink" title="粘贴箱类"></a>粘贴箱类</h2><p>粘贴箱类适合临时分享一些小东西。</p><h3 id="Ubuntu-Pastebin"><a href="#Ubuntu-Pastebin" class="headerlink" title="Ubuntu Pastebin"></a>Ubuntu Pastebin</h3><ul><li>类型：仅纯文本（代码）</li><li>网站：<span class="exturl" data-url="aHR0cHM6Ly9wYXN0ZS51YnVudHUuY29t" title="https://paste.ubuntu.com">https://paste.ubuntu.com<i class="fa fa-external-link"></i></span></li><li>该网站适合临时分享一些文字或代码。想象一下用聊天软件给对方发东西时，是发一大坨代码（有时候系统可能还给自动转成表情符号）好看呢，还是发个小链接（网站顺便会给格式化一下）好看呢？</li></ul><h3 id="GitHub-Gist"><a href="#GitHub-Gist" class="headerlink" title="GitHub Gist"></a>GitHub Gist</h3><ul><li>类型：一个或多个代码文件</li><li>网站：<span class="exturl" data-url="aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20=" title="https://gist.github.com">https://gist.github.com<i class="fa fa-external-link"></i></span></li><li>该网站适合分享一些零碎的代码片段，或者一些小到不值得开repo的程序。不过该网站已经被墙，所以分享时需要保证他人也能访问该网站。</li></ul><h3 id="img-vim-cn-com"><a href="#img-vim-cn-com" class="headerlink" title="img.vim-cn.com"></a>img.vim-cn.com</h3><ul><li>类型：图片</li><li>网站：<span class="exturl" data-url="aHR0cHM6Ly9pbWcudmltLWNuLmNvbS8=" title="https://img.vim-cn.com/">https://img.vim-cn.com/<i class="fa fa-external-link"></i></span></li><li>该网站可用于临时分享图片。如果处于不能或者不便发图的场合，可以先把图片传到这里，再去发图片的链接。</li></ul><h3 id="Firefox-Send"><a href="#Firefox-Send" class="headerlink" title="Firefox Send"></a>Firefox Send</h3><ul><li>类型：文件</li><li>网站：<span class="exturl" data-url="aHR0cHM6Ly9zZW5kLmZpcmVmb3guY29tLw==" title="https://send.firefox.com/">https://send.firefox.com/<i class="fa fa-external-link"></i></span></li><li>该网站可用于临时分享文件。同样是发送成功之后取一个下载链接。</li></ul><h2 id="其他软件附带的功能"><a href="#其他软件附带的功能" class="headerlink" title="其他软件附带的功能"></a>其他软件附带的功能</h2><h3 id="GitHub-GitLab"><a href="#GitHub-GitLab" class="headerlink" title="GitHub/GitLab"></a>GitHub/GitLab</h3><ul><li>GitHub Pages可以通过Git仓库运行静态网站，这样的话，你可以利用Hexo等软件维护一个博客，然后部署到GitHub上，从而运行文档库。另外请注意GitHub Pages的内容是公开的。</li><li>每个Git项目都有Wiki功能，使用Markdown语法，但只适合存放规模不大、层次简单的文档。</li></ul><p>GitLab也有类似的功能。</p><h3 id="Phabricator"><a href="#Phabricator" class="headerlink" title="Phabricator"></a>Phabricator</h3><p>Phabricator是一个项目管理平台，包含了很多模块，而且各模块之间可以无缝衔接。然而，我们认为这些都是Phabricator顺带的东西，不值得专门为了管理文档而新搭Phabricator。</p><p>以下是Phabricator中与文档相关的几个模块：</p><ul><li>Phame：博客</li><li>Phriction：Wiki，适合分享规模不大、内容有组织的文档</li><li>Paste：代码粘贴箱</li><li>File：文件分享（备注：一般附件也会自动保存在该应用中）</li></ul><p>这些功能全部使用Phabricator自己的语法，另外可以直接和P站其他资源链接，例如在Blog中直接输入T145就能自动链接到该任务。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们曾经使用源代码版本控制软件来组织文档，然而版本控制软件的长项是管理代码，而非管理文档。用作档案库还算凑合，但是管理和检索知识并不方便，因此考虑了一些文档软件。大家可根据实际需求选用不同的系统。&lt;br&gt;
    
    </summary>
    
    
      <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
      <category term="文档管理" scheme="https://plusnan.me/tags/%E6%96%87%E6%A1%A3%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>日区、美区和港区Apple ID</title>
    <link href="https://plusnan.me/2019/06/01/apple-id/"/>
    <id>https://plusnan.me/2019/06/01/apple-id/</id>
    <published>2019-05-31T16:00:00.000Z</published>
    <updated>2020-03-01T14:43:54.339Z</updated>
    
    <content type="html"><![CDATA[<p>为了能在iOS设备上连接互联网，为了能在iOS设备上玩原生游戏而非国内黑心代理版本，为了能在iOS设备上安装已下架应用，我们需要把Apple ID的地区修改成中国以外的地方。<br><a id="more"></a></p><p><strong>本文写于2019年6月，内容不保证长期有效。当你阅读本文的时候，操作方法可能已经失效了。</strong></p><h2 id="为什么要换区"><a href="#为什么要换区" class="headerlink" title="为什么要换区"></a>为什么要换区</h2><ol><li>国区没有翻墙软件，即使有，也只是“有关部门”暂未发现的“漏网之鱼”，说不定哪天就下架了。</li><li>除了翻墙软件，其他软件与游戏也有莫名奇妙下架的风险。即使“自查”、“整改”，也不能保证有重新上线的机会。</li><li>有些软件和游戏会锁区，或者因为审核等原因，内容与服务远逊于其他地区。</li><li>国区买不到购买特定区域的音乐、电影、电子书等内容。</li><li>云上贵州服务不值得信任（进一步讲，凡是中国的网络服务都不值得信任）。</li><li>……</li></ol><h2 id="重要前提"><a href="#重要前提" class="headerlink" title="重要前提"></a>重要前提</h2><p>如果没有前往境外的机会，那么你需要：</p><ol><li>翻墙<ul><li>翻墙之后，需要使用IP查询网站查询自己所在地址。美区要用美国IP，日区要用日本IP，港区要用香港IP，台区要用台湾IP，以此类推。</li></ul></li><li>信用卡（非必需）<ul><li>如果准备转美区，可以办一张Visa/Mastercard信用卡（注意，国内的卡无法直接绑定Apple ID，后面会讲解如何“迂回”绑定）或America Express卡（笔者未测试过）；</li><li>如果准备转日区，可以办一张JCB信用卡；</li><li>如果准备转港区/台区，则不需要准备信用卡。只要不是香港本地信用卡，没用。</li></ul></li></ol><h3 id="问题一：如果无法办理信用卡"><a href="#问题一：如果无法办理信用卡" class="headerlink" title="问题一：如果无法办理信用卡"></a>问题一：如果无法办理信用卡</h3><p>如果能够确保全程处于美国/日本/香港/台湾等地IP而且运气好，在选择支付方式时会看到“无”的选项，而这个简单的“无”就是一个巨大的胜利。不过还是建议提前多做点准备，没什么坏处。</p><h3 id="问题二：如果iOS设备上装不了翻墙软件，怎么办"><a href="#问题二：如果iOS设备上装不了翻墙软件，怎么办" class="headerlink" title="问题二：如果iOS设备上装不了翻墙软件，怎么办"></a>问题二：如果iOS设备上装不了翻墙软件，怎么办</h3><ul><li>方法一：去网上搜索能用的公共Apple ID，虽然账号不会长久，至少能拿来安一下翻墙软件。</li><li>方法二：如果有电脑，电脑上安装了可用的翻墙软件，并提供了类似“HTTP代理”形式的代理，可将电脑的代理分享给手机使用。<ul><li>将iOS设备与电脑连接到同一路由器上。</li><li>调整电脑的翻墙软件的设置，找到类似“局域网分享”的选项。</li><li>进入iOS设备的无线局域网设置，在Wi-Fi的详细设置中可以看到“代理”的参数。将IP和端口设置成电脑的IP和端口，例如IP通常会类似192.168.1.100，而端口经常是1080之类的数字。</li></ul></li><li>方法三：在电脑上进行换区的工作，换好了之后再用手机登录。</li></ul><h3 id="其他选项"><a href="#其他选项" class="headerlink" title="其他选项"></a>其他选项</h3><p>可以尝试在网上搜一下公用的Apple ID，然而用的人太多的话肯定会被封杀。所以能不能用完全凭运气。</p><h2 id="换区操作"><a href="#换区操作" class="headerlink" title="换区操作"></a>换区操作</h2><p>操作步骤比较简单：</p><ul><li>挂好梯子，保证<strong>全程代理操作</strong>。</li><li>登录或注册新Apple ID<ul><li>如果访问appleid.apple.com出现“502 Bad Gateway”，那么需要更换浏览器，或者使用iOS设备操作。</li></ul></li><li>编辑个人资料</li><li>将地区更换成需要的地区，美国，日本或者香港等。</li><li><strong>接下来才是关键步骤：支付方式</strong>。只有提前做好准备，才能通过“考验”，成功换区。</li></ul><p>下面讨论美日港三区的支付方式的问题。</p><h3 id="日区"><a href="#日区" class="headerlink" title="日区"></a>日区</h3><p>如果没有信用卡，那么需要保证全程日本IP操作，这样切换支付方式时才有可能看到“无”的选项。</p><p>目前（2019年6月）日区注册比较简单，系统未对JCB信用卡的发卡国家进行校验，因此准备好日本IP的全局代理，然后输入招商银行等银行发行的JCB信用卡即可搞定。</p><h3 id="美区"><a href="#美区" class="headerlink" title="美区"></a>美区</h3><p>如果没有信用卡，那么需要保证全程美国IP，这样切换支付方式时才有可能看到“无”的选项。</p><p>如果看不到“无”，那么要做好充分准备：系统会检查Visa/Mastercard的发卡行，并且会拒绝中国的信用卡，因此只能通过美区PayPal迂回绑定。然而，<strong>PayPal操作容不得一丁点差错</strong>！任何一点小失误都会导致PayPal账号、手机号和信用卡永久“报废”。</p><h4 id="美区PayPal准备工作"><a href="#美区PayPal准备工作" class="headerlink" title="美区PayPal准备工作"></a>美区PayPal准备工作</h4><p>请确认以下东西全部准备好之后再开始注册。</p><ul><li>准备好<strong>美国IP全局代理</strong>。如果你无法确定自己是不是全局代理，那么有两种办法：<ul><li>用百度搜索“ip”，若出现你的代理地址，说明可能是全局代理了，因为翻墙软件或配置通常不会让百度也跟着翻墙。</li><li>不放心的话，买台美国服务器，装个桌面环境和浏览器，然后在上面进行操作。</li></ul></li><li>准备好Visa/Mastercard信用卡。虽然可以用中国发的卡，但请使用真实卡片，避免用他人银行卡。</li><li>准备一个<strong>可以长期持有</strong>的美国手机号。可以是实体号码，也可以是虚拟号码（例如Google Voice），但是你需要留意手机号的有效期，<strong>绝对不能让手机号被回收</strong>，否则以后无法再登进PayPal。<ul><li>美国的免税州：阿拉斯加州（Alaska）、特拉华州（Delaware）、蒙大拿州（Montana）、新罕布什尔州（New Hampshire）、俄勒冈州（Oregon）。在这些州消费可以免消费税，注册账号时可以考虑用这些州的手机号和地址。</li></ul></li></ul><h4 id="美区PayPal注册步骤"><a href="#美区PayPal注册步骤" class="headerlink" title="美区PayPal注册步骤"></a>美区PayPal注册步骤</h4><ol><li>去<span class="exturl" data-url="aHR0cHM6Ly93d3cucGF5cGFsLmNvbS91cy8=" title="https://www.paypal.com/us/">PayPal官网<i class="fa fa-external-link"></i></span>进行注册。注意：必须使用<strong>美国IP</strong>访问PayPal，保证网站处于<strong>美国地区</strong>。国区以及其他国家账号都无法用来绑定美区Apple ID。</li><li>注册时候要填写和信用卡一致的姓名。住址无所谓，去Google地图上随便找一个就行，建议填免税州。</li><li>注册完成之后需要验证身份：用事先准备的美国手机号收验证码即可。</li><li>然后需要绑定信用卡：注意信用卡姓名和账号姓名一致，否则PayPal会要求你上传各类证明文件（你没有美国的证明文件，对吧），对你的账号进行人工审核。</li><li>PayPal验证成功之后，<strong>等24小时之后</strong>再去关联Apple ID。新账号无法立刻绑定。</li><li>手机号要保持可用。如果换号，记得把PayPal上面的绑定的手机号也换掉。</li><li>无论什么时候登录PayPal，都必须保证使用美国IP。若不小心用中国IP登美区账号，账号可能会锁定，而且你会因为没有美国身份证件而无法申诉。</li></ol><p>另外还要注意一件事情：<strong>在账号完全验证成功之前，即身份验证和银行卡验证都成功之前，账号会处于受限状态</strong>。此时你无法修改账号信息，无法解绑填错的卡，也无法删除账号，还不能走人工申诉通道解锁（除非你有美国的身份证明文件），所以务必慎重操作。</p><h3 id="港区"><a href="#港区" class="headerlink" title="港区"></a>港区</h3><p>港区也对信用卡发卡地区进行了校验，不能使用内地银行卡，不支持PayPal，甚至不支持港区PayPal。另外在内地也很难办理香港的信用卡。</p><p>两种解决思路：</p><ul><li>全程香港代理，并指望支付方式中出现“无”。</li><li>使用虚拟信用卡碰运气，例如<span class="exturl" data-url="aHR0cHM6Ly93d3cudGFwbmdvLmNvbS5oay9jaGkvYXBwbHkuaHRtbA==" title="https://www.tapngo.com.hk/chi/apply.html">拍住赏<i class="fa fa-external-link"></i></span>。</li></ul><p>台湾类似。</p><h2 id="其他注意事项"><a href="#其他注意事项" class="headerlink" title="其他注意事项"></a>其他注意事项</h2><ul><li>苹果未限制一个人持有多个Apple ID，也没限制一个人持有多个区的Apple ID，而且允许设备Apple ID与商店Apple ID不一致。<ul><li>可以在每个有能力注册的区里面注册一个账号（中国大陆、香港/台湾、日本、美国），分别使用合适的账号登录设备和商店，例如“学习强国”只有国区App Store才能下载得到，切换成美区之后反倒没有了。</li><li>尽管如此，不要频繁登录注销，否则会被苹果视为异常登录而封号。对于你账号所属地区来说，中国才是“外国”。</li><li>不要随便把账号借给别人，原因同上。授人以鱼不如授人以渔。</li></ul></li><li>使用当地IP切换地区，支付方式不一定能看到“无”，但是不使用当地IP，你一定看不到“无”。手机和电脑操作效果相同。</li><li>如果未绑定支付方式，但还需要消费，可以去<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBwbGUuY29tL3Nob3AvZ2lmdC1jYXJkcy9pdHVuZXMtZWxlY3Ryb25pYw==" title="https://www.apple.com/shop/gift-cards/itunes-electronic">苹果官网<i class="fa fa-external-link"></i></span>购买充值的Gift Card。充值时需选择“by Email”，用邮箱接收充值码。美区充一次最低$10，等至少4小时之后才能到账。</li><li>注册新Apple ID时需要验证手机，但系统未限制地区，可使用+86的中国手机号。</li><li>注册新Apple ID时需要填写地址，去Google地图上随便找个地方就行（例如<code>東京都世田谷区北沢3丁目23−14</code>，邮编<code>155-0031</code>）。</li></ul><h2 id="其他资料"><a href="#其他资料" class="headerlink" title="其他资料"></a>其他资料</h2><ul><li><span class="exturl" data-url="aHR0cHM6Ly9hcHBsZWNlbnNvcnNoaXAuY29tLw==" title="https://applecensorship.com/">Apple Censorship<i class="fa fa-external-link"></i></span>：列举各地区App Store里面少了哪些应用。需要说明的是，有些应用并不是下架“消失”，而是锁区或其他原因根本没上过线。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了能在iOS设备上连接互联网，为了能在iOS设备上玩原生游戏而非国内黑心代理版本，为了能在iOS设备上安装已下架应用，我们需要把Apple ID的地区修改成中国以外的地方。&lt;br&gt;
    
    </summary>
    
    
      <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>利用Oracle数据库进行文件传输</title>
    <link href="https://plusnan.me/2019/05/27/dbftp/"/>
    <id>https://plusnan.me/2019/05/27/dbftp/</id>
    <published>2019-05-26T16:00:00.000Z</published>
    <updated>2020-01-15T00:49:56.960Z</updated>
    
    <content type="html"><![CDATA[<p>为甲方升级系统时，堡垒机应用服务器正常，唯独FTP出现故障，无法上传程序包（堡垒机软件不支持直接向Linux服务器传文件）。在为无法完成部署任务发愁时，我们发现借助专用VPN可以直连甲方的Oracle数据库，并以DBA身份登录，于是我们临时编写了一款“基于Oracle的文件传输工具”。<br><a id="more"></a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>由于VPN网络不太稳定，我们在上传和下载时实现了文件分块，这样一旦发生网络问题我们可以“断点续传”。至于服务器那边，网络肯定是稳定的，否则应用系统早就让用户喷下线了。</p><h3 id="Up-java"><a href="#Up-java" class="headerlink" title="Up.java"></a>Up.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Up</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DB_CONNSTR = <span class="string">"jdbc:oracle:thin:@数据库IP地址:1521:数据库实例名"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DB_USERNAME = <span class="string">"用户名"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DB_PASSWORD = <span class="string">"密码"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String INSERT_SQL = <span class="string">"INSERT INTO TMP_FTP (ID,NAME,GROUPID,SEQ,CONTENT) VALUES (SEQ_TMP_FTP.NEXTVAL, ?, ?, ?, ?)"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">"oracle.jdbc.OracleDriver"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            System.err.println(<span class="string">"错误：未找到ojdbc.jar！"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String fileName = args[<span class="number">0</span>];</span><br><span class="line">        String gid = fileName;</span><br><span class="line">        <span class="comment">//String gid = args[1];</span></span><br><span class="line">        <span class="keyword">int</span> part = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (args.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">            part = Integer.parseInt(args[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 文件分割</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            File blob = <span class="keyword">new</span> File(fileName);</span><br><span class="line">            FileInputStream in = <span class="keyword">new</span> FileInputStream(blob);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1048576</span>];</span><br><span class="line">            <span class="keyword">int</span> seq = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">long</span> upload = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">long</span> length = blob.length();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> ((len = in.read(buffer)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                seq++;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (part != -<span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (seq != part) &#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                System.out.print(<span class="string">"\rUploading "</span> + fileName + <span class="string">"#"</span> + seq + <span class="string">" ("</span> + upload + <span class="string">"/"</span> + length + <span class="string">")..."</span>);</span><br><span class="line"></span><br><span class="line">                Connection conn = <span class="keyword">null</span>;</span><br><span class="line">                PreparedStatement stmt = <span class="keyword">null</span>;</span><br><span class="line">                ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">                ByteArrayOutputStream bos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">                bos.write(buffer, <span class="number">0</span>, len);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    conn = DriverManager.getConnection(DB_CONNSTR, DB_USERNAME, DB_PASSWORD);</span><br><span class="line">                    conn.setAutoCommit(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">                    stmt = conn.prepareStatement(INSERT_SQL);</span><br><span class="line">                    stmt.setString(<span class="number">1</span>, fileName);</span><br><span class="line">                    stmt.setString(<span class="number">2</span>, gid);</span><br><span class="line">                    stmt.setLong(<span class="number">3</span>, seq);</span><br><span class="line">                    stmt.setBytes(<span class="number">4</span>, bos.toByteArray());</span><br><span class="line"></span><br><span class="line">                    stmt.execute();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            rs.close();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (stmt != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            stmt.close();</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">                            conn.close();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                bos.close();</span><br><span class="line"></span><br><span class="line">                System.out.print(<span class="string">"\r"</span> + fileName + <span class="string">"#"</span> + seq + <span class="string">" Done.                                 "</span>);</span><br><span class="line">                System.out.println();</span><br><span class="line"></span><br><span class="line">                upload += len;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            in.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Down-java"><a href="#Down-java" class="headerlink" title="Down.java"></a>Down.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.Blob;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Down</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DB_CONNSTR = <span class="string">"jdbc:oracle:thin:@数据库IP地址:1521:数据库实例名"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DB_USERNAME = <span class="string">"用户名"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DB_PASSWORD = <span class="string">"密码"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUERY_SQL = <span class="string">"SELECT ID,NAME,LENGTH(CONTENT) AS LEN,CONTENT FROM TMP_FTP WHERE GROUPID=? ORDER BY SEQ"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String QUERY_CNT_SQL = <span class="string">"SELECT COUNT(1) FROM TMP_FTP WHERE GROUPID=?"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">"oracle.jdbc.OracleDriver"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            System.err.println(<span class="string">"错误：未找到ojdbc.jar！"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String gid = args[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">        Connection conn = <span class="keyword">null</span>;</span><br><span class="line">        PreparedStatement stmt = <span class="keyword">null</span>;</span><br><span class="line">        ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            conn = DriverManager.getConnection(DB_CONNSTR, DB_USERNAME, DB_PASSWORD);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">long</span> cnt = <span class="number">0</span>;</span><br><span class="line">            stmt = conn.prepareStatement(QUERY_CNT_SQL);</span><br><span class="line">            stmt.setString(<span class="number">1</span>, gid);</span><br><span class="line">            rs = stmt.executeQuery();</span><br><span class="line">            <span class="keyword">if</span> (rs.next()) &#123;</span><br><span class="line">                cnt = rs.getLong(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            rs.close();</span><br><span class="line">            stmt.close();</span><br><span class="line"></span><br><span class="line">            stmt = conn.prepareStatement(QUERY_SQL);</span><br><span class="line">            stmt.setString(<span class="number">1</span>, gid);</span><br><span class="line">            rs = stmt.executeQuery();</span><br><span class="line"></span><br><span class="line">            String fileName = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">boolean</span> append = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">long</span> part = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (fileName.length() == <span class="number">0</span>) &#123;</span><br><span class="line">                    String sfileName = rs.getString(<span class="string">"NAME"</span>);</span><br><span class="line">                    <span class="keyword">if</span> (sfileName != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        fileName = sfileName;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">if</span> (!append) &#123;</span><br><span class="line">                            <span class="keyword">new</span> File(fileName).delete();</span><br><span class="line">                            append = <span class="keyword">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">long</span> id = rs.getLong(<span class="string">"ID"</span>);</span><br><span class="line">                <span class="keyword">long</span> length = rs.getLong(<span class="string">"LEN"</span>);</span><br><span class="line">                <span class="keyword">long</span> download = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                Blob blob = rs.getBlob(<span class="string">"CONTENT"</span>);</span><br><span class="line">                InputStream in = blob.getBinaryStream();</span><br><span class="line">                OutputStream out = <span class="keyword">new</span> FileOutputStream(fileName, <span class="keyword">true</span>);</span><br><span class="line">                <span class="keyword">byte</span>[] buff = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4096</span>];</span><br><span class="line">                <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                part++;</span><br><span class="line">                <span class="keyword">while</span> ((len = in.read(buff)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                    System.out.print(<span class="string">"\rDownloading "</span> + fileName + <span class="string">"#"</span> + id + <span class="string">" ("</span> + download + <span class="string">"/"</span> + length + <span class="string">", Part "</span> + part + <span class="string">"/"</span> + cnt + <span class="string">")..."</span>);</span><br><span class="line"></span><br><span class="line">                    out.write(buff, <span class="number">0</span>, len);</span><br><span class="line"></span><br><span class="line">                    download += len;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.print(<span class="string">"\r"</span> + fileName + <span class="string">"#"</span> + id + <span class="string">" Done.                                 "</span>);</span><br><span class="line">                System.out.println();</span><br><span class="line">                out.close();</span><br><span class="line">                in.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    rs.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (stmt != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    stmt.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    conn.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="部署方式"><a href="#部署方式" class="headerlink" title="部署方式"></a>部署方式</h2><ol><li>连接VPN，登录数据库，初始化表结构：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> TMP_FTP (</span><br><span class="line">    <span class="keyword">ID</span> <span class="built_in">NUMBER</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="keyword">NAME</span> <span class="built_in">VARCHAR2</span>(<span class="number">50</span>),</span><br><span class="line">    GROUPID <span class="built_in">VARCHAR2</span>(<span class="number">20</span>),</span><br><span class="line">    SEQ <span class="built_in">NUMBER</span>,</span><br><span class="line">    <span class="keyword">CONTENT</span> <span class="built_in">BLOB</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">SEQUENCE</span> SEQ_TMP_FTP <span class="keyword">START</span> <span class="keyword">WITH</span> <span class="number">1000000</span>;</span><br></pre></td></tr></table></figure></li><li>修改Up.java和Down.java的数据源配置。</li><li>上传文件（下面假设自己电脑也是Linux/Mac，并且假设ojdbc6.jar放在了家目录）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javac Up.java</span><br><span class="line">CLASSPATH&#x3D;.:~&#x2F;ojdbc6.jar java Up 文件名</span><br></pre></td></tr></table></figure></li><li>如果出现网络错误，记录屏幕上提示的数字，用<code>CLASSPATH=.:~/ojdbc6.jar java Up 文件名 数字</code>的方式“断点续传”。</li><li>登录堡垒机，进入应用服务器，将Down.java内容粘贴到服务器中，并且（假设ojdbc6.jar放在了/opt中）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javac Down.java</span><br><span class="line">CLASSPATH&#x3D;.:&#x2F;opt&#x2F;ojdbc6.jar java Down 文件名</span><br></pre></td></tr></table></figure></li><li>确认文件下载好了，而且内容没有错误，继续升级操作。</li><li>操作完成后进行清理：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> TMP_FTP;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">SEQUENCE</span> SEQ_TMP_FTP;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为甲方升级系统时，堡垒机应用服务器正常，唯独FTP出现故障，无法上传程序包（堡垒机软件不支持直接向Linux服务器传文件）。在为无法完成部署任务发愁时，我们发现借助专用VPN可以直连甲方的Oracle数据库，并以DBA身份登录，于是我们临时编写了一款“基于Oracle的文件传输工具”。&lt;br&gt;
    
    </summary>
    
    
      <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
      <category term="Oracle" scheme="https://plusnan.me/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>用Puppeteer扒漫画</title>
    <link href="https://plusnan.me/2019/04/06/manga-downloader/"/>
    <id>https://plusnan.me/2019/04/06/manga-downloader/</id>
    <published>2019-04-05T16:00:00.000Z</published>
    <updated>2020-01-14T16:47:11.565Z</updated>
    
    <content type="html"><![CDATA[<p><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0dvb2dsZUNocm9tZS9wdXBwZXRlZXI=" title="https://github.com/GoogleChrome/puppeteer">Puppeteer<i class="fa fa-external-link"></i></span>是Google搞的爬虫框架，其特点就是我们可以直接通过程序来操作Google浏览器（服务器没装图形界面也没关系，这个Google浏览器不需要图形界面）。通过这个框架，我们就可以像正常使用浏览器一样爬网站，并且像进控制台那样操作页面获取信息，甚至还可以截图。只要网站不使用验证码或reCAPTCHA之类的大杀器，而且运营者不希望正常使用浏览器的用户也无法访问页面，那么我们就可以随便扒网站了。例如本文从<a href="tw.manhuagui.com">https://tw.manhuagui.com</a>网站扒漫画。<br><a id="more"></a></p><p>下面直接贴代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * https://tw.manhuagui.com 扒漫画工具</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author <span class="variable">infnan</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version </span>1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="keyword">const</span> puppeteer = <span class="built_in">require</span>(<span class="string">'puppeteer'</span>);</span><br><span class="line"><span class="keyword">const</span> request = <span class="built_in">require</span>(<span class="string">'request'</span>);</span><br><span class="line"><span class="keyword">const</span> winston = <span class="built_in">require</span>(<span class="string">'winston'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用await延时</span></span><br><span class="line"><span class="keyword">const</span> sleep = <span class="function">(<span class="params">timeout</span>) =&gt;</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123; setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> resolve(), timeout); &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Logger</span></span><br><span class="line"><span class="keyword">const</span> logger = winston.createLogger(&#123;</span><br><span class="line">    level: <span class="string">'info'</span>,</span><br><span class="line">    format: winston.format.combine(</span><br><span class="line">        winston.format(<span class="function"><span class="params">info</span> =&gt;</span> &#123;</span><br><span class="line">            info.level = info.level.toUpperCase();</span><br><span class="line">            <span class="keyword">return</span> info;</span><br><span class="line">        &#125;)(),</span><br><span class="line">        winston.format.colorize(),</span><br><span class="line">        winston.format.timestamp(&#123;</span><br><span class="line">            format: <span class="string">'YYYY-MM-DD HH:mm:ss'</span></span><br><span class="line">        &#125;),</span><br><span class="line">        winston.format.printf(<span class="function"><span class="params">info</span> =&gt;</span> <span class="string">`[<span class="subst">$&#123;info.timestamp&#125;</span>] &lt;<span class="subst">$&#123;info.level&#125;</span>&gt; <span class="subst">$&#123;info.message&#125;</span>`</span>)</span><br><span class="line">    ),</span><br><span class="line">    transports: [<span class="keyword">new</span> winston.transports.Console()]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 显示用法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> showUsage = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'tw.manhuagui.com 漫画下载器 v1.0'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'目前支持单话或整本。下载整部作品时建议在VPS上跑。'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'node manhuagui.js [--rate 频率] [--dest 存储位置] [--override] [--help] &lt;url&gt;'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'  url:            例如 https://tw.manhuagui.com/comic/22843/314335.html（某一话）或 https://tw.manhuagui.com/comic/22843/（整部作品）'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'  --rate 0.5:     每秒下载多少页，默认值0.5。建议两秒一张，超过这个速度很容易被网站封IP。'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'  --dest 存储位置: 把漫画存到哪个地方。'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'  --override:     即使下过也要重新下载（仅限下整部作品的时候判断）'</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 建立目录。已存在的时候忽略报错。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>path </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> mkdir = <span class="function">(<span class="params">path</span>) =&gt;</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    fs.mkdir(path, (err) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (err &amp;&amp; err.code !== <span class="string">'EEXIST'</span>) &#123;     <span class="comment">// 目录已存在不要当成错误</span></span><br><span class="line">            reject(err);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            resolve();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 下载单个文件</span></span><br><span class="line"><span class="comment"> * 说明： 正常情况下这样就能下载下来，但是漫画网站服务器有个配置不对，</span></span><br><span class="line"><span class="comment"> * 而且Chromium有个bug（ https: //github.com/GoogleChrome/puppeteer/issues/795），</span></span><br><span class="line"><span class="comment"> * 下载下来的东西里头带有锟斤拷，所以后面不使用这个方法下载。</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Browser&#125;</span> </span>browser </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>url </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>filename </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> downloadFile = <span class="keyword">async</span> (browser, url, filename) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 打开新标签页</span></span><br><span class="line">    <span class="keyword">const</span> page = <span class="keyword">await</span> browser.newPage();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 开始下载</span></span><br><span class="line">    <span class="keyword">const</span> img = <span class="keyword">await</span> page.goto(url);</span><br><span class="line">    fs.writeFileSync(filename, <span class="keyword">await</span> img.buffer());</span><br><span class="line">    <span class="keyword">await</span> page.close();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 单话</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Page&#125;</span> </span>page </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>options </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> processSingleManga = <span class="keyword">async</span> (page, url, options) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 跳转到页面</span></span><br><span class="line">    <span class="keyword">await</span> page.goto(url);</span><br><span class="line">    <span class="comment">// 刷新一次，免得进去之后漫画出不来</span></span><br><span class="line">    <span class="keyword">await</span> page.reload();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 借助页面本身的jQuery取漫画名称和第几话</span></span><br><span class="line">    <span class="keyword">const</span> title = <span class="keyword">await</span> page.evaluate(<span class="string">`$('div.w980.title h1 a').text()`</span>);</span><br><span class="line">    <span class="keyword">const</span> subtitle = <span class="keyword">await</span> page.evaluate(<span class="string">`$('div.w980.title h2').text()`</span>);</span><br><span class="line">    <span class="keyword">if</span> (!title) &#123;</span><br><span class="line">        logger.error(<span class="string">'未知内容，PASS！'</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取漫画页数</span></span><br><span class="line">    <span class="keyword">const</span> count = <span class="keyword">await</span> page.evaluate(<span class="string">`$('#pageSelect option').length`</span>);</span><br><span class="line">    <span class="keyword">if</span> (!count) &#123;</span><br><span class="line">        logger.error(<span class="string">'未获取到漫画页数，PASS！'</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        logger.info(<span class="string">`加载完成，页数：<span class="subst">$&#123;count&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在本机建立目录</span></span><br><span class="line">    <span class="keyword">const</span> dirName = <span class="string">`<span class="subst">$&#123;title.trim()&#125;</span> <span class="subst">$&#123;subtitle.trim()&#125;</span>`</span>;</span><br><span class="line">    <span class="keyword">const</span> destPath = path.join(options.dest, dirName);</span><br><span class="line">    <span class="keyword">await</span> mkdir(destPath);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用jQuery控制点击“第1页”</span></span><br><span class="line">    <span class="keyword">await</span> page.evaluate(<span class="string">`$('#pageSelect').val('1').change();`</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 下载漫画</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;= count; i++) &#123;</span><br><span class="line">        <span class="comment">// 获取图片URL</span></span><br><span class="line">        <span class="keyword">const</span> imgSrc = (<span class="keyword">await</span> page.evaluate(<span class="string">`$('#mangaFile').prop('src')`</span>)).replace(<span class="string">'.webp'</span>, <span class="string">''</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 下载文件</span></span><br><span class="line">        <span class="keyword">const</span> basePath = path.join(destPath, <span class="string">`<span class="subst">$&#123;i&#125;</span>`</span>);</span><br><span class="line">        logger.info(<span class="string">`<span class="subst">$&#123;i&#125;</span>/<span class="subst">$&#123;count&#125;</span>: url = <span class="subst">$&#123;imgSrc&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 因为这家网站服务器有个设置不对，而且Chromium有个bug，直接爬buffer会整出锟斤拷，所以没法像下面这样下载</span></span><br><span class="line">        <span class="comment">// await downloadFile(browser, imgSrc, `$&#123;basePath&#125;.jpg`);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 虽然上面方法不能用，但是此网站服务器只校验Referer，不校验Cookie，所以直接请求更简单</span></span><br><span class="line">        request(&#123;</span><br><span class="line">            uri: imgSrc,</span><br><span class="line">            headers: &#123;</span><br><span class="line">                <span class="string">'User-Agent'</span>: options.userAgent,</span><br><span class="line">                <span class="string">'Referer'</span>: page.url(),</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;).pipe(fs.createWriteStream(<span class="string">`<span class="subst">$&#123;basePath&#125;</span>.jpg`</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 模拟按向右箭头按钮，进入下一页</span></span><br><span class="line">        <span class="keyword">await</span> page.keyboard.press(<span class="string">'ArrowRight'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 延迟，以免因为速度太快被封IP</span></span><br><span class="line">        <span class="keyword">await</span> sleep(options.delay);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 下载整部作品</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Page&#125;</span> </span>page </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>options </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> processWholeManga = <span class="keyword">async</span> (page, url, options) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 跳转到页面</span></span><br><span class="line">    <span class="keyword">await</span> page.goto(url);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 借助页面本身的jQuery取漫画名称和第几话</span></span><br><span class="line">    <span class="keyword">const</span> title = <span class="keyword">await</span> page.evaluate(<span class="string">`$('div.book-cont div.book-title').text()`</span>);</span><br><span class="line">    <span class="keyword">if</span> (!title) &#123;</span><br><span class="line">        logger.error(<span class="string">'未知内容，PASS！'</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    logger.info(<span class="string">`开始下载《<span class="subst">$&#123;title&#125;</span>》...`</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 爬页面上的链接，准备一个一个地点击</span></span><br><span class="line">    <span class="keyword">const</span> mangalist = [];</span><br><span class="line">    <span class="keyword">const</span> linklist = <span class="keyword">await</span> page.$$(<span class="string">'div.chapter div.chapter-list li a'</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> link <span class="keyword">of</span> linklist) &#123;</span><br><span class="line">        <span class="keyword">let</span> countEle = <span class="keyword">await</span> link.$(<span class="string">'i'</span>);</span><br><span class="line">        <span class="keyword">let</span> countStr = <span class="keyword">await</span> (<span class="keyword">await</span> countEle.getProperty(<span class="string">'textContent'</span>)).jsonValue();</span><br><span class="line">        mangalist.push(&#123;</span><br><span class="line">            title: <span class="keyword">await</span> (<span class="keyword">await</span> link.getProperty(<span class="string">'title'</span>)).jsonValue(),</span><br><span class="line">            url: <span class="keyword">await</span> (<span class="keyword">await</span> link.getProperty(<span class="string">'href'</span>)).jsonValue(),</span><br><span class="line">            count: <span class="built_in">parseInt</span>(countStr)</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    logger.info(<span class="string">`已发现<span class="subst">$&#123;mangalist.length&#125;</span>话`</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> manga <span class="keyword">of</span> mangalist) &#123;</span><br><span class="line">        <span class="keyword">let</span> dirName = <span class="string">`<span class="subst">$&#123;title&#125;</span> <span class="subst">$&#123;manga.title&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是不是已经下载过了，以节省时间</span></span><br><span class="line">        <span class="keyword">if</span> (!options.override) &#123;</span><br><span class="line">            <span class="keyword">let</span> ok = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; manga.count; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!fs.existsSync(path.join(options.dest, dirName, <span class="string">`<span class="subst">$&#123;i&#125;</span>.jpg`</span>))) &#123;</span><br><span class="line">                    ok = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (ok) &#123;</span><br><span class="line">                logger.info(<span class="string">`<span class="subst">$&#123;manga.title&#125;</span> 已下载过，PASS`</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        logger.info(<span class="string">`开始下载 <span class="subst">$&#123;manga.title&#125;</span>`</span>);</span><br><span class="line">        <span class="keyword">await</span> processSingleManga(page, manga.url, options);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 开始下载</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Array&#125;</span> </span>urllist </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>options </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> doWork = <span class="keyword">async</span> (urllist, options) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 开启无头浏览器</span></span><br><span class="line">    <span class="keyword">const</span> browser = <span class="keyword">await</span> puppeteer.launch(&#123;</span><br><span class="line">        headless: <span class="literal">true</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    options.userAgent = <span class="keyword">await</span> browser.userAgent();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> url <span class="keyword">of</span> urllist) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            logger.info(<span class="string">`【漫画URL】<span class="subst">$&#123;url&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">const</span> page = (<span class="keyword">await</span> browser.pages())[<span class="number">0</span>];                            <span class="comment">// 取浏览器第一个Tab页</span></span><br><span class="line">            <span class="keyword">await</span> page.setViewport(&#123; <span class="attr">width</span>: <span class="number">1366</span>, <span class="attr">height</span>: <span class="number">768</span> &#125;);    <span class="comment">// 浏览器窗口大小</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断是单话还是整个作品</span></span><br><span class="line">            <span class="keyword">if</span> (url.match(<span class="regexp">/\/comic\/\d+\/\d+/</span>)) &#123;</span><br><span class="line">                <span class="keyword">await</span> processSingleManga(page, url, options);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                logger.info(<span class="string">'检测到要下载整部作品'</span>);</span><br><span class="line">                <span class="keyword">await</span> processWholeManga(page, url, options);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            logger.error(<span class="string">`下载过程中出现错误: `</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭浏览器</span></span><br><span class="line">    <span class="keyword">await</span> browser.close();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 命令行参数</span></span><br><span class="line"><span class="keyword">const</span> argv = <span class="built_in">require</span>(<span class="string">'minimist'</span>)(process.argv.slice(<span class="number">2</span>));</span><br><span class="line"><span class="keyword">if</span> (!argv._ || argv._.length === <span class="number">0</span> || argv.help || argv.version) &#123;</span><br><span class="line">    showUsage();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 开工</span></span><br><span class="line">    doWork(argv._, &#123;</span><br><span class="line">        delay: <span class="number">1000</span> / (argv.rate || <span class="number">0.5</span>),</span><br><span class="line">        dest: argv.dest || <span class="string">'.'</span>,</span><br><span class="line">        override: argv.override,</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>package.json：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"manhuagui"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"manhuagui.js"</span>,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"minimist"</span>: <span class="string">"^1.2.0"</span>,</span><br><span class="line">    <span class="attr">"puppeteer"</span>: <span class="string">"^1.14.0"</span>,</span><br><span class="line">    <span class="attr">"request"</span>: <span class="string">"^2.88.0"</span>,</span><br><span class="line">    <span class="attr">"winston"</span>: <span class="string">"^3.2.1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"start"</span>: <span class="string">"node manhuagui.js"</span>,</span><br><span class="line">    <span class="attr">"install-start"</span>: <span class="string">"npm install &amp;&amp; npm start"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">"infnan"</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"AGPL-3.0-or-later"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9naXRodWIuY29tL0dvb2dsZUNocm9tZS9wdXBwZXRlZXI=&quot; title=&quot;https://github.com/GoogleChrome/puppeteer&quot;&gt;Puppeteer&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;是Google搞的爬虫框架，其特点就是我们可以直接通过程序来操作Google浏览器（服务器没装图形界面也没关系，这个Google浏览器不需要图形界面）。通过这个框架，我们就可以像正常使用浏览器一样爬网站，并且像进控制台那样操作页面获取信息，甚至还可以截图。只要网站不使用验证码或reCAPTCHA之类的大杀器，而且运营者不希望正常使用浏览器的用户也无法访问页面，那么我们就可以随便扒网站了。例如本文从&lt;a href=&quot;tw.manhuagui.com&quot;&gt;https://tw.manhuagui.com&lt;/a&gt;网站扒漫画。&lt;br&gt;
    
    </summary>
    
    
      <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
      <category term="爬虫" scheme="https://plusnan.me/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Puppeteer" scheme="https://plusnan.me/tags/Puppeteer/"/>
    
  </entry>
  
  <entry>
    <title>并不简单的基础开发工作（二）：信息展示列表</title>
    <link href="https://plusnan.me/2019/02/09/list-page/"/>
    <id>https://plusnan.me/2019/02/09/list-page/</id>
    <published>2019-02-08T16:00:00.000Z</published>
    <updated>2020-01-25T15:06:17.111Z</updated>
    
    <content type="html"><![CDATA[<p>本文以被各大学校学生做滥了的“学生信息管理系统”为例，讲述信息展示列表开发中的一些问题。<br><a id="more"></a></p><h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>本文只讨论一个页面：学生信息管理系统中的学生列表页面，大体上样式如下（PC浏览器）</p><div class="tabs" id="学生信息管理"><ul class="nav-tabs"><li class="tab active"><a href="#学生信息管理-1">学生信息管理</a></li></ul><div class="tab-content"><div class="tab-pane active" id="学生信息管理-1"><p>身份证号码：<input type="text"> 姓名：<input type="text"> 学号：<input type="text"> <a class="btn" href="#"><i class="fa fa-search fa-fw"></i>查找</a><a class="btn" href="#"><i class="fa fa-history fa-fw"></i>重置</a></p><p><a class="btn" href="#"><i class="fa fa-plus fa-fw"></i>添加学生</a></p><div class="table-container"><table><thead><tr><th>序号</th><th>身份证号码</th><th>姓名</th><th>性别</th><th>民族</th><th>户籍省份</th><th>市</th><th>区县</th><th>出生日期</th><th>学院</th><th>班级</th><th>学号</th><th>联系电话</th><th>未来意向</th><th>状态</th><th>操作</th></tr></thead><tbody><tr><td>1</td><td>1234…78</td><td>一花</td><td>女</td><td>汉族</td><td>北京市</td><td>西城区</td><td></td><td>19XX年X月X日</td><td>计算机与软件工程学院</td><td>软件1901</td><td>201901010101</td><td>13012345678</td><td>升学</td><td>有效</td><td><a class="btn" href="#"><i class="fa fa-check-square-o fa-fw"></i>查看</a> <a class="btn" href="#"><i class="fa fa-edit fa-fw"></i>编辑</a> <a class="btn" href="#"><i class="fa fa-close fa-fw"></i>删除</a></td></tr><tr><td>2</td><td>1234…79</td><td>二乃</td><td>女</td><td>汉族</td><td>上海市</td><td>黄浦区</td><td></td><td>19XX年X月X日</td><td>计算机与软件工程学院</td><td>软件1901</td><td>201901010102</td><td>13012345679</td><td>就业</td><td>有效</td><td><a class="btn" href="#"><i class="fa fa-check-square-o fa-fw"></i>查看</a> <a class="btn" href="#"><i class="fa fa-edit fa-fw"></i>编辑</a> <a class="btn" href="#"><i class="fa fa-close fa-fw"></i>删除</a></td></tr><tr><td>3</td><td>1234…80</td><td>三玖</td><td>女</td><td>汉族</td><td>广东省</td><td>广州市</td><td>越秀区</td><td>19XX年X月X日</td><td>计算机与软件工程学院</td><td>软件1901</td><td>201901010103</td><td>13012345680</td><td>创业</td><td>有效</td><td><a class="btn" href="#"><i class="fa fa-check-square-o fa-fw"></i>查看</a> <a class="btn" href="#"><i class="fa fa-edit fa-fw"></i>编辑</a> <a class="btn" href="#"><i class="fa fa-close fa-fw"></i>删除</a></td></tr><tr><td>4</td><td>1234…81</td><td>四叶</td><td>女</td><td>汉族</td><td>浙江省</td><td>杭州市</td><td>西湖区</td><td>19XX年X月X日</td><td>计算机与软件工程学院</td><td>软件1901</td><td>201901010104</td><td>13012345681</td><td>未确定</td><td>有效</td><td><a class="btn" href="#"><i class="fa fa-check-square-o fa-fw"></i>查看</a> <a class="btn" href="#"><i class="fa fa-edit fa-fw"></i>编辑</a> <a class="btn" href="#"><i class="fa fa-close fa-fw"></i>删除</a></td></tr><tr><td>5</td><td>1234…82</td><td>五月</td><td>女</td><td>汉族</td><td>江苏省</td><td>南京市</td><td>鼓楼区</td><td>19XX年X月X日</td><td>计算机与软件工程学院</td><td>软件1901</td><td>201901010105</td><td>13012345682</td><td>未确定</td><td>有效</td><td><a class="btn" href="#"><i class="fa fa-check-square-o fa-fw"></i>查看</a> <a class="btn" href="#"><i class="fa fa-edit fa-fw"></i>编辑</a> <a class="btn" href="#"><i class="fa fa-close fa-fw"></i>删除</a></td></tr></tbody></table></div><p>每页显示<select><option>10</option><option>20</option><option>50</option><option>100</option></select>条，共49条 <a class="btn" href="#"><i class="fa fa-angle-double-left fa-fw"></i>首页</a> <a class="btn" href="#"><i class="fa fa-angle-left fa-fw"></i>上一页</a> <select><option>1</option><option>2</option><option>3</option><option>4</option><option>5</option></select>/5页 <a class="btn" href="#"><i class="fa fa-angle-right fa-fw"></i>下一页</a> <a class="btn" href="#"><i class="fa fa-angle-double-right fa-fw"></i>尾页</a></p></div></div></div><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>列表页面的原理比较简单，不考虑分页的话，<code>SELECT idcard, name, gender, ... FROM students WHERE 一些条件</code>，然后将查出来的结果全部展示到页面即可。但是加上分页之后逻辑会复杂很多，因此建议事先将分页功能封装成公共函数或组件（本文不再讨论分页的实现方式）。</p><p>对于有固定取值的数据（性别、省市县、学院等），建议准备专门的字典表或配置文件，展示时从字典中取值。建议将读取字典数据也维护成公共函数或组件。</p><h1 id="设计方面的问题"><a href="#设计方面的问题" class="headerlink" title="设计方面的问题"></a>设计方面的问题</h1><h2 id="屏幕分辨率"><a href="#屏幕分辨率" class="headerlink" title="屏幕分辨率"></a>屏幕分辨率</h2><p>开发人员经常使用大显示器，分辨率比较高，而用户的显示器五花八门，有大有小，甚至在当今这个满街液晶显示屏的时代仍然使用大脑袋瓜子的1024x768 CRT显示器。因此，设计页面时要考虑多种显示器宽度和高度，例如采用响应式布局，或者去除不必要的东西，或者加水平滚动条，总之要避免让窄屏用户看到像本博客上面那样“东西装不下”的页面效果。</p><div class="note info">            <p>如果你的显示器分辨率比较高，建议把一些常用的宽度和高度测量好，贴在你的显示器上，并且在调试的时候测试不同尺寸的浏览器窗口。</p>          </div><h2 id="不清楚实际数据规模"><a href="#不清楚实际数据规模" class="headerlink" title="不清楚实际数据规模"></a>不清楚实际数据规模</h2><p>一个班级大约有二三十人，而一个年级会有几十至几百人，一个学校可能超过上万人。如果不考虑实际数据规模，设计和实现出来的东西有可能会使用户困扰，例如没有分页（然后把全校上万人全部展示出来）、缺少导入功能（上万人信息需要一个一个地录入）和批量操作功能（上万工作单需要一个一个地提交）。</p><p>即使故意要求给用户增加障碍，例如审核工作单时必须一个一个地操作，我们其实也可以设法在不违反原则的前提下给用户提供一些便利，例如审核完成后自动跳转到下一工作单，并提醒还有多少工作单未处理，而用户不想处理的单子也可以轻松跳过。</p><h2 id="没有搜索-搜索条件不足"><a href="#没有搜索-搜索条件不足" class="headerlink" title="没有搜索/搜索条件不足"></a>没有搜索/搜索条件不足</h2><p>数据很多的时候，应当给用户提供搜索功能，便于很快从大量数据中找到需要的内容。另外设计查询条件时要了解用户希望如何定位数据，避免漏掉常用条件或提供很多多余条件，例如去营业厅查电话费，以身份证或手机号中的前几位或后几位作为查询条件比较靠谱，而用姓名和性别作为条件就不靠谱。</p><p>对于上面的表单来说，查询条件里便缺少学院、班级和学号，并且身份证号和学号最好是模糊查询，因为除了学生本人以外很少有人能把这些号码记得一个数字都不差，而且就算拿着本人身份证或学生证，敲数字也挺麻烦的。</p><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p>展示数据最好排个顺序（默认排序顺序应当取决于用户经常做什么事情），而且要让用户能选择给哪一列排序，例如拿学生名单核对数据时会希望按学号排序，找人的时候会希望按姓名拼音排序，统计生源地时会希望按出生地排序……数据库里面什么顺序就展示什么顺序的话，没准会让用户头大。</p><h2 id="个人隐私"><a href="#个人隐私" class="headerlink" title="个人隐私"></a>个人隐私</h2><p>身份证号、手机号等数据属于个人隐私，没有必要的话不要随意展示给用户。如果确实需要展示，建议考虑脱敏处理（即使本人录入的也是，谁敢说不会盗号呢），例如130****5678。</p><h2 id="展示逻辑删除的数据"><a href="#展示逻辑删除的数据" class="headerlink" title="展示逻辑删除的数据"></a>展示逻辑删除的数据</h2><p>对于删除的数据，无论是物理删除还是逻辑删除，只要删除就没必要再展示给用户了（除非另外设计“回收站”功能）。例如上面表单中有一个“状态”，如果“删除”的操作只是把这个“状态”由有效变成无效，那么建议直接去掉本列，而且使“无效”的数据不再呈现。</p><h1 id="实现方面的问题"><a href="#实现方面的问题" class="headerlink" title="实现方面的问题"></a>实现方面的问题</h1><h2 id="跨站脚本攻击"><a href="#跨站脚本攻击" class="headerlink" title="跨站脚本攻击"></a>跨站脚本攻击</h2><p>举个例子，在数据库里维护一个名字叫<code>张三&lt;script&gt;alert(&#39;xss&#39;);&lt;/script&gt;</code>的学生，若加载页面时弹出个窗口，说明页面有跨站脚本攻击的风险。</p><p>跨站脚本攻击对策有多种，建议用比较彻底的一种：将页面上的动态输出设置为默认转义。换句话讲，用<code>&lt;%= name %&gt;</code>这类模板输出内容时，让模板引擎默认自动将其中的HTML代码转义，这样在页面上展示的就是<code>张三&lt;script&gt;alert(&#39;xss&#39;);&lt;/script&gt;</code>而非张三和一个弹框。（不过前提是模板引擎支持。如果不支持，那么建议做一个统一的转义标记，并要求输出用那个统一标记）</p><h2 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h2><p>查询要注意性能问题。例如</p><h3 id="数据库索引"><a href="#数据库索引" class="headerlink" title="数据库索引"></a>数据库索引</h3><p>如果该建索引的地方没建索引，或者SQL写得很糟糕，根本没走索引，那么查询速度自然会变慢。</p><h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><p>以Oracle为例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> s.*, s.ROWNUM rn <span class="keyword">FROM</span> (</span><br><span class="line">        <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> students <span class="keyword">where</span> ...</span><br><span class="line">    ) s <span class="keyword">WHERE</span> <span class="keyword">rownum</span>&lt;=<span class="number">10000000</span>+<span class="number">10</span></span><br><span class="line">) <span class="keyword">WHERE</span> rn&gt;=<span class="number">10000000</span>;</span><br></pre></td></tr></table></figure><p>的效率要比</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> students <span class="keyword">WHERE</span> <span class="keyword">ROWID</span> <span class="keyword">IN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">id</span> <span class="keyword">FROM</span> (</span><br><span class="line">        <span class="keyword">SELECT</span> s.ROWID <span class="keyword">id</span>, s.ROWNUM n <span class="keyword">FROM</span> (</span><br><span class="line">            <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> students <span class="keyword">WHERE</span> ...</span><br><span class="line">        ) s <span class="keyword">WHERE</span> <span class="keyword">rownum</span>&lt;=<span class="number">10000000</span>+<span class="number">10</span></span><br><span class="line">    ) <span class="keyword">WHERE</span> n&gt;=<span class="number">10000000</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>低一些，因此建议按后者查询。</p><h3 id="反复查数据库"><a href="#反复查数据库" class="headerlink" title="反复查数据库"></a>反复查数据库</h3><p>出生地、民族等字典数据可能也存放在数据库中。如果每次获取取值都查一遍数据库（特别是循环里面查数据库）会非常影响性能。由于字典数据变化并不频繁，建议将此类数据做成缓存，一次性从数据库查好并缓存之后就直接从缓存里面取值。</p><p>缓存会有缓存时效以及线程安全等问题，这里不再展开讨论。</p><h3 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h3><p>模糊查询，特别是双“%”（<code>LIKE &#39;%字符%&#39;</code>）会影响性能，如果不能去掉模糊查询功能，那么要控制好条件，避免大幅度的表扫描。</p><h2 id="越权访问"><a href="#越权访问" class="headerlink" title="越权访问"></a>越权访问</h2><p>假如查看的链接是“/students/view.do?id=10001”，那么将id=10001改成不属于你的10002，你能否看到数据呢？如果能，说明存在漏洞，应当在查数据时附上身份验证（例如在SQL加上是创建者本人的查询条件），确保用户只能看到自己的数据。</p><h2 id="拒绝服务"><a href="#拒绝服务" class="headerlink" title="拒绝服务"></a>拒绝服务</h2><p>假如查询查出总共10000条数据（当然是把分页之后的数据合到一起），你能否通过修改请求的方式让每页展示10000条数据？如果能展示，而且性能开销还不小，那么别人也可以用类似的方法使系统变慢甚至瘫痪。</p><p>你的查询耗时长吗？如果耗时比较长，而且SQL层面的优化已经做得很到位，无法再进一步提高效率，那么建议增加按钮变灰（点一下查询按钮之后就无法再点击，直到查询完成）、动画反馈（Loading…）和限制操作频率（例如禁止频繁操作，或要求先输入验证码再查询）等措施，以免用户频繁提交影响系统整体性能。</p><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p>老生常谈的问题，不再详细讨论。假如你在某个查询条件框输入<code>&#39; or &#39;1&#39;=&#39;1</code>却能查出很多数据，那么你要赶紧补漏洞了。</p><h2 id="未防止误操作"><a href="#未防止误操作" class="headerlink" title="未防止误操作"></a>未防止误操作</h2><p>删除是一个“有危险性”的操作，如果删除之后重建比较麻烦，那么当用户点击“删除”按钮时，系统最好不要直接执行删除，而是弹出一个提示框，让用户确认无误之后再删，以免用户误操作。提交工作单（提交成功之后就不能再修改内容了）之类的“重大”操作也是如此。</p><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ol><li><a href="/2019/02/08/login-page/">登录页面</a></li><li><strong>信息展示列表</strong></li><li><a href="/2019/09/21/edit-page/">信息录入表单</a></li><li>业务申办-审批流程</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文以被各大学校学生做滥了的“学生信息管理系统”为例，讲述信息展示列表开发中的一些问题。&lt;br&gt;
    
    </summary>
    
    
      <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="功能设计" scheme="https://plusnan.me/tags/%E5%8A%9F%E8%83%BD%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>并不简单的基础开发工作（一）：登录页面</title>
    <link href="https://plusnan.me/2019/02/08/login-page/"/>
    <id>https://plusnan.me/2019/02/08/login-page/</id>
    <published>2019-02-07T16:00:00.000Z</published>
    <updated>2020-01-25T15:06:10.990Z</updated>
    
    <content type="html"><![CDATA[<p>开发业务系统，虽然原理非常简单，就是数据库的增删改查，而且业务规则也不过是一堆if-else判断，但是想要做好其实并不容易。本系列文章旨在说明：即使是看起来非常简单的基础开发工作，在设计和实现上也会有很多陷阱，需要非常认真和细心才行。</p><p>本文以简单的登录页面为例，为了突出问题，假设系统只有两个页面：一个登录页面，另一个是登录成功之后显示的“Hello world”。<br><a id="more"></a></p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>登录的思路很简单，就是去数据库里查一下用户输入的账号和密码是否和数据库数据一致，如果一致就将会话状态设置成“已登录”，并跳转到正式的操作页面上，如果不一致就返回登录页面并提示“账号密码错误”。</p><h1 id="设计方面的问题"><a href="#设计方面的问题" class="headerlink" title="设计方面的问题"></a>设计方面的问题</h1><h2 id="暴露多余的信息"><a href="#暴露多余的信息" class="headerlink" title="暴露多余的信息"></a>暴露多余的信息</h2><p>有的系统会“智能”地提示“用户名错误”、“密码错误”，这样会在不经意间暴露多余信息。特别是“密码错误”，这个提示会暗示“用户名正确”，从而促使攻击者加快攻击的步伐。正确的做法是使信息尽可能模糊，只提示“用户名或密码错误”。</p><h2 id="未防范暴力破解"><a href="#未防范暴力破解" class="headerlink" title="未防范暴力破解"></a>未防范暴力破解</h2><p>虽然密码不正确的话进不去，但是网站也未针对暴力破解进行防范，也就是说，只要写个程序一个一个密码地试验，早晚能把密码试出来。因此需要设计防暴力破解的机制，例如：</p><ul><li>输入正确的验证码才能登录（需注意简单的验证码可以被机器识别）。</li><li>第一次不需要输入验证码，但是输错账号密码之后需要输入验证码（需注意“第一次进入登录页面”这种情况也可以伪造）。</li><li>多次认证错误之后锁定账号，例如输错3次密码锁定半小时。（推荐）</li></ul><h2 id="明文存储密码"><a href="#明文存储密码" class="headerlink" title="明文存储密码"></a>明文存储密码</h2><p>在数据库中密码不应当明文存储，否则数据库被攻破之后密码会直接泄漏，更严重的话用户在其他网站账号也会随之攻破（例如<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvMjAxMSVFNSVCOSVCNCVFNCVCOCVBRCVFNSU5QiVCRCVFNyVCRCU5MSVFNyVBQiU5OSVFNyU5NCVBOCVFNiU4OCVCNyVFNCVCRiVBMSVFNiU4MSVBRiVFNiVCMyU4NCVFOSU5QyVCMiVFNCVCQSU4QiVFNCVCQiVCNg==" title="https://zh.wikipedia.org/wiki/2011%E5%B9%B4%E4%B8%AD%E5%9B%BD%E7%BD%91%E7%AB%99%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E4%BA%8B%E4%BB%B6">2011年中国网站用户信息泄露事件<i class="fa fa-external-link"></i></span>）。</p><p>密码应当散列之后再存储到数据库中，而且要用比较安全的散列算法，例如bcrypt。不能用简单的MD5、SHA1（包括MD5之后再MD5），否则仍然有可能通过彩虹表等手段破解（例如事先把常用密码的MD5都计算好，看到<code>202CB962AC59075B964B07152D234B70</code>之后就很容易猜出它是“123”）。</p><h2 id="没有日志记录"><a href="#没有日志记录" class="headerlink" title="没有日志记录"></a>没有日志记录</h2><p>建议设计登录审计功能，每次登录无论成功还是失败都将用户信息记录（主要是IP信息）下来，并提供记录查询，以便使用户判断账号是否安全，或者在发生盗号等安全事件之后进行追溯。</p><p>除此之外也可以加入多重认证（例如隐私验证问题、短信验证码、Google Authenticator）、异地登录提醒等功能，提高安全性。</p><h2 id="没有找回密码功能"><a href="#没有找回密码功能" class="headerlink" title="没有找回密码功能"></a>没有找回密码功能</h2><p>既然有登录功能，那么也应该提供找回密码的功能（设计上要求用户拿着身份证去柜台申请重置密码的除外），使忘记密码的人能够自行重置密码。<span class="exturl" data-url="aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMTkvMDIvcGFzc3dvcmQuaHRtbA==" title="http://www.ruanyifeng.com/blog/2019/02/password.html">这篇文章<i class="fa fa-external-link"></i></span>介绍了设计找回密码功能时需要注意的事情。</p><h2 id="是否需要互斥？"><a href="#是否需要互斥？" class="headerlink" title="是否需要互斥？"></a>是否需要互斥？</h2><p>无论是业务系统，还是其他系统，均会存在多人同时操作同一账号的情况，因此在设计上需要考虑是否允许这种情况（若不允许，需要考虑是否在技术上加以限制）。</p><h1 id="实现方面的问题"><a href="#实现方面的问题" class="headerlink" title="实现方面的问题"></a>实现方面的问题</h1><p>初学者被安排编码工作之后，如果经验不足，也容易犯一些错误，例如：</p><h2 id="绕过认证"><a href="#绕过认证" class="headerlink" title="绕过认证"></a>绕过认证</h2><p>如果知道Helloworld页面的网址，没登录的情况下能不能依靠直接敲网址进去呢？如果能，说明只实现了登录功能，配套的会话验证和权限验证功能没实现。</p><h2 id="SQL注入问题"><a href="#SQL注入问题" class="headerlink" title="SQL注入问题"></a>SQL注入问题</h2><p>初学者容易这样来书写SQL：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String sql = <span class="string">"SELECT count(1) FROM users WHERE username='"</span> + username + <span class="string">"' AND password='"</span> + password + <span class="string">"'"</span>;</span><br></pre></td></tr></table></figure><p>代码中的SQL是直接拼接的，所以只要在密码框输入<code>&#39; or &#39;1&#39;=&#39;1</code>即可绕过验证，因为SQL会变成：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> username=<span class="string">'admin'</span> <span class="keyword">AND</span> <span class="keyword">password</span>=<span class="string">''</span> <span class="keyword">or</span> <span class="string">'1'</span>=<span class="string">'1'</span>;</span><br><span class="line">                                                                ^=========^</span><br></pre></td></tr></table></figure><p>所输密码成为了SQL逻辑的一部分，破坏了原来SQL的逻辑，即SQL注入。</p><p>建议尽可能用绑定参数的形式来查询SQL。如果非要去拼接字符串，那么必须保证用户输入全部被转义，但是不推荐拼接因为容易忘记过滤。</p><h2 id="前台校验"><a href="#前台校验" class="headerlink" title="前台校验"></a>前台校验</h2><p>建议加入前台校验，当用户未输入用户名或密码便点击登录按钮时，系统给出提示并跳转到未输入内容的文本框上，因为前台校验和提示发生在用户的浏览器上面，耗时可以忽略不计，而提交到服务器去校验，提交和返回都需要时间，网络状况差的话速度会比较慢。另外建议采用统一的校验程序，不要自己写校验js，浪费时间精力。</p><div class="note warning">            <p>即便如此，后台校验（特别是业务层面的校验）也是必不可少的，因为前台校验即使逻辑再严密也可以很轻松地绕过去。</p>          </div><h2 id="重复提交表单"><a href="#重复提交表单" class="headerlink" title="重复提交表单"></a>重复提交表单</h2><p>由于用户的网络环境不一定很好，点击“登录”按钮之后可能需要等待一段时间才能出来结果，这时候不耐烦的用户可能会多点击几下按钮，因此编码时候要考虑到这一点。一个简单的处理办法是点击“登录”按钮之后立刻将按钮变灰（无法点击），直到返回结果之后再恢复按钮状态。</p><h2 id="明文传输"><a href="#明文传输" class="headerlink" title="明文传输"></a>明文传输</h2><p>国内很多网站仍然在使用HTTP协议进行传输。HTTP传输内容都是明文，在不安全的网络环境下，用户访问的信息很容易遭到监视和篡改：</p><p><img src="/img/2019-02-08-login-page/password.png" alt="密码被截获"></p><p>而HTTPS协议传输内容是经过加密的，监听者既无法解密也无法篡改，因此建议尽可能将网站更换成HTTPS协议。</p><h2 id="串号"><a href="#串号" class="headerlink" title="串号"></a>串号</h2><p>有些人喜欢注册小号，即使是必须本人操作的业务系统，也存在很多将账号交给他人代办的情况。假如用户操作完A账号，注销（或者直接重新进入登录页面），然后登录B账号，但是A账号相关页面并未关闭，那么在这些页面中还能继续操作吗？</p><h1 id="更致命的问题——有必要全部自己开发吗？"><a href="#更致命的问题——有必要全部自己开发吗？" class="headerlink" title="更致命的问题——有必要全部自己开发吗？"></a>更致命的问题——有必要全部自己开发吗？</h1><p>本文章只是为了说明问题，功能也简单到只有俩页面。实际上，在生产过程中应当采用一些现成的成熟框架，不要自己从头开始实现用户管理功能，既浪费时间和金钱，又容易漏洞百出。</p><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ol><li><strong>登录页面</strong></li><li><a href="/2019/02/09/list-page/">信息展示列表</a></li><li><a href="/2019/09/21/edit-page/">信息录入表单</a></li><li>业务申办-审批流程</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开发业务系统，虽然原理非常简单，就是数据库的增删改查，而且业务规则也不过是一堆if-else判断，但是想要做好其实并不容易。本系列文章旨在说明：即使是看起来非常简单的基础开发工作，在设计和实现上也会有很多陷阱，需要非常认真和细心才行。&lt;/p&gt;
&lt;p&gt;本文以简单的登录页面为例，为了突出问题，假设系统只有两个页面：一个登录页面，另一个是登录成功之后显示的“Hello world”。&lt;br&gt;
    
    </summary>
    
    
      <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="功能设计" scheme="https://plusnan.me/tags/%E5%8A%9F%E8%83%BD%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Java代码审查（四）：使用Phabricator进行人工代码审查（事后审查）</title>
    <link href="https://plusnan.me/2019/02/06/java-code-review-4/"/>
    <id>https://plusnan.me/2019/02/06/java-code-review-4/</id>
    <published>2019-02-05T16:00:00.000Z</published>
    <updated>2020-01-18T13:35:06.981Z</updated>
    
    <content type="html"><![CDATA[<p>本文介绍如何使用Phabricator进行人工代码审查，以及供参考的操作规范。因为时间和篇幅有限，不再写如何搭建Phabricator，需要者可自行在网上搜索安装教程。</p><p>Phabricator是一个在浏览器上操作的开发管理平台，其中包括一个代码审查工具。工具支持两种代码审查方式，一种是事前审查，即提交之后必须先审查通过才能进入代码库；另一种是事后审查，也就是无论是否审查，代码都已经提交到代码库中。考虑我们自身实际情况（事前审查成本比较高），我们采用了“事后审查”的方式，本文也将讲述事后审查的操作。<br><a id="more"></a></p><h1 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h1><p>使用Phabricator进行代码审查的理由：</p><ul><li>配置好之后比较容易上手，而且不用额外安装软件，只要电脑有浏览器就能使用。（不过对于配置者来说很难上手）</li><li>审查以代码提交为单位，每个提交都会展示差异，比较方便和直观。</li><li>审查时可直接在具体代码处标记问题，方便定位和纠正。</li><li>如采用Phabricator进行任务或缺陷管理，可将代码提交活动与任务/缺陷进行关联，便于任务跟踪。</li><li>支持表情包。</li></ul><p>Phabricator的不足之处：</p><ul><li>若提交不规范（例如多次提交），审查会变得比较繁琐。</li><li>若团队成员操作不规范，缺陷跟踪会变得混乱。（对策：制定操作规范）</li><li>缺少统计功能。（对策：在数据库建立查询用账号，通过SQL语句进行统计）</li><li>操作比较繁琐，进入一个功能需要点很多链接。（对策：把常用页面放在浏览器收藏夹中，或者使用Phabricator自带的定制面板和菜单功能把菜单设置好）</li></ul><p>考虑先前代码审查所用手段和工具，我们项目决定采用Phabricator进行人工代码审查，并通过制定规范和进行培训来避免可能出现的问题。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>如果准备工作已经做好，那么可以直接跳到下面“审查”一节。</p><p>以下是Phabricator的基本条件：</p><ol><li>服务器上面安装了Phabricator及相关组件，包括Apache/Nginx、PHP 7.2、MySQL、Phabricator、Git/Subversion、Pygments（基于Python 3，在PATH中且可执行）等。</li><li>服务器配置了域名。如果没有域名，那么需要设置一个伪域名，并要求各成员改hosts。</li><li>给各成员建立了账号。（注意：如果给Phabricator配置了邮箱，注意几乎每个动作都会发邮件，需要告知大家调整系统邮件通知设置）</li><li>有代码库访问权限。</li><li>Phabricator后台进程（Daemon）运行正常。</li></ol><div class="note info">            <p>建议在Phabricator的“Project”应用中建立“Project”，然后将项目成员设置为“Member”，以方便组织成员并控制内容可见性。添加代码库以及新建任务的时候有个字段叫做“Tags”，这个“Tags”便是“Project”。</p>          </div><div class="note warning">            <p>Phabricator安装非常复杂，建议使用现成的Docker容器，例如<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2JpdG5hbWkvYml0bmFtaS1kb2NrZXItcGhhYnJpY2F0b3I=" title="https://github.com/bitnami/bitnami-docker-phabricator">bitnami版本<i class="fa fa-external-link"></i></span>。</p>          </div><h2 id="导入代码库"><a href="#导入代码库" class="headerlink" title="导入代码库"></a>导入代码库</h2><p>满足基本条件之后，需要在Phabricator中导入代码库才能开始进行审查。进入“Diffusion”应用，点击右上角“Create Repository”，在出现的画面中根据实际情况选择Git或SVN。新建完成后界面如下：</p><p><img src="/img/2019-02-06-java-code-review-4/repository.png" alt="repository"></p><p>除了新建Repository，还需要完成以下工作才能开始审查：</p><ol><li>指定实际的Git/SVN仓库位置。</li><li>设置需要导入的路径（仅适用于SVN）。</li><li>设置默认字符编码（如果不是UTF-8的话）。</li><li>激活仓库。</li></ol><h3 id="指定仓库位置"><a href="#指定仓库位置" class="headerlink" title="指定仓库位置"></a>指定仓库位置</h3><p>默认情况下Phabricator会自行托管仓库（Git），我们需要将其解除，并关联到实际的代码库上面。</p><p><img src="/img/2019-02-06-java-code-review-4/uri-1.png" alt="uri-1"></p><p>点击URL，会进入具体设置</p><p><img src="/img/2019-02-06-java-code-review-4/uri-2.png" alt="uri-2"></p><p>点击“Edit URI”修改设置</p><p><img src="/img/2019-02-06-java-code-review-4/uri-3.png" alt="uri-3"></p><p>需要将其中的“I/O Type”修改成“No I/O”，然后保存。之后点击URIs页面上的“New URI”按钮，添加真正的代码库的URL：</p><p><img src="/img/2019-02-06-java-code-review-4/uri-4.png" alt="uri-4"></p><p>注意“I/O Type”选择Observe，因为这个仓库仅用于代码审查，不用于真正的提交。（对于Git仓库，可以用Phabricator作为中介实现事前审查，但SVN仓库不支持事前审查）</p><p>若代码库需要认证，那么还需要在保存之后点击页面右侧的“Set Credential”设置账号密码。</p><div class="note info">            <p>建议给代码库设置Phabricator访问专用账号。</p>          </div><h3 id="设置需要导入的路径（SVN）"><a href="#设置需要导入的路径（SVN）" class="headerlink" title="设置需要导入的路径（SVN）"></a>设置需要导入的路径（SVN）</h3><p>在输入代码库URL时，我们必须输入整个SVN仓库的根目录。实际上可能仅在个别分支上进行开发，不需要关注整个代码库的提交，这样的话需要设置实际导入的路径：</p><p><img src="/img/2019-02-06-java-code-review-4/svn-path.png" alt="svn-path"></p><h3 id="设置字符编码、激活仓库"><a href="#设置字符编码、激活仓库" class="headerlink" title="设置字符编码、激活仓库"></a>设置字符编码、激活仓库</h3><p>在概览页点击“Actions”按钮，从弹出的菜单中选择“Edit Text Encoding”即可指定默认编码。</p><p>选择“Activate Repository”即可激活仓库。一旦仓库激活，Phabricator的后台进程便会定时爬取Git/SVN提交记录，同步更新代码库。爬取频率与代码库实际提交情况有关，工作时间提交频繁，同步速度就快，而下班时间无人提交，同步速度也会降下来。</p><div class="note info">            <p>如果使用HTTPS协议的SVN仓库，且HTTPS证书不正确，那么同步版本库会失败。这种情况下可以进入服务器的shell，以Web Server用户身份手动运行一下svn checkout，永久信任证书，成功checkout之后便可自动同步了。</p>          </div><h1 id="审查"><a href="#审查" class="headerlink" title="审查"></a>审查</h1><p>进入Phabricator的Diffusion应用，找到自己项目的代码库，点击之后可以看到代码库内容和提交记录：</p><p><img src="/img/2019-02-06-java-code-review-4/repo.png" alt="repo"></p><p>点击“Graph”之后可以翻看所有记录。点击Commit中的版本号，可以看到那个版本的变更内容：</p><p><img src="/img/2019-02-06-java-code-review-4/commit.png" alt="commit"></p><p>其中左侧代码是修改之前的版本，右侧是修改之后的版本。代码中红色表示删除内容，而绿色表示增加内容。</p><div class="note info">            <p>Phabricator只能比较文本文件，如果是其他格式则需要自行用其他手段检查，但是不影响录入审查结果。另外Phabricator一次只能审查一个版本，如果想一次性审查多个版本，需要借助一些工具，例如IntelliJ IDEA或TortoiseSVN客户端。</p>          </div><p>检查完成后，需要到页面下面点击“Add Action”，从中选择审查结果。“Accept Commit”表示该版本通过，而“Raise Concern”表示发现问题需要修改。评论完成之后，点击右下角的“Submit”按钮即可提交。</p><p>需要注意的是，除了在页面下方评论区进行评论，也可以在问题代码位置进行评论。点击问题代码的行号，系统会在上面弹出评论框，这样就可以精确地指出哪一行代码存在问题，以便他人进行定位和修复。</p><div class="note info">            <p>Phabricator支持送奖章和发表情包。点击页面右侧的“Award Token”可以送奖章，点击评论区工具栏的表情符号按钮可发送表情包。如需维护表情包，可回到Phabricator首页，在左侧找到“More Applications”，在应用列表中找到“Macro”，然后即可添加或修改表情包。表情包名称需要至少三个字。</p>          </div><h1 id="纠正缺陷"><a href="#纠正缺陷" class="headerlink" title="纠正缺陷"></a>纠正缺陷</h1><p>进入Diffusion应用，点击页面左下角的“Browse Commits”可以进入提交概览页：</p><p><img src="/img/2019-02-06-java-code-review-4/commitview.png" alt="commitview"></p><p>其中第一排的Needs Attention是需要你进行修改的缺陷，你需要点进去查看具体问题，修改，提交，将状态设置为“Request Verification”，然后告知审查者重申（旧版本和新版本都要审）。</p><p>如果你在代码提交说明或评论中提及其他版本号（例如上面的1d6d2ede8de4或R5:12345这种形式），Phabricator会自动在版本号上面生成链接，以便交叉引用。假如你的问题出现在R5:12345版本中，建议提交代码时在说明中包含“R5:12345”字样（例如“修正R5:12345代码审查问题”），这样在审查修改之后的版本（例如R5:12354）中可以直接点链接跳转到12345版本，而且12345这个版本的页面上也会多一个指向12354版本的链接。</p><h1 id="缺陷跟踪"><a href="#缺陷跟踪" class="headerlink" title="缺陷跟踪"></a>缺陷跟踪</h1><p>个人从Browse Commits里可以看到需要处理和等待他人处理的记录。如果想查看其他记录（例如专门审查某个人的提交），或者需要掌握整体的缺陷情况，可以使用高级搜索功能进行检索。</p><p><img src="/img/2019-02-06-java-code-review-4/search.png" alt="search"></p><h1 id="数据统计"><a href="#数据统计" class="headerlink" title="数据统计"></a>数据统计</h1><p>Phabricator未提供导出代码审查问题列表功能，也没有代码审查问题的统计功能，因此需要登录到后台数据库，通过查SQL的方法进行导出和统计。</p><p>假设Phabricator中代码库代号为R5，那么</p><h2 id="问题列表"><a href="#问题列表" class="headerlink" title="问题列表"></a>问题列表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    cmt.commitIdentifier <span class="keyword">AS</span> <span class="string">`提交ID`</span>,</span><br><span class="line">    <span class="keyword">DATE_FORMAT</span>(FROM_UNIXTIME(cmt.epoch), <span class="string">'%Y-%m-%d %H:%i:%s'</span>) <span class="keyword">AS</span> <span class="string">`提交时间`</span>,</span><br><span class="line">    dat.authorName <span class="keyword">AS</span> <span class="string">`提交者`</span>,</span><br><span class="line">    usr.userName <span class="keyword">AS</span> <span class="string">`审核者`</span>,</span><br><span class="line">    cmt.auditStatus <span class="keyword">AS</span> <span class="string">`状态`</span>,</span><br><span class="line">    path.path,</span><br><span class="line">    <span class="keyword">RIGHT</span>(path.path, <span class="keyword">INSTR</span>(<span class="keyword">REVERSE</span>(path.path), <span class="string">'/'</span>)<span class="number">-1</span>) <span class="keyword">AS</span> <span class="string">`文件名`</span>,</span><br><span class="line">    <span class="keyword">CASE</span> <span class="keyword">WHEN</span> pl.lineNumber=<span class="number">0</span> <span class="keyword">THEN</span> <span class="literal">NULL</span> <span class="keyword">ELSE</span> pl.lineNumber <span class="keyword">END</span> <span class="keyword">AS</span> <span class="string">`行号`</span>,</span><br><span class="line">    pl.content <span class="keyword">AS</span> <span class="string">`问题描述`</span></span><br><span class="line"><span class="keyword">FROM</span> phabricator_repository.repository_commit cmt</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> phabricator_repository.repository_commitdata dat <span class="keyword">ON</span> dat.commitID = cmt.id</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> phabricator_audit.audit_transaction aud <span class="keyword">ON</span> aud.objectPHID = cmt.phid <span class="keyword">AND</span> aud.commentPHID <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> phabricator_audit.audit_transaction_comment pl <span class="keyword">ON</span> pl.phid = aud.commentPHID</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> phabricator_repository.repository_path <span class="keyword">path</span> <span class="keyword">ON</span> path.id = pl.pathID</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> phabricator_user.user usr <span class="keyword">ON</span> usr.phid = pl.authorPHID</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    cmt.repositoryID = <span class="number">5</span></span><br><span class="line">    <span class="comment">-- 根据需要解除下面的注释</span></span><br><span class="line">    <span class="comment">-- AND auditStatus IN ('concern-raised', 'needs-verification')  -- 未关闭</span></span><br><span class="line">    <span class="comment">-- AND auditStatus = 'audited'                                  -- 已关闭</span></span><br><span class="line">    <span class="comment">-- AND DATEDIFF(SYSDATE(), FROM_UNIXTIME(cmt.epoch)) &lt; 7        -- 七天之内</span></span><br><span class="line">    <span class="comment">-- AND DATEDIFF(SYSDATE(), FROM_UNIXTIME(cmt.epoch)) &gt;= 7       -- 七天以上</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> cmt.epoch <span class="keyword">DESC</span>, cmt.repositoryID <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h2 id="按提交人统计未关闭缺陷数量"><a href="#按提交人统计未关闭缺陷数量" class="headerlink" title="按提交人统计未关闭缺陷数量"></a>按提交人统计未关闭缺陷数量</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    u.userName, u.realName, <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">as</span> 未关闭数目</span><br><span class="line"><span class="keyword">FROM</span> phabricator_repository.repository_commit c</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> phabricator_user.user u <span class="keyword">ON</span> u.phid=c.authorPHID</span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line">    c.auditStatus <span class="keyword">IN</span> (<span class="string">'concern-raised'</span>, <span class="string">'needs-verification'</span>)</span><br><span class="line">    <span class="keyword">AND</span> c.repositoryID = <span class="number">5</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line">    u.userName, u.realName</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">count</span>(<span class="number">1</span>) <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><h1 id="操作规范（仅供参考）"><a href="#操作规范（仅供参考）" class="headerlink" title="操作规范（仅供参考）"></a>操作规范（仅供参考）</h1><ul><li>应当按照实际开发活动一次性把相关文件都提交上，但是开发活动不同的话代码也要分开提交。</li><li>提交代码必须书写合适的提交说明。</li><li>如有开发活动，每日不定期进行代码审查。</li><li>新员工和工作经验不足者的代码必须被审查。</li><li>审查如发现问题，需要进行说明，并将其标记在问题代码处。</li><li>问题纠正后由本人在系统中将状态标记为“Request Verification”，通过Git/SVN提交摘要或站内评论的方式将新旧版本号关联，然后由原审查者重审，将新旧版本同时关闭。</li><li>审查发现的问题应当及时（例如限制一周之内）关闭。</li></ul><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ol><li><a href="/2019/01/02/java-code-review-1">代码审查问题</a></li><li><a href="/2019/01/03/java-code-review-2">应用安全问题</a></li><li><a href="/2019/01/04/java-code-review-3">关于编程习惯的要求</a></li><li><strong>使用Phabricator进行人工代码审查</strong></li><li>使用FindBugs和SonarQube等工具进行扫描</li><li>……</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍如何使用Phabricator进行人工代码审查，以及供参考的操作规范。因为时间和篇幅有限，不再写如何搭建Phabricator，需要者可自行在网上搜索安装教程。&lt;/p&gt;
&lt;p&gt;Phabricator是一个在浏览器上操作的开发管理平台，其中包括一个代码审查工具。工具支持两种代码审查方式，一种是事前审查，即提交之后必须先审查通过才能进入代码库；另一种是事后审查，也就是无论是否审查，代码都已经提交到代码库中。考虑我们自身实际情况（事前审查成本比较高），我们采用了“事后审查”的方式，本文也将讲述事后审查的操作。&lt;br&gt;
    
    </summary>
    
    
      <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="Phabricator" scheme="https://plusnan.me/tags/Phabricator/"/>
    
  </entry>
  
  <entry>
    <title>批量将&amp;#34;&amp;#34;.equals()替换成StringUtils.isEmpty()</title>
    <link href="https://plusnan.me/2019/01/29/equals/"/>
    <id>https://plusnan.me/2019/01/29/equals/</id>
    <published>2019-01-28T16:00:00.000Z</published>
    <updated>2019-02-15T05:39:53.780Z</updated>
    
    <content type="html"><![CDATA[<p>甲方前一段时间使用360代码卫士对我们项目进行了“代码审计”，其中一个问题是“使用equals()来判断字符串是否为空”。由于甲方只关心问题数量，不关心问题性质（甚至连算不算问题都不在乎），我们只能硬着头皮去按甲方要求修改。<br><a id="more"></a></p><h1 id="修改的必要性"><a href="#修改的必要性" class="headerlink" title="修改的必要性"></a>修改的必要性</h1><p>首先看一下equals()和length()的实现：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object anObject)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span> == anObject) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (anObject <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">        String anotherString = (String)anObject;</span><br><span class="line">        <span class="keyword">int</span> n = value.length;</span><br><span class="line">        <span class="keyword">if</span> (n == anotherString.value.length) &#123;</span><br><span class="line">            <span class="keyword">char</span> v1[] = value;</span><br><span class="line">            <span class="keyword">char</span> v2[] = anotherString.value;</span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (n-- != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (v1[i] != v2[i])</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">length</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> value.length;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很明显，equals也是先比较字符串长度，而且空串长度是0，即使进入while处也跑不起来，因此在业务系统这种意义上不会有任何性能差异。另一方面，我们进行了简单的性能测试（循环一千万次），结果同样表明完全没有必要改。</p><h1 id="施工"><a href="#施工" class="headerlink" title="施工"></a>施工</h1><p>为了交差，我们不得不去做没有必要的事情，所以我们需要考虑一种代价最小、没有副作用的改法。考虑到业务系统并不差调用一个函数的时间，我们干脆直接使用StringUtils工具类，既增加代码可读性，也便于装逼。代码通过awk和bash进行自动处理。</p><h2 id="检查公共函数"><a href="#检查公共函数" class="headerlink" title="检查公共函数"></a>检查公共函数</h2><p>先确认import org.apache.commons.lang.StringUtils是否能正确导入。如果不能，那么需要导入jar包（commons-lang.jar）。</p><h2 id="equals-awk"><a href="#equals-awk" class="headerlink" title="equals.awk"></a>equals.awk</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意：mac系统要使用gawk</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span> &#123;</span><br><span class="line">    imported = <span class="number">0</span>;</span><br><span class="line">    last_import_line = -<span class="number">1</span>;</span><br><span class="line">    bufflen = <span class="number">0</span>;</span><br><span class="line">    changed = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修正第一类equals判断问题 "".equals(xxx)，提取括号里的内容，pos需要是恰好为括号的位置，如果失败则返回-1。</span></span><br><span class="line"><span class="keyword">function</span> extract1(str, pos,        i, level, endpos, result, len, arr) &#123;</span><br><span class="line">    level = <span class="number">0</span>;</span><br><span class="line">    endpos = -<span class="number">1</span>;</span><br><span class="line">    result = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    len = length(str);</span><br><span class="line">    split(str, arr, <span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i=pos; i&lt;=length(arr); i++) &#123;</span><br><span class="line">        result = result arr[i];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (arr[i]==<span class="string">"("</span>) &#123;</span><br><span class="line">            level++;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (arr[i]==<span class="string">")"</span>) &#123;</span><br><span class="line">            level--;</span><br><span class="line">            <span class="keyword">if</span> (level == <span class="number">0</span>) &#123;</span><br><span class="line">                endpos=i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (endpos == -<span class="number">1</span>) &#123;</span><br><span class="line">        return -<span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        return result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修正第一类equals判断问题： "".equals(xxx)</span></span><br><span class="line"><span class="keyword">function</span> fix_equals1(str,      result, m, txt, tmp) &#123;</span><br><span class="line">    result = str;</span><br><span class="line">    m = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        m = match(substr(result, m + <span class="number">1</span>), <span class="regexp">/[^\\]""\.equals/</span>);</span><br><span class="line">        <span class="keyword">if</span> (m &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            txt = extract1(result, m + <span class="number">10</span>);</span><br><span class="line">            <span class="keyword">if</span> (txt != -<span class="number">1</span>) &#123;</span><br><span class="line">                result = substr(result, <span class="number">1</span>, m) <span class="string">"StringUtils.isEmpty"</span> txt substr(result, m + <span class="number">10</span> + length(txt));</span><br><span class="line">                m = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修正第二类equals判断问题xxx.equals("")，提取其中的xxx，匹配规则：括号、字母、数字，碰到别的东西就停止</span></span><br><span class="line"><span class="keyword">function</span> extract2(str, pos,     i, level, result, ch, arr) &#123;</span><br><span class="line">    level = <span class="number">0</span>;</span><br><span class="line">    split(str, arr, <span class="string">""</span>);</span><br><span class="line">    result = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = pos; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        ch = arr[i];</span><br><span class="line">        <span class="keyword">if</span> (match(ch, <span class="regexp">/[a-zA-Z0-9_ \t\.]/</span>)) &#123;</span><br><span class="line">            <span class="comment"># 放行</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">")"</span>) &#123;</span><br><span class="line">            level++;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">"("</span>) &#123;</span><br><span class="line">            level--;</span><br><span class="line">            <span class="keyword">if</span> (level &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (level == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        result = ch result;</span><br><span class="line">    &#125;</span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修正第二类equals判断问题：xxx.equals("")</span></span><br><span class="line"><span class="keyword">function</span> fix_equals2(str,    result, m, txt, tmp) &#123;</span><br><span class="line">    result = str;</span><br><span class="line">    m = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        m = match(substr(result, m + <span class="number">1</span>), <span class="regexp">/\.equals\(""\)/</span>);</span><br><span class="line">        <span class="keyword">if</span> (m &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            txt = extract2(result, m - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (txt != <span class="string">""</span>) &#123;</span><br><span class="line">                result = substr(result, <span class="number">1</span>, m - length(txt) - <span class="number">1</span>) <span class="string">"StringUtils.isEmpty("</span> txt <span class="string">")"</span> substr(result, m + <span class="number">11</span>);</span><br><span class="line">                m = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="regexp">/^import.*;$/</span> &#123;</span><br><span class="line">    <span class="comment"># 检查有没有import字符串工具类</span></span><br><span class="line">    <span class="keyword">if</span> (imported == <span class="number">0</span> &amp;&amp; match(<span class="variable">$0</span>, <span class="regexp">/StringUtils;/</span>)) &#123;</span><br><span class="line">        imported = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    last_import_line = NR;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    line = <span class="variable">$0</span>;</span><br><span class="line"></span><br><span class="line">    line = fix_equals1(line);</span><br><span class="line">    line = fix_equals2(line);</span><br><span class="line"></span><br><span class="line">    gsub(<span class="regexp">/!StringUtils\.isEmpty/</span>, <span class="string">"StringUtils.isNotEmpty"</span>, line);</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 实际上不必要的trim。如果你的项目确实会出现空格，请谨慎处理。</span></span><br><span class="line">    line = gensub(<span class="regexp">/StringUtils\.isEmpty\(([a-zA-Z0-9_ ]+)\.trim\(\)[ ]*\)/</span>, <span class="string">"StringUtils.isEmpty(\\1)"</span>, <span class="string">"g"</span>, line);</span><br><span class="line">    line = gensub(<span class="regexp">/StringUtils\.isNotEmpty\(([a-zA-Z0-9_ ]+)\.trim\(\)[ ]*\)/</span>, <span class="string">"StringUtils.isNotEmpty(\\1)"</span>, <span class="string">"g"</span>, line);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$0</span> != line) &#123;</span><br><span class="line">        changed = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 在完成分析import之前不要直接输出，以便插入import StringUtils语句</span></span><br><span class="line">    buff[bufflen + <span class="number">1</span>] = line;</span><br><span class="line">    bufflen = bufflen + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">END</span> &#123;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= bufflen; i++) &#123;</span><br><span class="line">        print buff[i];</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 插入 import StringUtils。如果有import语句就插到所有import后面，否则放在第二行（正常情况下package com.xxx是第一行）</span></span><br><span class="line">        <span class="keyword">if</span> (imported != <span class="number">1</span> &amp;&amp; (i == last_import_line || last_import_line == -<span class="number">1</span>) &amp;&amp; changed == <span class="number">1</span>) &#123;</span><br><span class="line">            print <span class="string">"import org.apache.commons.lang.StringUtils;"</span>;</span><br><span class="line">            imported = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="equals-sh"><a href="#equals-sh" class="headerlink" title="equals.sh"></a>equals.sh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> LC_ALL=zh_CN.GBK         <span class="comment"># 代码用UTF-8的，本行需要删掉</span></span><br><span class="line"><span class="built_in">cd</span> 代码所在路径</span><br><span class="line">find . -name <span class="string">"*.java"</span> | <span class="keyword">while</span> <span class="built_in">read</span> file; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$file</span></span><br><span class="line">    awk -f equals.awk <span class="variable">$file</span> &gt; _tmp.java         <span class="comment"># macOS需要用gawk，安装命令brew install gawk或port install gawk</span></span><br><span class="line">    cp _tmp.java <span class="variable">$file</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">rm _tmp.java</span><br></pre></td></tr></table></figure><h2 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h2><p>编译程序，发现程序出现了很多编译错误，这些错误都是因类型不一致导致的低级错误，例如字符串与日期比较、对着int值进行Interger.valueOf、判断int值是否为空串等等。这样看来，无用功做得倒也值了。</p><h1 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h1><p><code>str != null &amp;&amp; !&quot;&quot;.equals(str)</code>以及<code>str == null || &quot;&quot;.equals(str)</code>转换之后会变成<code>str != null &amp;&amp; StringUtils.isNotEmpty(str)</code>和<code>str == null || StringUtils.isEmpty(str)</code>，但空指针判断已经没有必要，应当删除。</p><h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><p>写脚本和调试脚本花了半天时间，下午脚本执行完成，然后手工处理了一些暴露出来的代码错误。隔壁两位新员工分别改另外两类简单问题，结果各花了一星期，因此非常建议大家学习一两门辅助语言，并且自动化处理事情。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;甲方前一段时间使用360代码卫士对我们项目进行了“代码审计”，其中一个问题是“使用equals()来判断字符串是否为空”。由于甲方只关心问题数量，不关心问题性质（甚至连算不算问题都不在乎），我们只能硬着头皮去按甲方要求修改。&lt;br&gt;
    
    </summary>
    
    
      <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
      <category term="awk" scheme="https://plusnan.me/tags/awk/"/>
    
  </entry>
  
  <entry>
    <title>从Eclipse切换到IDEA（二）：传统Web项目的Project Structure</title>
    <link href="https://plusnan.me/2019/01/27/switch-to-idea-2/"/>
    <id>https://plusnan.me/2019/01/27/switch-to-idea-2/</id>
    <published>2019-01-26T16:00:00.000Z</published>
    <updated>2020-01-20T08:58:51.239Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要介绍如何将传统Web项目（不使用Maven、Gradle等构建工具，jar包等全部手工配置）从Eclipse转换到IDEA。主要内容为传统项目的Project Structure配置。<br><a id="more"></a></p><h1 id="关于IDEA中的Project-Structure和Run-Configuration"><a href="#关于IDEA中的Project-Structure和Run-Configuration" class="headerlink" title="关于IDEA中的Project Structure和Run Configuration"></a>关于IDEA中的Project Structure和Run Configuration</h1><p>Project Structure即项目结构。配置Project Structure大体上就是在告诉IDEA以下几件事：</p><ol><li>项目用哪个JDK开发？</li><li>项目由哪些模块组成？这些模块之间有什么关系？</li><li>模块依赖哪些jar包？</li><li>模块有哪些特征？（例如是Web项目）</li><li>编译完成之后如何打包？</li></ol><p>Project Structure配置好之后就可以进行编译。</p><p>Run Configuration则是启动配置。它在告诉IDEA编译完成之后如何运行那些代码，所以在编译时不是必需的，但运行时是必需的。</p><h1 id="简单工程的Project-Structure"><a href="#简单工程的Project-Structure" class="headerlink" title="简单工程的Project Structure"></a>简单工程的Project Structure</h1><p>以一个Helloworld级的SpringMVC项目为例。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&gt; HelloSpringMVC</span><br><span class="line">    &gt; src                       ----&gt; Java源代码</span><br><span class="line">    .   &gt; com</span><br><span class="line">    .       &gt; example</span><br><span class="line">    .           &gt; hello</span><br><span class="line">    .               &gt; controller</span><br><span class="line">    .                   HelloController.java</span><br><span class="line">    .               ...</span><br><span class="line">    &gt; config                    ----&gt; 公共配置文件</span><br><span class="line">    .   SpringMVC-servlet.xml</span><br><span class="line">    .   ...</span><br><span class="line">    &gt; WebContent                ----&gt; Web文件目录</span><br><span class="line">        &gt; components</span><br><span class="line">        .   &gt; jquery</span><br><span class="line">        .   ...</span><br><span class="line">        &gt; WEB-INF</span><br><span class="line">        .   &gt; lib</span><br><span class="line">        .   .   commons-logging-1.2.jar</span><br><span class="line">        .   .   ...</span><br><span class="line">        .   &gt; page</span><br><span class="line">        .   .   init.jsp</span><br><span class="line">        .   .   ...</span><br><span class="line">        .   web.xml</span><br><span class="line">        ...</span><br></pre></td></tr></table></figure><p>直接用IDEA打开项目所在目录（HelloSpringMVC），它会尝试将Eclipse项目转化为IDEA项目（两IDE的配置文件可以同时存在，不会相互冲突），但是自动识别的文件结构并不正确，所以我们仍然需要通过“File”下面的“Project Structure”菜单重新配置项目。</p><p><img src="/img/2019-01-27-switch-to-idea-2/project-structure-0.png" alt="Project Structure对话框"></p><p>下面介绍每个页签的设置。注意，我们并不需要把每个参数都设置一遍，也不会严格按照页面选项的顺序进行操作。</p><h2 id="Project"><a href="#Project" class="headerlink" title="Project"></a>Project</h2><p>这一页内容比较简单，需要设置项目名称、JDK路径、支持的Java版本以及编译输出文件路径。其中Project compiler output放在哪里都行，只是不要不小心把编译出来的垃圾提交到代码库中。</p><h2 id="Libraries"><a href="#Libraries" class="headerlink" title="Libraries"></a>Libraries</h2><p>本页管理的是“应用使用了哪些jar包”。这里相当于把应用所需jar包“打了个捆”来管理，以便后面配置工程依赖项。</p><p><img src="/img/2019-01-27-switch-to-idea-2/idea-libraries.png" alt="Libraries"></p><p>没有特殊需求的话，将装jar包的目录（WebContent/WEB-INF/lib）添加成lib即可。</p><h2 id="Modules"><a href="#Modules" class="headerlink" title="Modules"></a>Modules</h2><p>IDEA没有Workspace的概念。和Eclipse中Project差不多的东西叫“Module”。一堆Module组成了一个Project。因为两边都有Project这个词语，所以小心不要把自己绕进去。</p><p>本页的作用是指出“项目由哪些模块构成”，有点像Eclipse里头的Build Path设置。另外Sources、Dependencies两个子页面也需要关注。</p><h3 id="Sources"><a href="#Sources" class="headerlink" title="Sources"></a>Sources</h3><p>Sources子页面的作用是指出“哪些是Java代码，哪些是资源文件，哪些是垃圾”。</p><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="/img/2019-01-27-switch-to-idea-2/eclipse-modules-1.png" alt="2"></div><div class="group-picture-column" style="width: 50%;"><img src="/img/2019-01-27-switch-to-idea-2/idea-modules-1.png" alt="1"></div></div></div></div><p>IDEA将目录分成五类（Mark as后面五个）。其中Sources表示需要正常编译的Java代码，Resources表示打包时需要附到一起的文件，而Excluded表示将目录排除。</p><p>稍微提一下上图Eclipse里面的config，根据前面提到的文件结构，它并不是Java代码，在Eclipse里标记成Source Folder纯粹是为了便于查找。</p><div class="note info">            <p>对于传统Web项目，Resources怎么标记都无所谓了，后面Artifacts配置正确就行。</p>          </div><h3 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h3><p>Dependencies子页面的作用是指出依赖关系（例如需要哪些jar包）。在依赖项管理上，IDEA和Eclipse也是既有相同之处也有不同之处。IDEA这边相当于把Eclipse的Projects、Libraries和Order and Export三个页签合并到一起了。</p><div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width: 50%;"><img src="/img/2019-01-27-switch-to-idea-2/eclipse-modules-2.png" alt="2"></div><div class="group-picture-column" style="width: 50%;"><img src="/img/2019-01-27-switch-to-idea-2/idea-modules-2.png" alt="1"></div></div></div></div><p>这里面应当至少包含JDK（IDEA自动添加）、源代码中专门放jar包的目录和依赖的其他工程。如果使用了Tomcat和某些类，例如javax.servlet.ServletContext，我们还需要加入Tomcat。</p><div class="note info">            <p>第一次设置时可能找不到所有依赖项，例如Library中没有Tomcat。我们可以先只配置一部分，等到后面设置Library甚至到编译运行出现编译错误时再回来继续配置依赖项。</p>          </div><p>Scope表示依赖程度：</p><ul><li>默认是Compile，也就是编译和打包时都要跟着放进去。</li><li>Runtime表示编译时不用编译，但后续运行时要跟着放在一起。</li><li>Provided表示打包时候不用跟着打，Tomcat等Web容器会提供。</li><li>Test表示只有测试时才参与。</li></ul><h2 id="Facets"><a href="#Facets" class="headerlink" title="Facets"></a>Facets</h2><p>本页面表示模块“有哪些特征”（例如Web、Spring等）。正确设置“特征”之后IDEA便可识别相应的配置文件。</p><p><img src="/img/2019-01-27-switch-to-idea-2/idea-facets.png" alt="1"></p><p>本项目是个简单的Web项目，其“特征”只有Web。添加特征可以从Facets或Modules两个页面进行操作。</p><p>对于Web项目，我们需要关注上面的“Web Module Deployment Descriptor”和下面的“Web Resources Directories”两个设置，前者表示web.xml所在位置，后者表示WebContent（即JSP等页面）的目录。</p><p>如果中间件有特殊设置，例如通过Tomcat的context.xml设置了数据源，那么可以点击“Add Application Server specific descriptor”按钮添加自定义配置文件，这样启动Tomcat时会加载你配置的context.xml的内容。</p><h2 id="Artifacts"><a href="#Artifacts" class="headerlink" title="Artifacts"></a>Artifacts</h2><p>本页面表示“编译完成之后如何打包”。</p><p>Eclipse中，类似功能是“Deployment Assembly”：</p><p><img src="/img/2019-01-27-switch-to-idea-2/eclipse-artifacts.png" alt="1"></p><p>回到IDEA。点加号可以看到多种打包方法。对于这个Web项目而言，建议选择“Web Application: Exploded”（散装，不打成war包）或“Web Application: Archive”（打成war包）。下面选择了散装：</p><p><img src="/img/2019-01-27-switch-to-idea-2/idea-artifacts.png" alt="1"></p><p>上图是已经配置好的结构。其中：</p><ul><li>‘HelloSpringMVC’ compile output表示编译好的class文件。</li><li>lib表示项目所依赖的jar包。</li><li>‘HelloSpringMVC’ module: ‘Web’ facet resources表示JSP等文件。需要在前面把Facets配置好才会出现。</li><li>‘config’ directory contents通过加号里的“Directory Content”配置，表示把某个目录里的文件直接拷过来。</li></ul><p>生成的文件就在Output directory中。如果不考虑数据源等配置，你可以在启动之后把这个目录里的东西拷走然后直接部署。</p><p>点击加号，可以看到以下几个菜单：</p><p><img src="/img/2019-01-27-switch-to-idea-2/idea-artifacts-2.png" alt="1"></p><p>这分别表示“要把哪种文件拷过来”：</p><ul><li>Library Files表示把jar包拷过来，前提是Libraries页面已经正确配置。</li><li>Module Output表示把编译好的class文件拷过来，前提是Modules页面已经正确配置。</li><li>Module Sources表示把源代码拷过来。</li><li>File、Directory Content分别表示把单个文件和整个目录的文件拷过来。</li><li>Extracted Directory表示把压缩包（例如zip、jar）内容解压之后拷过来。</li><li>JavaEE Facet Resources表示把Web项目的JSP等文件拷过来。</li></ul><p>如不熟悉配置，建议参照Eclipse的Deployment Assembly配置，并对比两个IDE生成出来的文件的结构。另外建议仔细检查和测试WEB-INF下面的配置，以免遗漏文件或者文件不更新（即第一次启动时复制过来了，后续这些文件即使修改过也未同步）。</p><p>截至这里，Project Structure就大体上配置好了。可以检查项目结构是否正确识别，然后准备配置Run Configuration并启动项目。</p><h1 id="稍微复杂一点"><a href="#稍微复杂一点" class="headerlink" title="稍微复杂一点"></a>稍微复杂一点</h1><p>以上是单模块的简单项目。下面让我们把项目结构弄复杂一点，使用两个Web项目和一个公共代码项目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&gt; WebProj1                      ----&gt; Web项目1</span><br><span class="line">    &gt; src                       ----&gt; Java源代码1</span><br><span class="line">    .   ...</span><br><span class="line">    &gt; config                    ----&gt; 项目配置文件1</span><br><span class="line">    .   SpringMVC-servlet.xml</span><br><span class="line">    .   ...</span><br><span class="line">    &gt; WebContent                ----&gt; Web文件目录</span><br><span class="line">        &gt; WEB-INF</span><br><span class="line">        .   &gt; lib</span><br><span class="line">        .       ...</span><br><span class="line">        .   web.xml</span><br><span class="line">        .   ...</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">&gt; WebProj2                      ----&gt; Web项目2</span><br><span class="line">    &gt; src                       ----&gt; Java源代码2</span><br><span class="line">    .   ...</span><br><span class="line">    &gt; config                    ----&gt; 项目配置文件2</span><br><span class="line">    .   SpringMVC-servlet.xml</span><br><span class="line">    .   ...</span><br><span class="line">    &gt; WebContent                ----&gt; Web文件目录</span><br><span class="line">        &gt; WEB-INF</span><br><span class="line">        .   &gt; lib</span><br><span class="line">        .       ...</span><br><span class="line">        .   web.xml</span><br><span class="line">        .   ...</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">&gt; CommonProj                    ----&gt; 公共代码</span><br><span class="line">    &gt; src                       ----&gt; Java源代码</span><br><span class="line">    .   ...</span><br><span class="line">    &gt; commonConfig              ----&gt; 全局配置文件</span><br><span class="line">        ...</span><br></pre></td></tr></table></figure><p>因为原理实际上是一样的，下面直接给出参考配置。</p><h2 id="Project-1"><a href="#Project-1" class="headerlink" title="Project"></a>Project</h2><p><img src="/img/2019-01-27-switch-to-idea-2/example2-1.png" alt="1"></p><h2 id="Libraries-1"><a href="#Libraries-1" class="headerlink" title="Libraries"></a>Libraries</h2><p><img src="/img/2019-01-27-switch-to-idea-2/example2-6.png" alt="1"></p><h2 id="Modules-1"><a href="#Modules-1" class="headerlink" title="Modules"></a>Modules</h2><p>一开始给出的Project可能是错误的，可以将其删除，然后重新添加。添加时点Import菜单来导入现有模块。由于WebProj1和WebProj2结构类似，下面只展示WebProj1的配置。</p><p><img src="/img/2019-01-27-switch-to-idea-2/example2-2.png" alt="1"><br><img src="/img/2019-01-27-switch-to-idea-2/example2-3.png" alt="2"><br><img src="/img/2019-01-27-switch-to-idea-2/example2-4.png" alt="3"></p><p>如果启动时CommonProj提示缺少类，可能是CommonProj的Dependencies需要补jar包。如果WebProj缺少javax的类，那么它们两个的Dependencies需要补Tomcat。</p><h2 id="Facets-1"><a href="#Facets-1" class="headerlink" title="Facets"></a>Facets</h2><p><img src="/img/2019-01-27-switch-to-idea-2/example2-5.png" alt="1"></p><h2 id="Artifacts-1"><a href="#Artifacts-1" class="headerlink" title="Artifacts"></a>Artifacts</h2><p><img src="/img/2019-01-27-switch-to-idea-2/example2-7.png" alt="1"></p><p>由图可见，因为CommonProj不是Web项目，无法单独启动，所以它没有单独的应用。全局配置文件则以“Directory Content”添加了过来。</p><h1 id="Run-Configuration"><a href="#Run-Configuration" class="headerlink" title="Run Configuration"></a>Run Configuration</h1><p>Project Structure配置好之后，就可以准备启动。点击IDEA界面右上角的“Add Configuration…”，或者“Run”菜单下面的“Edit Configurations”即可编辑启动设置。</p><p>启动配置界面如下。我们需要先在左侧添加Tomcat（菜单需要翻页才能找到），然后在右面进行设置。</p><p><img src="/img/2019-01-27-switch-to-idea-2/idea-run-1.png" alt="1"></p><p>如果Application server中没有应用服务器，或者版本与需求不一致，需要点击右边的Configure按钮配置应用服务器路径。其他设置按提示进行设置即可。</p><p>“On frame deactivation”的行为有点类似Eclipse在保存代码时进行热部署。不过IDEA里面不需要点保存按钮，触发条件就变成了窗口失去焦点，例如在运行期间修改一段代码之后点一下Dock（Windows系统是点任务栏）或者切换到浏览器，IDEA就会自动编译和热部署。</p><p>对话框下面是项目的构建步骤。构建至少要有两步，一个是编译Java代码（Build），另一个是打包（Build artifacts）。点击对话框上面的“Deployment”即可设置部署哪些应用：</p><p><img src="/img/2019-01-27-switch-to-idea-2/idea-run-2.png" alt="2"></p><p>可部署应用与Project Structure的Artifacts关联，具体设置则和Eclipse类似：</p><p><img src="/img/2019-01-27-switch-to-idea-2/eclipse-run.png" alt="2"></p><p>配置好之后即可点击运行按钮，确认项目能否启动。</p><div class="note info">            <p>如果启动时候报错，提示找不到类，说明Project Structure里的Dependencies配置不完整，例如缺少某个jar包，或者项目间依赖关系配置不全，这种情况下需要回到Project Structure配置，检查并补充遗漏项。</p><p>另外，如果缺少的是“javax.servlet.ServletContext”等类，则需要在Dependencies中添加“Library”，然后在弹出的对话框中选择Tomcat（或类似中间件）。</p>          </div><h1 id="提交到版本控制"><a href="#提交到版本控制" class="headerlink" title="提交到版本控制"></a>提交到版本控制</h1><p>当Project Structure和启动设置配置完成，验证启动也没有问题，就可以将当前项目配置文件提交到版本控制，以便团队其他成员配置，也方便大家统一编辑器设置。</p><h2 id="检查系统设置"><a href="#检查系统设置" class="headerlink" title="检查系统设置"></a>检查系统设置</h2><p>有些系统设置和具体项目有关，会随着项目文件一同保存，例如文件编码、代码风格、编译器设置等。在正式投入开发之前建议统一标准，挨个检查一下，将这些参数设置好，然后借助版本控制与大家分享。</p><h2 id="提交配置文件"><a href="#提交配置文件" class="headerlink" title="提交配置文件"></a>提交配置文件</h2><p>如果项目使用Git，直接从GitHub上面取<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2dpdGh1Yi9naXRpZ25vcmUvYmxvYi9tYXN0ZXIvR2xvYmFsL0pldEJyYWlucy5naXRpZ25vcmU=" title="https://github.com/github/gitignore/blob/master/Global/JetBrains.gitignore">JetBrains.gitignore<i class="fa fa-external-link"></i></span>，维护成.gitignore即可得知哪些文件应当提交。</p><p>对于SVN项目，有一种比较快捷的方式是进入IDEA的Version Control窗口，检查其中未加入版本控制的文件。IDEA会自动隐藏.idea目录中不应当列入版本控制的文件，我们只需要根据实际需要提交展示出来的文件。</p><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ul><li><a href="/2018/12/12/switch-to-idea-0/">为什么进行切换</a></li><li><a href="/2018/12/13/switch-to-idea-1/">切换的基本操作</a></li><li><strong>传统Web项目在IDEA的Project Structure</strong></li><li><a href="/2019/08/03/switch-to-idea-3/">传统Web项目转为Gradle项目</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要介绍如何将传统Web项目（不使用Maven、Gradle等构建工具，jar包等全部手工配置）从Eclipse转换到IDEA。主要内容为传统项目的Project Structure配置。&lt;br&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="IDEA" scheme="https://plusnan.me/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>作为非计算机专业的学生，如果只想考试及格以及过二级，如何学习C语言</title>
    <link href="https://plusnan.me/2019/01/13/how-to-learn-c/"/>
    <id>https://plusnan.me/2019/01/13/how-to-learn-c/</id>
    <published>2019-01-12T16:00:00.000Z</published>
    <updated>2019-02-08T13:08:30.191Z</updated>
    
    <content type="html"><![CDATA[<p>在学校上学的时候，曾经就这个问题专门给学弟们做过讲座，并且总结成了一篇文章。为了造福后辈，帮助后辈争取早日脱单，这里把以前写的内容修改一下发表出来，毕竟C语言课通常大一开，而且大一是提升妹子好感度，<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL2Jhbmd1bWkvbWVkaWEvbWQ0MTg4Lw==" title="https://www.bilibili.com/bangumi/media/md4188/">与其约会，使其娇羞<i class="fa fa-external-link"></i></span>的关键时期。</p><a id="more"></a><p>说实话，现代人都比较功利——既然是非计算机专业的学生，那么C语言基本上是个用不着的东西。可是，它还是门必修课，那最起码不能挂科，对吧？</p><p>内容很长，最好找个时间慢慢读。</p><h1 id="FIRST"><a href="#FIRST" class="headerlink" title="FIRST"></a>FIRST</h1><p>稍微了解一下C语言的历史，你就应该知道那个东西绝不是给孩子们入门用的——一开始它的应用是Unix操作系统，尽管创造Unix操作系统最初的目的是为了玩个<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kv5pif6ZmF5peF6KGMXygxOTY55bm05ri45oiP" title="https://zh.wikipedia.org/wiki/星际旅行_(1969年游戏">游戏<i class="fa fa-external-link"></i></span>)。</p><p>从这个角度讲，对于非计算机专业的学生来说，Pascal甚至Basic都比C语言靠谱。因为C语言对于他们而言过于灵活，暴露了很多让初学者迷惑的东西。而Pascal和Basic都很简单，而且Visual Basic还很好玩。</p><p>当然，虽然VB又简单又好玩，但是我们的老师成功地把VB讲成了一个比C语言还困难的语言，而且不是因为内容深，而是讲得不好。由此可见，<strong>编程语言学不好可能是门没入对</strong>。</p><p>很多人喜欢看清华大学出版社的谭浩强的书。但是请注意，虽然出版社名字带着“清华大学”四个字，但是这家出版社的书都是垃圾。清华大学出版社的书不仅无法把东西讲明白，而且还误导人（谭浩强书中甚至有根本跑不通的示例程序），拉低了清华大学学术水平的下限。因此大家不要买清华出版社的书，已经买的建议考虑扔掉或者送给关系不好的人。</p><p>如果有闲功夫的话，可以拜读一下C语言之父Dennis Ritchie（dmr）的《C程序设计语言》。这本入门书比大多数国产C语言书薄，但是是一部经典。毕竟是C语言亲爹写的。</p><h1 id="如何学习"><a href="#如何学习" class="headerlink" title="如何学习"></a>如何学习</h1><p>回答“只要多努力……”、“只要多练习……”当然没有意义，所以下面写一些个人经验。</p><p>注意，本文有一个前提——“非计算机专业”。因此我假设学完C语言基本上是为了通过考试和二级。</p><h2 id="新思维"><a href="#新思维" class="headerlink" title="新思维"></a>新思维</h2><p>大学每一科目都有自己的思维方式，C语言也一样。</p><p>C语言作为一门“语言”，当然有自己的语法，只不过是人类和机器约定好的、互相都能看得懂的语法。人类可以一目十行，但是对于机器而言，它只能一行一行地读、一句一句地读。</p><p>如果把每一条语句当作一件事儿，那么计算机当然是有条不紊地做事儿。写代码的时候，你当然也要一件事儿一件事儿地做。</p><p>因为我们学的是简单的单文件的C语言，所以实际上代码结构基本都是这样的：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 输入</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理</span></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 输出</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意上面有“输入”、“处理”和“输出”三个阶段。做题的时候（编写练习程序和做题类似），我们需要按照题目要求逐步完善这三个阶段的内容，或者说按照题目要求填坑。至于能不能填上，就看你积累了多少“段子”——这和多做数学题积攒解题思路是差不多的。</p><p>填坑的时候有一个技巧：如果遇到困难，尽量先把题目的语言翻译成“像C语言的东西”。例如，“判断n是否为XX数，如果是则输出YES和全部的xxx，否则输出‘NO’”。那么首先应该能够想到，“判断”是if，因此：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (n是XX数)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">    <span class="comment">// 输出全部的xxx</span></span><br><span class="line">    <span class="built_in">printf</span>(全部xxx);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那什么是“XX数”呢？看题目其他条件，例如“一个数恰好等于因子之和”，那么if语句应该是</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (n == n的因子之和)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>“因子”之和怎么求呢？按照以往的练习，因子是用for语句找的，所以在if之前最起码得有个for语句：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (i是因子)</span><br><span class="line">    &#123;</span><br><span class="line">        sum=sum+i;    <span class="comment">// 不要忘记前面 sum=0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (n == sum)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>“是因子”实际上就是整除，即“n%i==0”。</p><p>假如题目还需要输出所有因子，那么我们不妨在找因子的时候把类似代码再敲一遍。因为我们是应付考试，不是参加ACM比赛，倒不需要太追求性能。</p><p>最后检查一下输入输出格式，把细节完善（见后面的“一一对应”），然后测试、调试，一切OK就可以提交了。如果考试是笔试，实在遇到困难，也可以用类似方法骗分。</p><h2 id="先问搜索引擎"><a href="#先问搜索引擎" class="headerlink" title="先问搜索引擎"></a>先问搜索引擎</h2><p>问问题是一门艺术。在错误的时间、错误的地点找错误的人问了错误的问题，那是要失败的。</p><p>学习编程会遇到很多问题，例如不会搭建开发环境、忘记某个函数的名字或参数、遇到错误，这时候不建议马上去问别人。不妨先自己尝试解决，如果解决不了，再到搜索引擎上搜索。</p><p>如果不会使用搜索引擎，可以看下图的操作说明（图片来自网络）：</p><p><img src="/img/2019-01-13-how-to-learn-c/baidu.jpg" alt="百度使用说明"></p><p>因为大多数语言和框架（在开发项目时，从零开始是不理智的）是老外写的，对于某些问题，如果你用英文搜索，可能会更快得到结果。这时候你可能就要想办法找谷歌了（备注：必应也行，至少免翻墙）。</p><p>在技术方面的中文搜索中，百度和谷歌区别不太大。百度经常有误导人的推广，但是在技术话题上这个问题并不明显。</p><p>在英文搜素方面，百度几乎不可用。谷歌最好（直接与StackOverflow整合），如果在网络方面遇到困难，也可以考虑必应。当然，因为很多外国网站使用谷歌服务器来加速（CDN），所以点进链接后可能会卡半天不出内容。遭遇这种情况的话，你还是需要先把网络问题解决一下。</p><p>因为全世界就连那个没网（全国网站地址是10开头的IP）的北朝鲜都在使用C语言，因此搜C语言本身的东西不会遇到太大困难。</p><h2 id="照猫画虎"><a href="#照猫画虎" class="headerlink" title="照猫画虎"></a>照猫画虎</h2><p>不要问别人“xxx怎么写”——照着书上的代码改，或者到搜索引擎上找代码，照着他们的代码改。</p><p>学习一门编程语言，很多时候找个老师不如<strong>找一段示例代码，照着敲一遍，编译运行，观察现象，然后对代码稍作修改，编译运行，观察产生了什么变化……</strong></p><p>需要注意的是，有些东西涉及算法（应该都是简单算法，不涉及数据结构），例如简单素数判断<span class="blackout">（素数测试有很多种）</span>。那么你需要找到一些现成的代码，搞清楚处理过程中哪些变量是输入、哪些是结果，了解大致的思路，然后自己写一遍。这种东西务必亲自上机写一遍，哪怕没有完全理解——光靠背是不现实的。</p><p>很多算法的套路是固定的，因此建议学过函数之后，自己编程的时候把它们都扔到函数里，例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_prime</span><span class="params">(<span class="keyword">int</span> number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">2</span>; i&lt;number; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (number % i == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在做作业的时候直接<code>is_prime(a)</code>判断（别忘了把函数实现拷到作业里头），既方便又避免出错。</p><h2 id="一一对应"><a href="#一一对应" class="headerlink" title="一一对应"></a>一一对应</h2><p>编程是个比较严谨的东西。初学者在写代码的时候，为了避免出错，要注意“一一对应”：</p><ul><li>解答题目的时候，你的代码是否和题目条件、输入输出格式要求对应？</li><li>该写分号的地方是否写分号了？</li><li>不该写分号的地方是不是没写？（例如for (…;…;…)的后面不应该写，如果故意要写，最好用个注释说明一下）</li><li>printf、scanf中的“%d”（或别的什么）是否和后面的变量一一对应？数量、类型都对应了吗？  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">float</span> b;</span><br><span class="line">             第二个%d对应后面的b</span><br><span class="line">            |------|</span><br><span class="line">            v      v</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %f"</span>, a, b);</span><br><span class="line">        ^       ^</span><br><span class="line">        |-------|</span><br><span class="line">         第一个%d对应后面的a</span><br></pre></td></tr></table></figure><ul><li>假如后面不是int类型，你前面是否还在用“%d”？</li></ul></li><li>scanf后面有没有“&amp;”？</li><li>int main()、if、while、for等的圆括号是否匹配？后面是否跟了“{”和“}”并且数量匹配？<ul><li>虽然if、while、for后面代码只有一句时可以省略花括号，但是强烈建议你不要偷这个懒。</li></ul></li><li>在使用变量的时候，前面是否已经定义了？（例如要scanf n了，前面是否有int n？按照题目要求是不是应该为int？）</li><li>在使用“++”、“—”、“+=”等符号的时候，前面是否已经初始化了（说白了就是有没有让它先等于0）？<ul><li>初始化的值和初始化的位置是否正确？比方说有的应该放到for前头，有的应该放到for后头……</li></ul></li><li>数组大小是否不比题目要求的小？<ul><li>为了安全，建议开大点。例如题目说最大100，你就开110甚至是11000。反正贪污和浪费内存不是极大的犯罪（by 毛泽西）。</li></ul></li><li>头文件都写全了吗？<ul><li>为了安全，可以把你听说过的标准库的头文件都写上。实际上ACM比赛经常有人把能想到的头文件全都写上，结果#include写得比后面的具体实现还长。</li></ul></li></ul><h2 id="多试验"><a href="#多试验" class="headerlink" title="多试验"></a>多试验</h2><p>别怕试验。多写一些小片段，看看那些代码是怎样运行的。</p><p>举个例子——for循环到底执行了多少次：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i=<span class="number">12</span>; i&lt;<span class="number">15</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"A"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"i=%d\n"</span>, i);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">12</span>; i&lt;=<span class="number">15</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"B"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"i=%d\n"</span>, i);</span><br></pre></td></tr></table></figure><p>scanf和gets的冲突：scanf和get紧挨着可能在输入数据时遇到问题，这时候需要一个小技巧……</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d\n"</span>, &amp;n);</span><br><span class="line">fgets(str, <span class="number">100</span>, <span class="built_in">stdin</span>);   <span class="comment">// 其实就是 gets(str) 的推荐写法</span></span><br><span class="line"><span class="built_in">puts</span>(str);                <span class="comment">// 如果那个scanf里没有“\n”，gets的时候……</span></span><br></pre></td></tr></table></figure><p>再举个例子（指针与一维数组）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[]=&#123;<span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">14</span>, <span class="number">16</span>, <span class="number">18</span>, <span class="number">20</span>, <span class="number">22</span>, <span class="number">24</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> *p = a;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a[<span class="number">0</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, &amp;a[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, p+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, *p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, *(p+<span class="number">1</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, *p+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为只是为了看个结果，所以，只要自己能把结果弄明白，怎么舒服怎么来。</p><p>当然有个重要前提——你手头得有个电脑。如果没有电脑，或者“大一不让带”，可以买个几百或一两千的Win10平板，比手机便宜，而且便于隐藏和携带，既可防导员查寝，又可带教室去开小差。</p><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>经常有人问“为什么我的代码结果不对”，然后贴上一段代码。这是非常令人讨厌的行为。</p><p>为了不被人鄙视，大家应该学一些调试的技巧。</p><p>作为非专业人士，与其学习那些复杂又难用的调试工具，不如学习又简单又实用的 printf。</p><p>printf有两大作用：定位错误、查看中间值。</p><p>假如程序崩溃了，可以这样调试：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> i, n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"准备读n\n"</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"准备读a\n"</span>);</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"开始处理\n"</span>);</span><br></pre></td></tr></table></figure><p>假如崩溃的时候屏幕上面只有“准备读n”而没有“准备读a”，说明中间夹着的scanf有问题；假如崩溃的时候有“准备读a”而没有“开始处理”，说明中间夹着的for有问题，这样你可以在for语句内部插入一些<code>printf(&quot;a\n&quot;)</code>，从而精确地找到错误的出处（例如，崩溃的时候看到10个a，说明数组开得不够大）。</p><p>如果计算结果不正确，可以这样调试（筛法求素数）：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i, num, isprime;</span><br><span class="line">isprime = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (num=<span class="number">2</span>; num&lt;<span class="number">10</span>; num++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">2</span>; i&lt;num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (num % i == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"DEBUG: %d不是素数(╯°Д°)╯︵ ┻━┻\n"</span>, num);</span><br><span class="line">            isprime = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"DEBUG: %d 是素数吗？%d\n"</span>, num, isprime);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isprime)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果只有2和3。通过观察调试输出，发现程序认为5不是素数。按理说，如果不是素数，屏幕会输出一个掀桌子的表情。然而程序认为5不是素数，但是还没有掀桌子表情，说明问题出在isprime变量上面——<code>isprime=1</code>的位置不对。</p><p>当然，交作业的时候别忘了把这种输出删掉。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>不要把测试和调试搞混。用一句话概括它们的区别：测试是为了观察“程序结果是否正确”，而调试是为了“找到程序的错误”。</p><p>很多初学者经常不做测试，或者不做充分的测试就提交，然后遇到问题就反复改，反复提交。这样也是不好的。</p><p>Online Judge网站就是测试的一种：系统预置了一系列数据和答案，按照题目要求解题、提交，系统会自动编译和运行代码，检查程序是否能在规定时间内处理预定输入并得到正确结果。在比赛中，错误提交是要影响成绩的，因此选手必须要学会自己测试，争取一次提交就通过。</p><p>程序编译通过之后，当然要用数据检验一下结果。如果把样例输入敲进去结果都不对，那程序肯定不行。</p><p>光通过样例也是不行的。为了保证通过，你应该自行构造多个输入，观察输出是否正确。应从以下几个角度构造数据：</p><ol><li>守规矩的计算</li><li>不守规矩的计算：如果题目没做保证，那么应假设有非法数据。假如题目没说a一定大于0，那你有没有想到a可以等于0或-1？</li><li>多种情况：假如程序有多种结果（Yes/No），你是否都测试到了？</li><li>边界条件：假如最多100个人，那么你的程序在恰好输入100个人的情况下能否正常工作？<ul><li>没有人或只有1个人呢？</li><li>稍微提一下，假如数组有100个元素（int a[100]），访问a[100]是非法的，但是在你自己电脑上不一定报错。这是一个隐藏的错误。为了避免这种错误，可以把数组开大一些，例如200甚至10000。</li></ul></li></ol><p>除此之外，初学者常常忽略的问题有空格（一个空格、两个空格、多个空格、行末空格）、回车（例如最后一行的回车）、字母大小写和符号全半角，还有不明显的格式差别（例如题目要求用逗号分隔你却用了空格）。因为测试是全文逐字比较的，所以不要犯这种低级错误。</p><h2 id="养成好习惯"><a href="#养成好习惯" class="headerlink" title="养成好习惯"></a>养成好习惯</h2><p>建议大家照做，因为这样可以避免很多不必要的错误：</p><ul><li>如果你不知道全角符号<code>，。、（）</code>和半角符号<code>,.\()</code>有什么区别，那么建议你写代码的时候把输入法关掉，免得出现莫名其妙的错误。</li><li>不同功能（定义变量、输入、数据处理、输出）之间留点空行，也就是按功能分块，就像前面提到的那样。</li><li>接上条，如果代码太长，那么最好多用一些函数，把各功能分离出来。写代码的时候一个功能一个功能地写。没有人喜欢又长又臭的代码。</li><li>缩进，一定要保持代码的缩进。没有缩进的代码难以理解，而且很有可能丢花括号，从而造成不必要的麻烦。</li><li>使用“黑科技”（不解释就难以理解）的时候要加注释。</li><li>if、for等语句后面可以不加花括号对吧？别懒，把花括号加上，免得犯这样的错误：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (a &gt; b)</span><br><span class="line">    c=a;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,c);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    c=b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,c);</span><br></pre></td></tr></table></figure><h1 id="如何通过二级"><a href="#如何通过二级" class="headerlink" title="如何通过二级"></a>如何通过二级</h1><p>这是也很多人关心的问题。虽然事实上计算机二级比英语六级容易通过（对于985、211的学生来说，只要英语三级也就是高考成绩不太烂，英语四级裸奔也能过……），但是很多人还是没通过。这不是他们不刻苦或者学得不好，而是因为他们不知道如何对付一个考证级别的考试。对，和英语四六级有着本质的区别。</p><p>首先用一句话概括通过计算机三级和四级的武林秘籍：去购买高等教育出版社的、封面上带个大大的黄色字母K的官方题库（不是教材），从头到尾把题刷一遍，该背的试题背下来，如果还没通过那你肯定是没好好背。</p><h2 id="基本内容"><a href="#基本内容" class="headerlink" title="基本内容"></a>基本内容</h2><p>虽然二级过了三四级成绩才能算数，但是，之所以先介绍三四级，是因为三四级比二级好过——三四级基本上可以纯背，但二级还是要会点东西的。下面就介绍介绍二级C语言：</p><ul><li>选择题40分，大题（改错、填空、编程）60分。</li><li>上机考试，先做选择题，选择题全部做完才能做大题。做选择的时候电脑屏幕是锁死的，做大题的时候才能使用编程软件。</li><li>题目是从题库里随机抽的，所以不要尝试照旁边的人抄。当然，运气好的话，你会碰到和官方教材中差不多的题。撞大题的概率更高。</li><li>选择题中至少有20~30分来自“二级公共语言基础”，这个“公共语言基础”大致分成两类，一类是“算法与数据结构”，需要你去理解一些东西；另一类不管它是啥，反正是纯粹要背的东西。剩下的选择题和C语言本身有关。</li><li>C语言课的东西够用了，关键是你对考试出题的基本法的了解程度。</li><li>编程软件是钦点的Visual C++ 6.0，虽然它是盗版的，虽然它很可能无法在你自己的电脑上正常运行。</li><li>二级考完只有三种状态：没通过（&lt;60分）、合格（60~89分）、优秀（90~100分）。因此，如果你不打算拿优秀证，考60和考89没有任何区别。（在这一点上，英语四六级就不一样——证书上面把成绩写出来了）</li><li>因为计算机二三四级证书都很水，因此，求职时如果应聘条件没有明确要求，不要指望拿这些证书给自己贴金。虽然二级可能是很多岗位的基本条件之一。</li><li>最后，如果你想考三四级，一定要看清楚对应科目对二级的要求——是要求通过编程语言类的二级还是数据库语言类的二级。如果你二级报的是Office那还是别考三四级了。</li></ul><h2 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h2><p>如果你觉得大题把握很大，而且没有拿优秀证的打算，那么“二级公共语言基础”的东西就可以少背一点了。反之要多背一些。</p><p>“算法和数据结构”是一个不太容易懂的东西——如果学得很好，没准就可以去打ACM比赛了。既然是个只需要拿60分的考证，那么不妨把官方教材拿出来，看看他们喜欢怎样出题，把相关考点记住即可。</p><p>有关C语言本身的选择题，实在不懂也不必太较真，因为它可能没有意义：例如经典的<code>a+=a-=a*a;</code>和<code>a=a++;</code>都是未定义行为——连C语言标准对这些语句的结果都没做任何保证，所以肯定没有正确答案。</p><h2 id="大题"><a href="#大题" class="headerlink" title="大题"></a>大题</h2><p>大题是一定要会的。如果你没有精心准备，选择题分数可能会惨不忍睹，因此大题要尽量把分数都弄到手。</p><p>为了把分数搞到手，我们要从两方面准备，一方面是正确解答题目，另一方面是正确地解答题目。</p><h3 id="正确解答题目"><a href="#正确解答题目" class="headerlink" title="正确解答题目"></a>正确解答题目</h3><p>大题分为改错、填空、编程。</p><p>改错就很简单了。因为改错的模式都比较固定，只要多看看官方的题目就应该清楚他们会怎样考了。</p><p>填空也一样。一般是让你填一些“单词”，或者是些简单的表达式。填空时候要多留意已经定义和未使用的变量。</p><p>其实吧，改错和填空题很多时候就是<strong>推理</strong>题——不用太清楚程序干嘛，只要保证所有变量都被用过了，该对应的地方都对应了，OK。</p><p>编程题要注意：数组、指针和字符串对于初学者来说比较难理解，对吧？不幸的是，出题人也爱考这些东西。因此，还是要看官方教材，看看他们喜欢怎样出题，并且建议你在做这些题的时候亲自上机练习一下。</p><h3 id="正确地解答题目"><a href="#正确地解答题目" class="headerlink" title="正确地解答题目"></a>正确地解答题目</h3><p>两个要点：一是不犯低级错误，二是要会用Visual C++ 6.0编辑代码。</p><p>不犯低级错误，举个例子，题目提示<code>只修改/******* FOUND *******/下一行的代码</code>，那么你不要改其他地方的代码，也不要把这个注释本身修改或删除。此外尽量不要碰原有代码的其他部分，例如空格和缩进。</p><p>Visual C++ 6.0是一个古老的软件了（1998年发布），在现代操作系统（Windows 8/8.1/10）中会出现兼容性问题，甚至无法启动。因此，平时在自己电脑上练习的时候可以使用其他编程软件，然后考前去一趟机房（学校机房应该安装了Visual C++ 6.0），学会如何打开和保存代码（考试软件会帮你打开代码）、如何找到<code>int main()</code>、如何编译运行。知道这些就足够了。</p><p><img src="/img/2019-01-13-how-to-learn-c/vc.png" alt="会点上面三个按钮就够了"></p><p>会点上面三个按钮就够了。</p><h1 id="拓展学习"><a href="#拓展学习" class="headerlink" title="拓展学习"></a>拓展学习</h1><p>对于非计算机专业的学生来说，尽管C语言很难学，尽管C语言<span class="blackout">看起来</span>“不实用”，但是很多编程语言的套路都是类似的，因此学完C语言有助于其他“实用”语言的学习。有些“实用”语言甚至直接向C语言致敬，例如PHP。</p><p>以下是一些当下很流行的、学起来可以“实用”的编程语言，如果有兴趣的话可以学一学。</p><ul><li>HTML+CSS+JavaScript：做网页的一套语言，虽然是三个，但是实际上哪个都不需要学得太深——一方面需要什么东西可以自己去查，另一方面现成框架太多了，很多时候用不着从零开始。我个人建议不要用Dreamweaver，即使用也要用最新的Dreamweaver CC，否则容易落伍。</li><li>PHP：想做个实用网站吗？学吧！就是它大量致敬了C语言的语法！<ul><li>由于PHP学习门槛很低，因此很容易写出有大量安全漏洞的网站。做项目时要多加小心。</li></ul></li><li>Python：Python是个小巧而又强大的脚本语言。建议有兴趣的一定要学。<ul><li>如果想写一个随写随用的程序，当然要找它；</li><li>如果想做一个实用的网站，同样可以找它——可以学习基于Python语言的Django框架；</li><li>如果想做一个带窗口对话框的程序，当然也可以找它——可以学习基于Python语言和Qt的PyQt框架。对于这种情况，建议同时学习PyQt和Qt C++。</li><li>Python有两种版本，一个是2.7，一个是3.6。它们两个有些差别，但是实际上不影响学习。遇到困难时到搜索引擎上搜一下就行了。</li></ul></li><li>Visual C#：C++和C#都带个“C”，那它们当然是从C语言衍生过来的……学C语言写不出一个带窗口对话框的程序对吧，没关系，我们可以用一个好学的Visual C#，随手画个窗口出来！</li><li>Qt C++：同样是用来制作带窗口对话框程序的，只不过这个是C++语言。</li><li>Java：会写Java至少能混口饭吃，而且现在很多业务系统和Android应用都是拿Java写的。</li><li>Objective-C：iOS应用是拿这个语言写的（备注：现在已经换成Swift，所以不用学Objective-C了），只不过进App Store的门槛有点高。</li><li>MATLAB：数值计算、数值模拟必备。一定先把高等数学和线性代数学好然后再学这个……</li></ul><p>我不推荐Pascal和Basic，前者用的人数不多，后者……VB6也是1998年的东西，在现在的系统中已经不能正常运行了，而且学新版VB不如学C#。</p><p>另外还有两个硬件（小心，玩硬件烧钱）：</p><ul><li>Arduino：Arduino是一个卡片大小的开发板（如果不知道开发板是啥——就是可以让你拿来写程序的电路板），编程的时候基本上就是C或C++。与电路相关的东西都是封装好的，可以直接调用函数，所以不会一开始就被一些细枝末节困扰。虽然玩51单片机（备注：51单片机通常是STC产的，其<span class="exturl" data-url="aHR0cDovL3d3dy5zdGNtY3UuY29t" title="http://www.stcmcu.com">官网<i class="fa fa-external-link"></i></span>和牛皮癣小广告有一拼）的人更多，但是我觉得从Arduino入门会容易很多。深入之后也可以考虑玩STM32之类的单片机。</li><li>树莓派：树莓派是一个卡片大小的单板电脑。虽然设计者的定位是儿童电脑，不过实际上被极客当成高级玩具了。最新的树莓派3可以跑Linux和Windows 10（物联网版）系统，对物联网感兴趣的可以玩玩。</li></ul><p>我个人的学习建议：</p><ol><li>尽量找外文书的中译本，原因很简单，翻译一本书需要付出大量时间精力，因此能够被拿来翻译的书基本上都是好书。<span>因为写书很容易，因此国内很容易出烂书。外国的月亮也不圆——外国也一样。</span></li><li>把书粗读一遍，大致了解一下基本语法。很多语言的基本结构都差不多，只不过单词不一样罢了。</li><li>细读，看看（特别是翻译本那种）作者的思想和思路。</li><li>照着教材做个小练习。</li><li>不用强求把所有东西都记住。现在网络那么发达，甚至手机流量都不需要省着用，有问题可以直接去网上查。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在学校上学的时候，曾经就这个问题专门给学弟们做过讲座，并且总结成了一篇文章。为了造福后辈，帮助后辈争取早日脱单，这里把以前写的内容修改一下发表出来，毕竟C语言课通常大一开，而且大一是提升妹子好感度，&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL2Jhbmd1bWkvbWVkaWEvbWQ0MTg4Lw==&quot; title=&quot;https://www.bilibili.com/bangumi/media/md4188/&quot;&gt;与其约会，使其娇羞&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;的关键时期。&lt;/p&gt;
    
    </summary>
    
    
      <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
      <category term="C" scheme="https://plusnan.me/tags/C/"/>
    
  </entry>
  
</feed>
