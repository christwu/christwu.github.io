<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>infNaN</title>
  
  
  <link href="/rss.xml" rel="self"/>
  
  <link href="https://plusnan.me/"/>
  <updated>2020-05-22T08:38:30.452Z</updated>
  <id>https://plusnan.me/</id>
  
  <author>
    <name>infNaN</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在macOS Catalina系统运行osu!</title>
    <link href="https://plusnan.me/2020/05/01/osu-on-mbp/"/>
    <id>https://plusnan.me/2020/05/01/osu-on-mbp/</id>
    <published>2020-04-30T16:00:00.000Z</published>
    <updated>2020-05-22T08:38:30.452Z</updated>
    
    <content type="html"><![CDATA[<p>如果有个Mac，而且不想切换双系统，也不想开虚拟机，如何在Mac系统运行osu？</p><a id="more"></a><h1 id="方案一：osu-lazer"><a href="#方案一：osu-lazer" class="headerlink" title="方案一：osu!lazer"></a>方案一：osu!lazer</h1><p>osu!lazer是osu的开源版本。peppy的计划是重新开发osu，待全部稳定之后便取代原版。尽管该计划已经咕了好几年，从未达到取代原版的程度，但是大体上已经可以玩了，而且目前lazer版已支持Linux、Mac、Android、iOS等系统。</p><p>可以通过brew安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install osu-development</span><br></pre></td></tr></table></figure><p>手工下载的话，下载地址为<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3BweS9vc3UvcmVsZWFzZXM=">https://github.com/ppy/osu/releases<i class="fa fa-external-link-alt"></i></span>，其中的osu.app.zip就是Mac版。下载之后解压，然后将osu.app拖动到“应用程序”中即可。</p><h2 id="与稳定版主要区别"><a href="#与稳定版主要区别" class="headerlink" title="与稳定版主要区别"></a>与稳定版主要区别</h2><ul><li>界面风格变化很大。</li><li>目前不太支持自定义皮肤。</li><li>游戏结果不计入个人Profile。</li><li>Editor功能不完善。</li><li>联机功能还不太灵活，需要事先把曲子选好，中途不能换。</li><li>osu!direct现在免费开放，不用捐钱即可使用。</li></ul><h2 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h2><p>osu不走代理，所以在中国登录账号或者使用osu!direct时网速会很慢，需要安装Proxifier让应用强制走代理。配置规则时，应用名为<code>osu!</code>。</p><h1 id="方案二：稳定版，懒人包（推荐）"><a href="#方案二：稳定版，懒人包（推荐）" class="headerlink" title="方案二：稳定版，懒人包（推荐）"></a>方案二：稳定版，懒人包（推荐）</h1><p>有人已经把Wineskin、wine32on64和osu封装好，做成了懒人包，前往论坛下载（<span class="exturl" data-url="aHR0cHM6Ly9vc3UucHB5LnNoL2NvbW11bml0eS9mb3J1bXMvdG9waWNzLzY4MjE5Nz9zdGFydD03MzY3MjM5">下载地址<i class="fa fa-external-link-alt"></i></span>）即可。下载完成后，解压，再将 osu!.app 移动到应用程序中即可。</p><h2 id="第一次启动"><a href="#第一次启动" class="headerlink" title="第一次启动"></a>第一次启动</h2><p>第一次启动之前，需要重启电脑，并在开机时按住<kbd>Command+R</kbd>，进入Recovery模式关闭SIP，否则 wine 无法启动。</p><p>在Recovery模式操作步骤如下：</p><ol><li>登录</li><li>点击“实用工具”菜单中的“终端”</li><li>输入以下命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">csrutil <span class="built_in">disable</span></span><br></pre></td></tr></table></figure></li><li>重启电脑</li></ol><h3 id="如果有强迫症，不想关闭SIP"><a href="#如果有强迫症，不想关闭SIP" class="headerlink" title="如果有强迫症，不想关闭SIP"></a>如果有强迫症，不想关闭SIP</h3><p>如果不想关闭SIP，那么也可以修改内核启动参数。</p><p>也是进入Recovery模式，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvram boot-args=<span class="string">"no32exec=0"</span></span><br></pre></td></tr></table></figure><p>如果在主系统修改，那么需要把SIP关掉，否则会提示<code>nvram: Error setting variable -&#39;boot-args&#39;: (iokit/common) not permitted</code>。</p><h2 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h2><p>每次启动都会Crash，然后每次都要重新检查update。不想被中国网络卡到抓狂的话需要挂个Proxifier，强制让osu走代理。</p><h1 id="方案三：手工安装（不推荐）"><a href="#方案三：手工安装（不推荐）" class="headerlink" title="方案三：手工安装（不推荐）"></a>方案三：手工安装（不推荐）</h1><p>因为涉及wine，所以配置会很麻烦。强烈建议不要手工安装，除非你喜欢像折腾Linux一样折腾Mac。</p><p>不过，幸亏用的是Mac系统，所以不涉及没声音（缺少libalsa等库）、中日韩文字无法显示（缺字体）等问题。</p><h2 id="CrossOver-Stable-Fallback"><a href="#CrossOver-Stable-Fallback" class="headerlink" title="CrossOver + Stable-Fallback"></a>CrossOver + Stable-Fallback</h2><p>安装步骤如下：</p><h3 id="第一步：安装CrossOver"><a href="#第一步：安装CrossOver" class="headerlink" title="第一步：安装CrossOver"></a>第一步：安装CrossOver</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install crossover</span><br></pre></td></tr></table></figure><p>如果<span class="exturl" data-url="aHR0cHM6Ly93d3cuY29kZXdlYXZlcnMuY29t">从官网下载<i class="fa fa-external-link-alt"></i></span>，那么务必挂个梯子，让自己变外国IP，然后再把浏览器语言设置成外国话，否则官网会强制跳转到臭名昭著的思杰马克丁的界面。想购买正版，或者想通过买正版来为Wine项目捐款的人更要注意这一点，否则钱就让马克丁给黑掉了。</p><p>CrossOver试用期过期的话，只要：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -f ~/Library/Preferences/com.codeweavers.CrossOver.plist</span><br></pre></td></tr></table></figure><p>试用期就会重新变回14天。</p><p>或者修改这个文件，将FirstRunDate改成9102年，然后就可以无限期试用了。</p><h3 id="第二步：新建容器"><a href="#第二步：新建容器" class="headerlink" title="第二步：新建容器"></a>第二步：新建容器</h3><p>需要安装 .Net Framework 4.0 或更高版本。不过，并不是所有版本都能装得上，例如在我个人电脑上，4.5和4.7的安装程序都会永远卡死，原因不明。</p><p>后面假设容器名称为<code>osu</code>，容器所在目录为<code>~/Library/Application Support/CrossOver/Bottles/osu</code>。</p><h3 id="第三步：安装osu"><a href="#第三步：安装osu" class="headerlink" title="第三步：安装osu"></a>第三步：安装osu</h3><p><span class="exturl" data-url="aHR0cHM6Ly9vc3UucHB5LnNoLw==">从官网下载<i class="fa fa-external-link-alt"></i></span>。直接启动安装程序是起不来的，而且不出现任何画面。需要加环境变量<code>LC_ALL=C</code>之后安装程序才能正常启动。</p><p>把安装程序放在“下载”目录，然后去终端输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WINEPREFIX=<span class="string">"<span class="variable">$HOME</span>/Library/Application Support/CrossOver/Bottles/osu"</span> LC_ALL=C /Applications/CrossOver.app/Contents/SharedSupport/CrossOver/bin/wineloader32on64 winewrapper.exe --new-console --start -- ~/Downloads/osu\!install.exe</span><br></pre></td></tr></table></figure><p>因为在中国下载文件很慢，而且后面要改配置、重新下载，所以不用等安装全部完成。感觉差不多了就可以直接叉掉安装程序。</p><h3 id="第四步：切换成旧版"><a href="#第四步：切换成旧版" class="headerlink" title="第四步：切换成旧版"></a>第四步：切换成旧版</h3><p>太新的版本是跑不起来的，会在显卡驱动方面报错，提示<code>osu! was unable to obtain a graphics context</code>。因此，你需要修改<code>osu!.cfg</code>，让它重新安装旧版：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="string">"<span class="variable">$HOME</span>/Library/Application Support/CrossOver/Bottles/osu/drive_c/users/crossover/Local Settings/Application Data/osu\!/osu\!.cfg"</span></span><br></pre></td></tr></table></figure><p>将</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_ReleaseStream &#x3D; Stable40</span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_ReleaseStream &#x3D; Stable</span><br></pre></td></tr></table></figure><h3 id="第五步：启动-osu"><a href="#第五步：启动-osu" class="headerlink" title="第五步：启动 osu!"></a>第五步：启动 osu!</h3><p>修改完成后，重新启动 osu!</p><p>这次可以直接在CrossOver的“运行命令”中启动osu，并将启动方式保存下来。路径为<code>drive_c/users/crossover/Local Settings/Application Data/osu!/osu!.exe</code>。</p><p>启动osu之后，系统会自动重新下载各个文件。然而，有两个文件体积比较大，分别在30MB左右，而且中国网络比较卡，所以会需要很长时间。如果卡半天下不动，可选择把别人装好的内容拷到自己电脑上（注意里面需要包含类似<code>osu!ui.dll</code>的文件），放到<code>~/Library/Application Support/CrossOver/Bottles/osu/drive_c/users/crossover/Local Settings/Application Data/osu!</code>。</p><p>或者也可以安装Proxifier，让<code>wineloader32on64</code>进程强制走代理。</p><h3 id="第六步：应用设置"><a href="#第六步：应用设置" class="headerlink" title="第六步：应用设置"></a>第六步：应用设置</h3><p>进入osu之后，你需要立刻修改分辨率设置，将其改成屏幕一半，例如15寸MacBook Pro需要改成1680x1050，否则操作起来会不正常（例如界面卡死、数位板只能划到屏幕一半等）。</p><h3 id="第七步：导入曲包、皮肤"><a href="#第七步：导入曲包、皮肤" class="headerlink" title="第七步：导入曲包、皮肤"></a>第七步：导入曲包、皮肤</h3><p>在CrossOver使用“运行命令”时，点击“将指令保存到面板”按钮，CrossOver会为osu生成一个app。记下这个app的位置。</p><p>右击osz、osk文件，选择“打开方式”、“其它”。下方“启用”选择“所有应用程序”，并勾选“始终以此方式打开”，然后找到刚才生成的app，即可直接通过双击导入曲包和皮肤了。</p><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>因为版本太老，成绩同样不会计入Profile。</p><h2 id="魔改版Wine-Stable"><a href="#魔改版Wine-Stable" class="headerlink" title="魔改版Wine + Stable"></a>魔改版Wine + Stable</h2><p>在CrossOver搞出了wine32on64这种东西之后，有人把它提取了出来，整合到了其他的wine中。</p><p>基于魔改版Wine的配置步骤如下：</p><h3 id="第一步：关闭SIP-修改内核参数"><a href="#第一步：关闭SIP-修改内核参数" class="headerlink" title="第一步：关闭SIP / 修改内核参数"></a>第一步：关闭SIP / 修改内核参数</h3><p>重启电脑，并在开机时按住<kbd>Command+R</kbd>，进入Recovery模式关闭SIP。在Recovery模式中，操作步骤如下：</p><ol><li>登录</li><li>点击“实用工具”菜单中的“终端”</li><li>输入以下命令（二选一，推荐用nvram那个）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">csrutil <span class="built_in">disable</span></span><br></pre></td></tr></table></figure>或<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvram boot-args=<span class="string">"no32exec=0"</span></span><br></pre></td></tr></table></figure></li><li>重启电脑。</li></ol><h3 id="第二步：下载魔改版Wine"><a href="#第二步：下载魔改版Wine" class="headerlink" title="第二步：下载魔改版Wine"></a>第二步：下载魔改版Wine</h3><p>前往<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0djZW54L1dpbmVza2luU2VydmVyL3JlbGVhc2Vz">https://github.com/Gcenx/WineskinServer/releases<i class="fa fa-external-link-alt"></i></span>，下载<code>WS11WineCX19.0.1.tar.7z</code>，随便找个地方解压，例如<code>~</code>。</p><p>在Finder中进入<code>~/wswine.bundle/bin</code>（wswine.bundle需要右击，然后点击“显示包内容”才能进去），挨个按Control键启动一下，触发一下“是否允许启动”的警告，否则Mac系统会拒绝运行这几个程序。</p><p>初始化环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> WINEPREFIX=~/.wine</span><br><span class="line"><span class="built_in">export</span> WINEARCH=win32</span><br><span class="line"><span class="built_in">export</span> WINE=wine32on64</span><br><span class="line"><span class="built_in">export</span> PATH=~/wswine.bundle/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>初始化一下wine：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wine32on64 taskmgr</span><br></pre></td></tr></table></figure><h3 id="第三步：安装并配置winetricks"><a href="#第三步：安装并配置winetricks" class="headerlink" title="第三步：安装并配置winetricks"></a>第三步：安装并配置winetricks</h3><p>在上面终端的基础上继续执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install winetricks</span><br><span class="line">winetricks dotnet45</span><br></pre></td></tr></table></figure><p>程序会先安装.Net Framework 4.0，然后再安装4.5。4.0可以正常安装，但是在我电脑上，4.5安装程序会卡进度条。这时候可以稍微等一会，然后再开个终端，用<code>wine32on64 taskmgr</code>启动任务管理器，把Setup.exe、ngen.exe、mscorsvw.exe几个进程直接杀掉。</p><p>经过测试，发现一件神奇的事情：尽管4.5未能成功安装，但是只安装4.0，不让4.5安装程序卡进度条的话，osu是启动不了的。</p><h3 id="第四步：安装osu"><a href="#第四步：安装osu" class="headerlink" title="第四步：安装osu!"></a>第四步：安装osu!</h3><p><span class="exturl" data-url="aHR0cHM6Ly9vc3UucHB5LnNoLw==">从官网下载安装程序<i class="fa fa-external-link-alt"></i></span>。假设放到<code>~/Downloads</code>，继续执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wine32on64 ~/Downloads/osu\!install.exe</span><br></pre></td></tr></table></figure><p>同样要挂Proxifier，强制让wine走代理，否则下载速度非常慢。</p><h3 id="第五步：启动"><a href="#第五步：启动" class="headerlink" title="第五步：启动"></a>第五步：启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wine32on64 ~/.wine/drive_c/users/crossover/Local\ Settings/Application\ Data/osu\!/osu\!.exe</span><br></pre></td></tr></table></figure><p>下载完成后就可以正常玩了。因为每次敲命令太麻烦，可以在自己的<code>~/.bashrc</code>或<code>~/.zshrc</code>等配置文件（根据自己所用shell设置）增加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> WINEPREFIX=~/.wine</span><br><span class="line"><span class="built_in">export</span> WINEARCH=win32</span><br><span class="line"><span class="built_in">export</span> WINE=wine32on64</span><br><span class="line"><span class="built_in">export</span> PATH=~/wswine.bundle/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">alias</span> osu=<span class="string">"wine32on64 <span class="variable">$HOME</span>/.wine/drive_c/users/crossover/Local Settings/Application Data/osu\!/osu\!.exe"</span></span><br></pre></td></tr></table></figure><p>下次进入终端时，输入<code>osu</code>即可启动。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><span class="exturl" data-url="aHR0cHM6Ly9vc3UucHB5LnNoL2NvbW11bml0eS9mb3J1bXMvdG9waWNzLzY4MjE5Nw==">https://osu.ppy.sh/community/forums/topics/682197<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0djZW54L1dpbmVza2luU2VydmVy">https://github.com/Gcenx/WineskinServer<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9hcHBkYi53aW5laHEub3JnL29iamVjdE1hbmFnZXIucGhwP3NDbGFzcz12ZXJzaW9uJmFtcDtpSWQ9MjgwMjU=">https://appdb.winehq.org/objectManager.php?sClass=version&amp;iId=28025<i class="fa fa-external-link-alt"></i></span></li></ul><h1 id="10-16还能运行不？"><a href="#10-16还能运行不？" class="headerlink" title="10.16还能运行不？"></a>10.16还能运行不？</h1><p>谁知道呢？</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果有个Mac，而且不想切换双系统，也不想开虚拟机，如何在Mac系统运行osu？&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="wine" scheme="https://plusnan.me/tags/wine/"/>
    
      <category term="osu!" scheme="https://plusnan.me/tags/osu/"/>
    
  </entry>
  
  <entry>
    <title>Web应用中文乱码实验（一）：乱码现象概述</title>
    <link href="https://plusnan.me/2020/03/15/luanma-1/"/>
    <id>https://plusnan.me/2020/03/15/luanma-1/</id>
    <published>2020-03-14T16:00:00.000Z</published>
    <updated>2020-05-22T06:45:54.263Z</updated>
    
    <content type="html"><![CDATA[<p>编码转换和乱码问题令人头大。在理清编码问题之前，需要先认识一下各种乱码的样子。</p><a id="more"></a><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>为方便讨论与理解，本系列文章会故意忽略一些不太要紧的细节，甚至把一些事情说错。要知道，有些事情吧，它确实不是那回事，但是，我们的目的不是写一篇内容准确的学术论文，而是识别出一些软件开发过程中的坑，免得在字符编码方面把自己绕进去，浪费时间，所以你当作是那回事就行了。</p><p>欲知乱码背后的真相，请用Google搜索其他资料，并且别忘了找一款二进制编辑器来观察文件内部编码。</p><h2 id="关于GB2312-GBK-GB18030"><a href="#关于GB2312-GBK-GB18030" class="headerlink" title="关于GB2312/GBK/GB18030"></a>关于GB2312/GBK/GB18030</h2><ul><li>中华人民共和国最新的国家标准是GB18030</li><li>先前所用标准是GB2312</li><li>另外一个不属于国家标准但常用的编码是GBK，相当于一个事实上的标准。</li></ul><p>由于这三个编码大体上是向下兼容的，在本系列文章中，我们会忽略<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzE5Njc3NjE5">它们的内部差异<i class="fa fa-external-link-alt"></i></span>，统一称为GBK。</p><h2 id="Java的默认编码"><a href="#Java的默认编码" class="headerlink" title="Java的默认编码"></a>Java的默认编码</h2><p>Java的默认编码比较坑，它和操作系统有关系。我们需要先按照以下方式来理解它的默认编码：</p><ul><li>Windows系统默认使用GBK编码，Java字符串内部也是GBK</li><li>Linux/Mac系统默认使用UTF-8编码，Java字符串内部同样是UTF-8</li></ul><p>以上只是一种理解方式。实际上，Java内部（版本9之前）使用UTF-16 LE存储字符串，而getBytes()时才会参考JVM启动参数<code>-Dfile.encoding</code>（没有的话就看操作系统环境），并且这个转换过程是透明的，我们感知不到。</p><h1 id="编码类型"><a href="#编码类型" class="headerlink" title="编码类型"></a>编码类型</h1><p>让我们看一下各种默认编码：</p><small style="letter-spacing: -1pt;">中国大陆标准是GBK；Linux系统/Mac系统通常使用UTF-8编码；（中国大陆的）Windows系统与程序通常使用GBK编码；Java内部使用UTF-16编码；在Windows中UTF-8还有带BOM头和不带BOM头的版本；在Linux/Mac系统中，可将Java内部存储的字符串视为UTF-8；在Windows系统中，需要将Java内部存储视为GBK；Tomcat默认使用ISO-8859-1编码；URL根据场合不同分别使用了GBK与UTF-8编码；MySQL默认使用latin1；日本Galgame经常使用Shift-JIS编码；emoji（表情符号😂）需要使用UTF-8编码……</small><p>以上看起来很乱，而且确实很乱——真·乱码。</p><p>为了避免字符编码的坑，**如果你的系统尚未投入正式开发，建议把所有编码都统一成UTF-8！</p><ul><li>另外需注意，MySQL是<code>utf8mb4</code>，不是那个有坑的<code>utf8</code>！</li></ul><p>如果系统已经上线，而且用了GBK编码，那就祈祷上线之前做过充分测试，然后用生僻字起名的人也没来找茬吧。</p><h1 id="如何理解乱码"><a href="#如何理解乱码" class="headerlink" title="如何理解乱码"></a>如何理解乱码</h1><h2 id="产生原因"><a href="#产生原因" class="headerlink" title="产生原因"></a>产生原因</h2><p>以“这是一段LuanMa乱码”为例。</p><p>用UTF-8编码（忽略BOM头）存储的话，文件内容是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">e8 bf 99 e6 98 af e4 b8 80 e6 ae b5 4c 75 61 6e 4d 61 e4 b9 b1 e7 a0 81</span><br><span class="line">-------- -------- -------- --------                   -------- --------</span><br><span class="line">   这       是        一       段    L  u  a  n  M  a     乱       码</span><br></pre></td></tr></table></figure><p>用GBK编码存储的话，文件内容是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d5 e2 ca c7 d2 bb b6 ce 4c 75 61 6e 4d 61 c2 d2 c2 eb</span><br><span class="line">----- ----- ----- -----                   ----- -----</span><br><span class="line">  这    是    一    段   L  u  a  n  M  a    乱    码</span><br></pre></td></tr></table></figure><p>如果内部是UTF-8，却按GBK编码处理，那么乱码就来了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">e8 bf 99 e6 98 af e4 b8 ...</span><br><span class="line">----- ----- ----- ----- </span><br><span class="line">  杩    欐    槸     涓   ...</span><br></pre></td></tr></table></figure><p>如果内部按GBK存储，却按UTF-8处理，结果也一样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">d5   e2   ca  c7  d2 bb  b6   ce  4c ...</span><br><span class="line">--   --   --  --  -----  --   --  -- </span><br><span class="line">错误 错误 错误 错误    һ   错误 错误  L</span><br></pre></td></tr></table></figure><p>其中的“错误”表示无法按编码规则解析，会变成黑色菱形问号<code>�</code>(<code>ef bf bd</code>)。出现黑菱形的时候，数据就已经被破坏了。</p><h2 id="回答两个问题"><a href="#回答两个问题" class="headerlink" title="回答两个问题"></a>回答两个问题</h2><p>在看到乱码时，问自己两个问题：</p><ul><li>【原始字符串】的内部存储用了什么编码？</li><li>看到乱码的时候，是【谁】按照【哪种编码】【解析】了字符串的内部存储？</li></ul><p>无论是读取、写入还是传输，只要碰到乱码，就用这两个问题来询问自己，然后事情就会清楚一些。</p><h2 id="一些案例"><a href="#一些案例" class="headerlink" title="一些案例"></a>一些案例</h2><p>举一些Java（在Linux/Mac上运行）的案例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String strNew = <span class="keyword">new</span> String(str.getBytes(<span class="string">"GBK"</span>), <span class="string">"UTF-8"</span>);</span><br></pre></td></tr></table></figure><ul><li>我们假设原始字符串str的内部存储用了GBK编码。</li><li>【我们】按【UTF-8编码】【解析】了字符串str的内部存储。这样解析是错的，所以当然会产生乱码，程序代码也不应该这样写。</li></ul><p>&nbsp;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String strNew = <span class="keyword">new</span> String(str.getBytes(<span class="string">"GBK"</span>), <span class="string">"GBK"</span>);</span><br></pre></td></tr></table></figure><ul><li>我们假设原始字符串str的内部存储用了GBK编码。</li><li>我们按【GBK编码】【解析】了字符串str的内部存储。<ul><li><em>这样解析是对的，但是有意义吗？有，在Linux系统中Java内部用UTF-8存储字符串，这样实际上就把GBK内部存储无损地转成UTF-8内部存储了。</em></li></ul></li></ul><p>&nbsp;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String strNew = <span class="keyword">new</span> String(str.getBytes(<span class="string">"ISO-8859-1"</span>), <span class="string">"UTF-8"</span>);</span><br></pre></td></tr></table></figure><ul><li>我们假设原始字符串str的内部存储用了ISO-8859-1编码。</li><li>【我们】按【UTF-8编码】【解析】了字符串str的内部存储，并保存到strNew中。<ul><li><em>理论上讲这样实现是错的，但是，由于用ISO-8859-1编码相当于使用原始的二进制存储，所以，只要原始二进制存储是按UTF-8存储的，这条语句就不会丢失数据，也不会产生乱码。</em></li></ul></li></ul><p>&nbsp;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.setCharacterEncoding(<span class="string">"GBK"</span>);</span><br></pre></td></tr></table></figure><ul><li>我们假设原始字符串（原始请求）的内部存储用了GBK编码。<ul><li><em>怎么用了GBK编码呢？<code>&lt;meta charset=&quot;GBK&quot;&gt;</code></em></li></ul></li><li>用户提交表单，向服务器发送请求时，让【request对象】按【GBK编码】【解析】原始请求。<ul><li><em>Tomcat呢？先假设它的配置是对的，没做过任何转换。</em></li></ul></li></ul><p>&nbsp;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.setCharacterEncoding(<span class="string">"GBK"</span>);</span><br></pre></td></tr></table></figure><ul><li>要求response在内部存储使用GBK编码。</li><li>要求浏览器按GBK解析请求返回结果的内部存储。</li></ul><p>&nbsp;</p><p>先这样理解，后续有机会再详细讨论这些事。</p><h1 id="乱码现象"><a href="#乱码现象" class="headerlink" title="乱码现象"></a>乱码现象</h1><p>我们再认识一下各种乱码的样子，以后看到乱码之后大概就能猜测乱码原因了。</p><p>原文：这是一段LuanMa乱码</p><h2 id="一次转换"><a href="#一次转换" class="headerlink" title="一次转换"></a>一次转换</h2><table><thead><tr><th>现象描述</th><th>内容</th><th>这说明原文的内部存储是哪种编码</th><th>按哪种编码解析了</th><th>乱码内容的内部存储</th><th>备注</th></tr></thead><tbody><tr><td>火星文</td><td>杩欐槸涓€娈礚uanMa涔辩爜</td><td>UTF-8</td><td>GBK</td><td>e8 bf 99 e6 98 af e4 b8 3f e6 ae b5 4c 75 61 6e 4d 61 e4 b9 b1 e7 a0 81</td><td>可以恢复大部分数据，但有损失（<code>3f</code>）</td></tr><tr><td>黑色菱形问号</td><td>����һ��LuanMa����</td><td>GBK</td><td>UTF-8</td><td>ef bf bd ef bf bd ef bf bd ef bf bd d2 bb ef bf bd ef bf bd 4c 75 61 6e 4d 61 ef bf bd ef bf bd ef bf bd ef bf bd</td><td><code>ef bf bd</code>即无法解析时产生的“无效码”，无法恢复数据</td></tr><tr><td>稀疏的拉丁字母</td><td>è¿æ¯ä¸æ®µLuanMaä¹±ç</td><td>UTF-8</td><td>ISO-8859-1</td><td>e8 bf 99 e6 98 af e4 b8 80 e6 ae b5 4c 75 61 6e 4d 61 e4 b9 b1 e7 a0 81</td><td>可以完整恢复数据</td></tr><tr><td>稠密的拉丁字母</td><td>ÕâÊÇÒ»¶ÎLuanMaÂÒÂë</td><td>GBK</td><td>ISO-8859-1</td><td>d5 e2 ca c7 d2 bb b6 ce 4c 75 61 6e 4d 61 c2 d2 c2 eb</td><td>可以完整恢复数据</td></tr><tr><td>问号</td><td>????LuanMa??</td><td>GBK / UTF-8</td><td>ISO-8859-1</td><td>3f 3f 3f 3f 4c 75 61 6e 4d 61 3f 3f</td><td>原始字符串就没有汉字，所以不可能恢复数据</td></tr></tbody></table><h2 id="二次转换（A→B→A）"><a href="#二次转换（A→B→A）" class="headerlink" title="二次转换（A→B→A）"></a>二次转换（A→B→A）</h2><p>在字符编码方面，“负负”叠加，结果不一定是“正”：</p><table><thead><tr><th>现象描述</th><th>内容</th><th>原始字符串的内部存储</th><th>你按哪种编码解析了</th><th>你又转换成了哪种编码</th></tr></thead><tbody><tr><td>锟斤拷</td><td>锟斤拷锟斤拷一锟斤拷LuanMa锟斤拷锟斤拷</td><td>GBK</td><td>UTF-8</td><td>GBK</td></tr><tr><td>丢个别文字</td><td>这是�?段LuanMa乱码</td><td>UTF-8</td><td>GBK</td><td>UTF-8</td></tr></tbody></table><p>出现“锟斤拷”，是因为按UTF-8编码规则，解析内部存储是GBK的字符串时，部分字节无法解析，程序按照规范将那些无法解析的字节换成了<code>ef bf bd</code>。再将这串内容转回GBK时，就变成了“锟”（GBK：<code>ef bf</code>）或者“锟斤拷”（GBK：<code>ef bf   bd ef   bf bd</code>）。</p><p>出现“？”同样是因为按GBK编码规则无法解析，结果用“?”（<code>3f</code>）替代了。</p><p>“锟斤拷”或“?”都说明信息已经丢失，就算手持两把锟斤拷，口中疾呼烫烫烫，原始数据也找不回来了。由此可见，处理UTF-8和GBK两种编码时，必须把原始字符串的编码弄对，否则互转会丢失信息。</p><h2 id="二次转换（A→B→B）"><a href="#二次转换（A→B→B）" class="headerlink" title="二次转换（A→B→B）"></a>二次转换（A→B→B）</h2><p>如果已经做过A→B的转换，你对此不知情，又做了一遍A→B的转换：</p><table><thead><tr><th>现象描述</th><th>内容</th><th>A→B中的A</th><th>A→B中的B</th></tr></thead><tbody><tr><td>火星文</td><td>鏉╂瑦妲告稉锟藉▓绀歶anMa娑旇京鐖�</td><td>UTF-8</td><td>GBK</td></tr><tr><td>???</td><td>???????LuanMa????</td><td>GBK</td><td>UTF-8</td></tr></tbody></table><p>可以看到，无论是ABA，还是ABB，二次转换都会让乱码更乱。</p><p>遇到乱码，我们应该要做的是理清“内部存储是哪种编码”和“用哪种编码解析的”，而不是粗暴地再进行一遍转码。</p><h1 id="不是乱码的乱码"><a href="#不是乱码的乱码" class="headerlink" title="不是乱码的乱码"></a>不是乱码的乱码</h1><p>还有一种乱码，俗称“麻将牌”，样式为一个方块里面写入了几个数字。这个不是乱码，而是电脑系统缺字体。</p><p>把字体装好之后，如果麻将牌变成了火星文，那么才是真乱码，后续按火星文处理方式处理即可。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><span class="exturl" data-url="aHR0cHM6Ly93d3cucnVhbnlpZmVuZy5jb20vYmxvZy8yMDEwLzAyL3VybF9lbmNvZGluZy5odG1s">关于URL编码<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly9nZXJtaW5hdGUuZ2l0aHViLmlvLzIwMTYvR0JLJUU0JUI4JThFVVRGLTglRTclQkMlOTYlRTclQTAlODElRTklOTQlOTklRTglQUYlQUYlRTglQkQlQUMlRTYlOEQlQTIlRTUlOTAlOEUlRUYlQkMlOEMlRTYlOTclQTAlRTYlQjMlOTUlRTYlODElQTIlRTUlQTQlOEQv">GBK与UTF-8编码错误转换后，无法再正确恢复<i class="fa fa-external-link-alt"></i></span></li></ul><h1 id="本系列文章"><a href="#本系列文章" class="headerlink" title="本系列文章"></a>本系列文章</h1><ul><li><strong>乱码现象概述</strong></li><li>URL中文乱码测试</li><li>Tomcat中文乱码测试</li><li>MySQL中文乱码测试</li><li>补救措施</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;编码转换和乱码问题令人头大。在理清编码问题之前，需要先认识一下各种乱码的样子。&lt;/p&gt;
    
    </summary>
    
    
      <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
      <category term="乱码" scheme="https://plusnan.me/tags/%E4%B9%B1%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>使用脚本快速从本地提取、替换生产服务器class文件</title>
    <link href="https://plusnan.me/2020/03/02/quick-replace-file/"/>
    <id>https://plusnan.me/2020/03/02/quick-replace-file/</id>
    <published>2020-03-01T16:00:00.000Z</published>
    <updated>2020-05-04T15:53:02.104Z</updated>
    
    <content type="html"><![CDATA[<p>生产环境遇到bug，需要紧急修改几个Java文件，然后尽快部署到生产系统中。如果代码中混有其他改动，无法完整打包，那么如何尽快提取出改完的class文件并快速地放到服务器的正确位置呢？</p><a id="more"></a><h1 id="从本机提取文件"><a href="#从本机提取文件" class="headerlink" title="从本机提取文件"></a>从本机提取文件</h1><p>先在自己的IDE中把代码改出来，编译，运行。避免打WAR包，否则还要费心思解压，而且有些系统（例如Mac）解出来之后时间戳还不对。</p><p>重新生成的class文件的修改时间肯定比其他class文件新，这样我们就能用一些脚本将它们挑出来了。</p><h2 id="Windows系统"><a href="#Windows系统" class="headerlink" title="Windows系统"></a>Windows系统</h2><p>使用PowerShell脚本。放在 D:\tiqu.ps1 中：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">[<span class="type">CmdletBinding</span>()]</span><br><span class="line"><span class="keyword">Param</span> (</span><br><span class="line">    [<span class="built_in">string</span>] </span><br><span class="line">    <span class="variable">$from</span> = <span class="string">'.'</span>, </span><br><span class="line"></span><br><span class="line">    [<span class="built_in">string</span>]</span><br><span class="line">    <span class="variable">$to</span> = <span class="string">'..\output'</span>,</span><br><span class="line"></span><br><span class="line">    [<span class="type">AllowNull</span>()]</span><br><span class="line">    [<span class="built_in">string</span>]</span><br><span class="line">    <span class="variable">$time</span>,</span><br><span class="line"></span><br><span class="line">    [<span class="type">AllowNull</span>()]</span><br><span class="line">    [<span class="built_in">int</span>]</span><br><span class="line">    <span class="variable">$min</span>,</span><br><span class="line"></span><br><span class="line">    [<span class="built_in">int</span>]</span><br><span class="line">    <span class="variable">$flat</span> = <span class="number">0</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$time</span>) &#123;</span><br><span class="line">    <span class="variable">$minTime</span> = [<span class="built_in">DateTime</span>]::ParseExact(<span class="variable">$time</span>, <span class="string">'hh:mm'</span>, <span class="variable">$null</span>)</span><br><span class="line">&#125; <span class="keyword">elseif</span> (<span class="variable">$min</span>) &#123;</span><br><span class="line">    <span class="variable">$minTime</span> = (<span class="built_in">Get-Date</span>).AddMinutes(-<span class="variable">$min</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$minTime</span> = [<span class="built_in">DateTime</span>]::ParseExact(<span class="string">'00'</span>, <span class="string">'hh'</span>, <span class="variable">$null</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建文件夹</span></span><br><span class="line"><span class="built_in">New-Item</span> <span class="literal">-Path</span> <span class="variable">$to</span> <span class="literal">-ItemType</span> Directory <span class="literal">-Force</span> | <span class="built_in">Out-Null</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 搜索文件</span></span><br><span class="line"><span class="built_in">Push-Location</span> <span class="variable">$from</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$fileList</span> = <span class="built_in">Get-ChildItem</span> <span class="literal">-Path</span> . <span class="literal">-Recurse</span> | ? &#123;<span class="variable">$_</span>.LastWriteTime <span class="operator">-gt</span> <span class="variable">$minTime</span>&#125;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$file</span> <span class="keyword">in</span> <span class="variable">$fileList</span>) &#123;</span><br><span class="line">    <span class="variable">$relativePath</span> = <span class="built_in">Resolve-Path</span> <span class="literal">-Path</span> <span class="variable">$file</span>.FullName <span class="literal">-Relative</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$flat</span> <span class="operator">-eq</span> <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment"># 保持目录结构</span></span><br><span class="line">        <span class="built_in">Write-Output</span> <span class="variable">$relativePath</span></span><br><span class="line">        <span class="variable">$newPath</span> = <span class="built_in">Join-Path</span> <span class="literal">-Path</span> <span class="variable">$to</span> <span class="literal">-ChildPath</span> <span class="variable">$relativePath</span></span><br><span class="line">        <span class="variable">$newDir</span> = <span class="built_in">Split-Path</span> <span class="literal">-Path</span> <span class="variable">$newPath</span></span><br><span class="line">        <span class="built_in">New-Item</span> <span class="literal">-Path</span> <span class="variable">$newDir</span> <span class="literal">-ItemType</span> Directory <span class="literal">-Force</span> | <span class="built_in">Out-Null</span></span><br><span class="line">        <span class="built_in">Copy-Item</span> <span class="literal">-Path</span> <span class="variable">$file</span>.FullName <span class="literal">-Destination</span> <span class="variable">$newDir</span> <span class="literal">-Force</span> | <span class="built_in">Out-Null</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment"># 不保持目录结构，直接复制</span></span><br><span class="line">        <span class="built_in">Write-Output</span> <span class="variable">$file</span>.Name</span><br><span class="line">        <span class="built_in">Copy-Item</span> <span class="literal">-Path</span> <span class="variable">$file</span>.FullName <span class="literal">-Destination</span> <span class="variable">$to</span> <span class="literal">-Force</span> | <span class="built_in">Out-Null</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Pop-Location</span></span><br></pre></td></tr></table></figure><p>操作时，启动PowerShell，输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入到Web应用所在目录，IDEA通常是artifacts，Eclipse通常是WebRoot</span></span><br><span class="line">cd X:\xxxxxx\out\artifacts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取5分钟之前到现在修改的文件，放到 ..\临时替换 目录中</span></span><br><span class="line">D:\tiqu.ps1 <span class="literal">-to</span> ..\临时替换 <span class="literal">-min</span> <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取从9:20到现在之间修改的文件，放到 ..\output 目录中</span></span><br><span class="line">D:\tiqu.ps1 <span class="literal">-time</span> <span class="number">09</span>:<span class="number">20</span></span><br></pre></td></tr></table></figure><h2 id="Linux-Mac-Cygwin"><a href="#Linux-Mac-Cygwin" class="headerlink" title="Linux/Mac/Cygwin"></a>Linux/Mac/Cygwin</h2><p>将以下脚本放在<code>/usr/local/bin/tiqu</code>中，设置好<code>x</code>权限。</p><p>注意Mac系统自带getopt是BSD版本，功能比GNU版少，只支持一个字母的短参数，需另外安装gnu-getopt（后面假设安装到了<code>/usr/local/opt/gnu-getopt/bin/getopt</code>）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">help</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"tiqu [options]"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"默认值：把当前目录、当天修改文件放到 out 目录中"</span></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"  --from=&lt;path&gt;, -f       指定待查找目录"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"  --to=&lt;path&gt;, -t         指定放置位置，如果没有则自动 mkdir"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"  --time=&lt;HH:mm&gt;          复制 HH:mm 之后修改的文件"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"  --min=&lt;min&gt;             复制从 min 分钟之前到现在的文件，和上面参数冲突"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"  --exclude=&lt;list&gt;, -e    复制时排除符合&lt;list&gt;规则的文件"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"  --exclude-from=&lt;file&gt;   复制时排除匹配了&lt;file&gt;规则配置列表文件的文件"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"  --flat, -b              把所有文件平摊到同一目录中，不要保持目录结构（默认值：保持目录结构）"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"  --help                  显示本帮助"</span></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">fromPath=<span class="string">"."</span></span><br><span class="line">toPath=<span class="string">"./out"</span></span><br><span class="line">findTime=<span class="string">"00:00"</span></span><br><span class="line">findMin=-1</span><br><span class="line">excludeCmd=<span class="string">""</span></span><br><span class="line">flat=0</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 苹果系统</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/usr/local/opt/gnu-getopt/bin:<span class="variable">$PATH</span>"</span></span><br><span class="line"> </span><br><span class="line">TEMP=`getopt -o hf:t:e:b --long <span class="built_in">help</span>,from:,to:,time:,min:,exclude:,exclude-from,flat -- <span class="string">"<span class="variable">$@</span>"</span>`</span><br><span class="line"><span class="built_in">eval</span> <span class="built_in">set</span> -- <span class="string">"<span class="variable">$TEMP</span>"</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">        -f|--from)</span><br><span class="line">            fromPath=<span class="string">"<span class="variable">$2</span>"</span></span><br><span class="line">            <span class="built_in">shift</span> 2</span><br><span class="line">            ;;</span><br><span class="line">        -t|--to)</span><br><span class="line">            toPath=<span class="string">"<span class="variable">$2</span>"</span></span><br><span class="line">            <span class="built_in">shift</span> 2</span><br><span class="line">            ;;</span><br><span class="line">        --time)</span><br><span class="line">            <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$2</span>"</span> =~ ^[01]?[0-9]:[0-5][0-9]$ ]]; <span class="keyword">then</span></span><br><span class="line">                findTime=<span class="string">"<span class="variable">$2</span>"</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> 错误：无效时间格式！</span><br><span class="line">                <span class="built_in">exit</span> 1</span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            <span class="built_in">shift</span> 2</span><br><span class="line">            ;;</span><br><span class="line">        --min)</span><br><span class="line">            findMin=<span class="string">"<span class="variable">$2</span>"</span></span><br><span class="line">            <span class="built_in">shift</span> 2</span><br><span class="line">            ;;</span><br><span class="line">        -e|--exclude)</span><br><span class="line">            excludeCmd=<span class="string">"--exclude=\"<span class="variable">$2</span>\""</span></span><br><span class="line">            <span class="built_in">shift</span> 2</span><br><span class="line">            ;;</span><br><span class="line">        --exclude-from)</span><br><span class="line">            excludeCmd=<span class="string">"--exclude-from=\"<span class="variable">$2</span>\""</span></span><br><span class="line">            <span class="built_in">shift</span> 2</span><br><span class="line">            ;;</span><br><span class="line">        -b|--flat)</span><br><span class="line">            flat=1</span><br><span class="line">            <span class="built_in">shift</span> 1</span><br><span class="line">            ;;</span><br><span class="line">        -h|--<span class="built_in">help</span>)</span><br><span class="line">            <span class="built_in">help</span></span><br><span class="line">            <span class="built_in">exit</span> 0</span><br><span class="line">            ;;</span><br><span class="line">        --)</span><br><span class="line">            <span class="built_in">shift</span></span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">            ;;</span><br><span class="line">        *)</span><br><span class="line">            <span class="comment"># echo "Internal error!"</span></span><br><span class="line">            <span class="comment"># exit 1</span></span><br><span class="line">            ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 计算时间</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$findMin</span> -eq -1 ]; <span class="keyword">then</span></span><br><span class="line">    IFS=: <span class="built_in">read</span> nowh nowm nows &lt;&lt;&lt; <span class="string">"`date +%T`"</span></span><br><span class="line">    IFS=: <span class="built_in">read</span> bh bm &lt;&lt;&lt; <span class="string">"<span class="variable">$findTime</span>"</span></span><br><span class="line"></span><br><span class="line">    nowh=<span class="variable">$&#123;nowh#0&#125;</span></span><br><span class="line">    nowm=<span class="variable">$&#123;nowm#0&#125;</span></span><br><span class="line">    bh=<span class="variable">$&#123;bh#0&#125;</span></span><br><span class="line">    bm=<span class="variable">$&#123;bm#0&#125;</span></span><br><span class="line"> </span><br><span class="line">    findMin=$(((nowh*60+nowm)-(bh*60+bm)))</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$findMin</span> -lt 0 ]; <span class="keyword">then</span></span><br><span class="line">        findMin=0</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line">findMin=$((-findMin))</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 将toPath转成绝对路径</span></span><br><span class="line">mkdir -p <span class="string">"<span class="variable">$toPath</span>"</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$toPath</span>"</span></span><br><span class="line">toPath=<span class="string">"`pwd`"</span></span><br><span class="line"><span class="built_in">cd</span> -</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用rsync复制文件</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$fromPath</span>"</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$flat</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 保持目录结构</span></span><br><span class="line">    find . -<span class="built_in">type</span> f -mmin <span class="variable">$findMin</span> -<span class="built_in">exec</span> rsync -aR &#123;&#125; <span class="string">"<span class="variable">$toPath</span>"</span> \;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="comment"># 不要保持目录结构</span></span><br><span class="line">    find . -<span class="built_in">type</span> f -mmin <span class="variable">$findMin</span> -<span class="built_in">exec</span> rsync -a &#123;&#125; <span class="string">"<span class="variable">$toPath</span>"</span> \;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 展示已复制文件</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$toPath</span>"</span></span><br><span class="line">find .</span><br></pre></td></tr></table></figure><p>操作时：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入到Web应用所在目录，IDEA通常是artifacts，Eclipse通常是WebRoot</span></span><br><span class="line"><span class="built_in">cd</span> xxxxxx/out/artifacts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取5分钟之前到现在修改的文件，放到 ../临时替换 目录中</span></span><br><span class="line">tiqu --to=../临时替换 --min=5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提取从9:20到现在之间修改到文件，放到 ./out 目录中</span></span><br><span class="line">tiqu --time=9:20</span><br></pre></td></tr></table></figure><p>程序会自动搜索已修改文件，并且会按目录结构组织好，之后你就可以直接打包了。</p><h1 id="在服务器上替换（Linux）"><a href="#在服务器上替换（Linux）" class="headerlink" title="在服务器上替换（Linux）"></a>在服务器上替换（Linux）</h1><p>如果已经按目录结构整理好，直接解压替换（<code>unzip -o xxx.zip -d 应用所在目录</code>）便是。对于war包，可使用zip命令直接把文件替换到包里面（<code>cd xxx; zip -r war包 *</code>）。</p><p>如果提供的是散装的class文件，那么找目录会很费劲，可以借助脚本自动找目录，自动替换。可修改以下脚本中的MYBASE变量，然后保存到<code>/usr/local/bin/tihuan</code>中，加好<code>x</code>权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 应用所在位置。通常不会变化，可以写死在脚本里头。</span></span><br><span class="line">MYBASE=/opt/xxx</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">help</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"tihuan [options] 文件名1 文件名2 ..."</span></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"  --to=&lt;path&gt;, -t         指定搜索目录（默认值：<span class="variable">$&#123;MYBASE&#125;</span>）"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"  --dry-run, -n           只生成命令，不要实际替换"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"  --force, -f             不用确认，直接动手替换"</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"  --help                  显示本帮助"</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 苹果系统</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"/usr/local/opt/gnu-getopt/bin:<span class="variable">$PATH</span>"</span></span><br><span class="line"> </span><br><span class="line">TEMP=`getopt -o ht:nf --long <span class="built_in">help</span>,to:,dry-run,force -- <span class="string">"<span class="variable">$@</span>"</span>`</span><br><span class="line"><span class="built_in">eval</span> <span class="built_in">set</span> -- <span class="string">"<span class="variable">$TEMP</span>"</span></span><br><span class="line"></span><br><span class="line">toPath=<span class="string">"<span class="variable">$MYBASE</span>"</span></span><br><span class="line">dryrun=0</span><br><span class="line">force=0</span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">        -t|--to)</span><br><span class="line">            toPath=<span class="string">"<span class="variable">$2</span>"</span></span><br><span class="line">            <span class="built_in">shift</span> 2</span><br><span class="line">            ;;</span><br><span class="line">        -n|--dry-run)</span><br><span class="line">            dryrun=1</span><br><span class="line">            <span class="built_in">shift</span> 1</span><br><span class="line">            ;;</span><br><span class="line">        -f|--force)</span><br><span class="line">            force=1</span><br><span class="line">            <span class="built_in">shift</span> 1</span><br><span class="line">            ;;</span><br><span class="line">        -h|--<span class="built_in">help</span>)</span><br><span class="line">            <span class="built_in">help</span></span><br><span class="line">            <span class="built_in">exit</span> 0</span><br><span class="line">            ;;</span><br><span class="line">        --)</span><br><span class="line">            <span class="built_in">shift</span></span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">            ;;</span><br><span class="line">        *)</span><br><span class="line">            <span class="comment"># echo "Internal error!"</span></span><br><span class="line">            <span class="comment"># exit 1</span></span><br><span class="line">            ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">i=0</span><br><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> <span class="string">"<span class="variable">$@</span>"</span>; <span class="keyword">do</span></span><br><span class="line">    i=$((i+1))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ! [ -f <span class="string">"<span class="variable">$file</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">        &gt;&amp;2 <span class="built_in">echo</span> <span class="string">"[文件 #<span class="variable">$&#123;i&#125;</span>] 源文件不存在：<span class="variable">$&#123;file&#125;</span>"</span></span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    fileName=`basename <span class="string">"<span class="variable">$file</span>"</span>`</span><br><span class="line"></span><br><span class="line">    find <span class="string">"<span class="variable">$toPath</span>"</span> -name <span class="string">"<span class="variable">$fileName</span>"</span> &gt; /tmp/tmpfilelist</span><br><span class="line">    list=`cat /tmp/tmpfilelist`</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ -n <span class="string">"<span class="variable">$list</span>"</span> ] &amp;&amp; [ <span class="string">"<span class="variable">$list</span>"</span> != <span class="string">"\n"</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"[文件 #<span class="variable">$&#123;i&#125;</span>] 已找到"</span></span><br><span class="line"></span><br><span class="line">        cat /tmp/tmpfilelist | <span class="keyword">while</span> <span class="built_in">read</span> target; <span class="keyword">do</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$target</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [ <span class="variable">$force</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> -n <span class="string">"是否继续替换 [y/n]？"</span></span><br><span class="line">            <span class="built_in">read</span> choice</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            choice=<span class="string">"y"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">"<span class="variable">$choice</span>"</span> == <span class="string">"y"</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">if</span> [ <span class="variable">$dryrun</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"[文件 #<span class="variable">$&#123;i&#125;</span>] 已进行替换"</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"[文件 #<span class="variable">$&#123;i&#125;</span>] 请运行以下命令"</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            cat /tmp/tmpfilelist | <span class="keyword">while</span> <span class="built_in">read</span> target; <span class="keyword">do</span></span><br><span class="line">                <span class="keyword">if</span> [ <span class="variable">$dryrun</span> -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">                    cp <span class="string">"<span class="variable">$1</span>"</span> <span class="string">"<span class="variable">$target</span>"</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    <span class="built_in">echo</span> <span class="string">"cp \"<span class="variable">$file</span>\" \"<span class="variable">$target</span>\""</span></span><br><span class="line">                <span class="keyword">fi</span></span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"[文件 #<span class="variable">$&#123;i&#125;</span>] 已放弃替换"</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"[文件 #<span class="variable">$&#123;i&#125;</span>] 未找到文件，未进行替换"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">rm /tmp/tmpfilelist 2&gt; /dev/null</span><br></pre></td></tr></table></figure><p>操作时：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 此处省略下载文件与备份操作。实际操作时注意备份！</span></span><br><span class="line"><span class="comment"># 以下根据实际情况二选一</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 展开（exploded）模式</span></span><br><span class="line">tihuan XXXXX.class</span><br><span class="line"></span><br><span class="line"><span class="comment"># war包模式</span></span><br><span class="line">mkdir tmp</span><br><span class="line">unzip -o war包 -d tmp</span><br><span class="line">tihuan --to=tmp XXXXX.class</span><br><span class="line"><span class="built_in">cd</span> tmp</span><br><span class="line">zip -r 原先的war包 *</span><br></pre></td></tr></table></figure><h1 id="后续操作"><a href="#后续操作" class="headerlink" title="后续操作"></a>后续操作</h1><ul><li>本文的操作应当只用于应急处置。问题处理好之后，代码该提交提交，基线该打patch打patch，忘了的话就是极大的隐患。</li><li>这次事情紧急，直接从开发库中取了文件。给不紧急的bug打patch时，一定要取基线代码，从基线上打，打完再合并回去。</li><li>每次正式升级之前一定要打基线，从基线取代码，打整包，生产环境配置文件用事先预备好的备份覆盖升级包，不要单独换文件！换文件升级，有第一次，就会有第二次。越是换文件，后面就越不敢打整包，几个星期以后，全世界就没有人知道生产环境与本地代码有什么区别了。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;生产环境遇到bug，需要紧急修改几个Java文件，然后尽快部署到生产系统中。如果代码中混有其他改动，无法完整打包，那么如何尽快提取出改完的class文件并快速地放到服务器的正确位置呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="系统运维" scheme="https://plusnan.me/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="shell" scheme="https://plusnan.me/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>写文档的注意事项</title>
    <link href="https://plusnan.me/2020/02/20/how-to-write-document/"/>
    <id>https://plusnan.me/2020/02/20/how-to-write-document/</id>
    <published>2020-02-19T16:00:00.000Z</published>
    <updated>2020-05-22T02:44:58.611Z</updated>
    
    <content type="html"><![CDATA[<p>不写文档会挨骂，写烂文档更挨骂，写好文档，才能少挨骂。</p><a id="more"></a><h1 id="明确受众"><a href="#明确受众" class="headerlink" title="明确受众"></a>明确受众</h1><p>开始动笔之前，先问领导与自己：<strong>文档是写给谁看的？</strong></p><p>受众不同，文档的侧重点也要有所不同。</p><p>写给技术人员，文档的语言要尽可能精确，而且要明白他们关心的是什么内容。例如同样是写接口手册，开发人员文档要把重点放在接口规范方面，而运维文档要把重点放在接口服务的监控与维护方面。</p><p>写给用户时，文档的语言要直观，不必特别精确，能用通俗的语言描述，就不要用技术的语言描述；能用图片描述，就要避免用密密麻麻的文字描述。总之要让新手看得懂。至于特殊情况，能不提就不提，毕竟正常情况他们还不一定能看得懂呢。</p><h1 id="明确形式"><a href="#明确形式" class="headerlink" title="明确形式"></a>明确形式</h1><p>要确认好文档以什么形式展现：设计文档、操作说明书、汇报PPT？</p><p>特别是刚参加工作、没写过文档的新人，经常会犯些低级错误——明明让写需求文档，把系统具体实现写进去了；让写操作手册，却从需求文档复制粘贴，写了一堆业务规则，看完仍然不知道系统该点什么按钮；让做PPT，页面文字密密麻麻，别说投影，看屏幕都觉得累……</p><p>除了文件的格式，内容也要考虑好形式。例如设计文档要重点讲系统的功能实现，而操作说明书则要避免提及系统的内部原理，重点讲用户眼睛能看到的外部现象。还有技术文档要关注细节，而商务文档要注重表达形式，弱化细节。</p><h1 id="注意规范"><a href="#注意规范" class="headerlink" title="注意规范"></a>注意规范</h1><p>团队通常会制定文档模板和规范，不要随便自己找模板，不要违反文档规范。</p><p>文档要特别注意格式。不要有错别字，标点符号要正确（特别是不要在中文中使用英文标点），字体、字号要统一。虽然这都是些不起眼的事情，但出毛病的话很刺眼。</p><p>关于格式方面的规则，可参考阮一峰《<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3J1YW55Zi9kb2N1bWVudC1zdHlsZS1ndWlkZQ==">中文技术文档的写作规范<i class="fa fa-external-link-alt"></i></span>》。</p><h1 id="多读、多改"><a href="#多读、多改" class="headerlink" title="多读、多改"></a>多读、多改</h1><p>初稿肯定会有不少语文方面的问题，句子不通顺，语义不清楚，前后逻辑不连贯。因此，写完之后要通读文档，PPT的话还要试着讲一下，将整个文档顺一顺，大小毛病改一改，然后再从头检查一遍，重复以上几个步骤，直到大体满意为止。</p><p>直接提交不行吗？当然不行了！明明是自己能挑出来改好的低级错误，却放着交给别人检查，这就是在浪费别人时间，而且会让人觉得你工作态度不好。虽然你努力完善的结果可能也是返工，但返工原因由低级的格式问题变成高级的业务问题，至少不会让人太扫兴。</p><h1 id="版本管理"><a href="#版本管理" class="headerlink" title="版本管理"></a>版本管理</h1><p>文档应做好版本管理。</p><p>即便无法版本管理（例如净是些照片、Word、Excel、PowerPoint文件），至少要有个固定地方集中存放，而不是乱七八糟散落在邮箱附件、微信聊天记录、QQ群文件、张三电脑C盘、李四电脑D盘……特别是与外界沟通协调的文件，如果不集中管理，日后需要追查记录时便无处可寻，甚至会让外人觉得你们公司管理混乱。</p><p>文档要分门别类存放。就算要偷懒，至少文件名要有个规范（关键词、日期时间等），免得找不到。有心思的话，可以进一步基于ES搞一个搜索引擎（<code>TODO</code> 暂时未找到现成案例，待补完）。</p><p>对于内部开发文档，个人提倡使用纯文本与Markdown格式，不要使用Word格式。Word格式需要浪费时间排版，难以搜索，而且很难管理版本，而Markdown格式简洁明了，便于全文搜索，并且可以直接扔到SVN/Git仓库里面进行版本管理。</p><p>提倡使用一些专门的文档/知识库软件，例如<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0Jvb2tTdGFja0FwcC9Cb29rU3RhY2s=">BookStack<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly93d3cuZG9rdXdpa2kub3Jn">DokuWiki<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9tZWRpYXdpa2kub3JnLw==">MediaWiki<i class="fa fa-external-link-alt"></i></span>。这类软件操作方便，适合团队协作维护文档，又有版本管理功能，可随时检查修订记录。</p><h1 id="文档要随时维护，不要攒着"><a href="#文档要随时维护，不要攒着" class="headerlink" title="文档要随时维护，不要攒着"></a>文档要随时维护，不要攒着</h1><p>当用户需求、功能设计、接口规范、数据库结构等信息发生变化时，务必及时更新相应的文档。今天不把文档维护好，明天会有新的事情来烦扰你，让你更没有心思管文档，日积月累，最终变成一个大坑。</p><p>如果没有专门的文档团队，那么在管理项目时应当将文档也作为开发任务之一来管理，将光写代码（特别是变更了设计的代码）、不维护相关开发文档视为没完成任务。</p><h1 id="平时抽空练习练习"><a href="#平时抽空练习练习" class="headerlink" title="平时抽空练习练习"></a>平时抽空练习练习</h1><p>去CSDN、GitHub等网站开个博客，或者去知乎拿长篇回答装装逼（注意是让你去装逼，而不是去怼人），练习自己的语言表达能力、搜索资料的能力与整理信息的能力。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;不写文档会挨骂，写烂文档更挨骂，写好文档，才能少挨骂。&lt;/p&gt;
    
    </summary>
    
    
      <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="文档" scheme="https://plusnan.me/tags/%E6%96%87%E6%A1%A3/"/>
    
  </entry>
  
  <entry>
    <title>养成随手存档的习惯！</title>
    <link href="https://plusnan.me/2020/02/05/archive/"/>
    <id>https://plusnan.me/2020/02/05/archive/</id>
    <published>2020-02-04T16:00:00.000Z</published>
    <updated>2020-05-10T06:49:31.741Z</updated>
    
    <content type="html"><![CDATA[<p>网上的东西很容易消失，而中国网站的东西更容易“404”（“被”消失）。虽然我们无法改变中国“404”的制度，但是我们仍然可以学习一些存档与找回存档的操作方法，养成随手存档的习惯，及时备份对自己有意义的内容，尽量降低损失。</p><a id="more"></a><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>本文提及了一些网站和工具，然而很多都被墙了。<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU2JTlDJTg5JUU1JTg1JUIzJUU5JTgzJUE4JUU5JTk3JUE4">有关部门<i class="fa fa-external-link-alt"></i></span>要制造“404”，墙要守护“404”，那么想防“404”，不翻墙是不现实的。</p><p>有关部门到底是哪个部门呢？“有关部门当然就是有关的部门了。无关的就不能称为有关部门。所以我建议你还是要向他们询问。”</p><p>此外，即便单纯做存档也是有风险的，例如2020年4月19日端点星的三个志愿者被警方以“寻衅滋事”名义被捕。</p><h1 id="随手存档的重要性"><a href="#随手存档的重要性" class="headerlink" title="随手存档的重要性"></a>随手存档的重要性</h1><p>信息会随时消失！</p><p>消失与“被消失”太常见了，例如：</p><ul><li>“敏感话题”，甚至需要麻烦有关部门下令全网删除</li><li>为了避免招惹是非，网站主动屏蔽某些话题</li><li>为了遮羞、耍赖等，原始作者自行删除，或者修改内容</li><li>本来是免费的东西，突然开始会员专享，甚至开了会员也要另收费</li><li>本身就是违法的东西（例如盗版资源），结果被举报和执法了</li><li>网站改版，原先的位置与网址改没了</li><li>网站关站倒闭了</li><li>网站被有关部门勒令整改，下线了</li><li>……</li></ul><p>如果是言论审查，它的速度可以很快——快到当你还在看这个页面的时候，审核员早已让内容消失了。手速慢一点的话，也不过是几分钟到几小时的事情。</p><p>即使是外国网站，只要由中国人管理，内容照样可以“被消失”，只不过不像国内那样操作得太夸张而已。例如看起来像外国然而实际是中国公司运营的TikTok（<span class="exturl" data-url="aHR0cHM6Ly93d3cudGhlZ3VhcmRpYW4uY29tL3RlY2hub2xvZ3kvMjAxOS9zZXAvMjUvcmV2ZWFsZWQtaG93LXRpa3Rvay1jZW5zb3JzLXZpZGVvcy10aGF0LWRvLW5vdC1wbGVhc2UtYmVpamluZw==">案例<i class="fa fa-external-link-alt"></i></span>）、平台在美国而实际上很多管理员在中国的中文维基百科（<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmJjLmNvbS96aG9uZ3dlbi90cmFkL2NoaW5lc2UtbmV3cy00OTk1ODEyNw==">案例<i class="fa fa-external-link-alt"></i></span>）。不是中国人？只要想挣中国人的钱，有关部门仍然可以根据自己需要，随时对他们“今日说法”、“道德观察”、“法治进行时”，然后他们就不得不为了钱而考虑如何配合了。</p><p>因此，有必要学习一些存档与找回存档的方法。对自己有意义的信息要及时存档，以防丢失。</p><h1 id="如何存档（按工具）"><a href="#如何存档（按工具）" class="headerlink" title="如何存档（按工具）"></a>如何存档（按工具）</h1><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p>截屏是种简单粗暴的保存信息的方式，按几个按键就能搞定，快，而且转发分享也容易！</p><p>如果截屏还嫌慢，掏出手机，拍照录像，OK。</p><h3 id="电脑"><a href="#电脑" class="headerlink" title="电脑"></a>电脑</h3><p>Windows普通截图：</p><ul><li>按<kbd>Print Screen</kbd>键录制，然后去画图粘贴，保存</li><li>使用系统自带“截屏工具”截屏</li><li>使用QQ、微信等软件的截屏快捷键截屏</li></ul><p>Linux截图与桌面环境有关，略。</p><p>Mac普通截图：</p><ul><li><kbd>Command+Shift+3</kbd>：截全屏然后自动保存到桌面上</li><li><kbd>Command+Shift+3</kbd>：截取选定区域然后自动保存到桌面上 </li></ul><p>网站内容通常无法用一张图截全，那么如何进行长截图呢？</p><ul><li>Chrome：<kbd>F12</kbd>→<kbd>Ctrl+Shift+P</kbd>（苹果是<kbd>Command+Shift+P</kbd>）→Capture full size screenshot</li><li>Firefox：在页面点击右键，选择截图</li><li>Windows 10自带Edge浏览器：点击右上角“添加笔记”按钮</li><li>国产浏览器：通常自带截图功能</li></ul><h3 id="手机"><a href="#手机" class="headerlink" title="手机"></a>手机</h3><p>国产Android手机通常自带截长图的功能。如果没有，可安装PPIICC（需要root）。Android其他截屏软件可参见<span class="exturl" data-url="aHR0cHM6Ly9zc3BhaS5jb20vcG9zdC80ODM3Mw==">此文章<i class="fa fa-external-link-alt"></i></span>。</p><p>苹果手机的长截图应用有Picsew、Tailor等。</p><h3 id="拼接截图"><a href="#拼接截图" class="headerlink" title="拼接截图"></a>拼接截图</h3><p>有些内容太长了，用长截图工具也截不全，此时可以分段截，截完再使用其他软件拼接。</p><p>用什么软件拼接？电脑的话就是画图或Photoshop。手机的话可参考<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI5MjYzNzQ3">知乎回答<i class="fa fa-external-link-alt"></i></span>。</p><h2 id="录屏"><a href="#录屏" class="headerlink" title="录屏"></a>录屏</h2><p>录屏也是一种记录方法。然而  视频截屏不太方便传播，也不太方便阅读，建议确实有必要的时候才录屏。</p><ul><li>Windows/Linux电脑：推荐使用<span class="exturl" data-url="aHR0cHM6Ly9vYnNwcm9qZWN0LmNvbS8=">OBS Studio<i class="fa fa-external-link-alt"></i></span>软件录屏，很多游戏主播用的就是该软件</li><li>苹果电脑：使用系统自带的QuickTime即可录屏</li><li>Android设备：参见<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzI0MTY3Mjg1">知乎提问<i class="fa fa-external-link-alt"></i></span></li><li>iPhone/iPad：从iOS 11开始已经是<span class="exturl" data-url="aHR0cHM6Ly9zdXBwb3J0LmFwcGxlLmNvbS96aC1jbi9IVDIwNzkzNQ==">系统自带功能<i class="fa fa-external-link-alt"></i></span></li></ul><h2 id="互联网档案馆（推荐）"><a href="#互联网档案馆（推荐）" class="headerlink" title="互联网档案馆（推荐）"></a>互联网档案馆（推荐）</h2><p><span class="exturl" data-url="aHR0cHM6Ly9hcmNoaXZlLm9yZy8=">archive.org<i class="fa fa-external-link-alt"></i></span>（互联网档案馆，又名时光机）与<span class="exturl" data-url="aHR0cDovL2FyY2hpdmUuaXMv">archive.is<i class="fa fa-external-link-alt"></i></span>是两个常用的归档网站。只要在里面输入网址，点击保存，页面内容就会被抓取下来。之后也可以通过这两个网站查阅网站存档记录。因为这样非常有利于防止“404”，所以很早就获得了墙的认证。</p><p>截图与转载都可以造假，而归档网站保存的是网页原貌、网页原始网址与原始时间，不太可能造假。</p><p>建议在浏览器安装一个归档插件，例如Save To The Wayback Machine（<span class="exturl" data-url="aHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvc2F2ZS10by10aGUtd2F5YmFjay1tYWNoaS9lZWJwaW9hYWlsYmpvam1kYm1scG9tZmdpam5sY2Vtaz9obD1lbg==">Chrome版<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9hZGRvbnMubW96aWxsYS5vcmcvZW4tVVMvZmlyZWZveC9hZGRvbi9zYXZlLXRvLXRoZS13YXliYWNrLW1hY2hpbmUv">Firefox版<i class="fa fa-external-link-alt"></i></span>），这样就方便随手归档了。一旦页面404，你和其他人都可以用此插件方便地查阅档案馆记录。</p><p>如果网站需要登录才能访问，或者限制国外IP访问，那么归档起不到作用了。而且，archive.org会遵守robots规范（User-Agent: ia_archiver），如果网站在robots.txt中明确拒绝归档，那么archive.org就不会保存内容，需要改用archive.is存档。</p><p>网上有很多喜欢“黑屁”、“指点江山”的智障，如果想怼他们，可以随时给他们的“高雅创作”、“高谈阔论”存档。打脸之后，不接受、不承认？甚至要自我削除，毁灭证据？那就把档案馆链接拿出来让大家看看！</p><h2 id="Evernote-OneNote"><a href="#Evernote-OneNote" class="headerlink" title="Evernote / OneNote"></a>Evernote / OneNote</h2><p>Evernote（中国版称作“印象笔记”，账号内容与国际版隔离）与OneNote是两个笔记软件，均具备收藏网页内容的功能。</p><p>Evernote对网页内容提取得比较好。像新闻资讯等网站，它会聪明地提取出标题与正文，基本上不需要进一步加工精炼。然而，Evernote免费账号只允许登录两个设备，笔记容量也有很大限制，而且中国版的“印象笔记”不支持分享功能。</p><p>OneNote提取，可以选择截图、纯文字或选区。个人感觉在内容提取方面不如Evernote好用，但是在笔记整理方面优于Evernote。</p><p>个人建议：如果想提取图文，不想直接截图，那么用Evernote保存、抓取内容。如果要进一步整合资源，形成论文、报告什么的，就切换到OneNote整理。</p><h2 id="下载到本地"><a href="#下载到本地" class="headerlink" title="下载到本地"></a>下载到本地</h2><p>将网上的内容下载到本地是最安全的方法之一。只要磁盘没坏，没感染病毒，没被勒索软件勒索，没有误删，资源就不会丢失。</p><p>如果要保存网页，只需轻轻地Ctrl+S，然后点击保存就可以了。</p><p>但是，保存完成后记得检查一下，因为有些网站会设法阻止你保存东西，存完也是一堆乱七八糟的程序代码。像音乐网站、视频网站等特殊网站，干脆不能Ctrl+S（除非你只想保存评论区），需要找一些专用的下载工具才行。</p><h2 id="爬虫程序"><a href="#爬虫程序" class="headerlink" title="爬虫程序"></a>爬虫程序</h2><p>网络爬虫太常见了。会编程的话，就可以到网上搜一些爬虫程序的案例，自己写个爬虫扒网站内容。有需要的话可以再买台服务器，或者找个闲置电脑，定时跑程序，实现自动归档。</p><p>如果要爬特定网站，也可以在搜索时把网站名加上，看看有没有现成的程序。</p><h1 id="如何存档（按来源）"><a href="#如何存档（按来源）" class="headerlink" title="如何存档（按来源）"></a>如何存档（按来源）</h1><h2 id="普通网站"><a href="#普通网站" class="headerlink" title="普通网站"></a>普通网站</h2><p>上面提到的几种方法都可以试试。</p><h2 id="微信"><a href="#微信" class="headerlink" title="微信"></a>微信</h2><p>微信非常容易炸！</p><h3 id="微信账号"><a href="#微信账号" class="headerlink" title="微信账号"></a>微信账号</h3><p>已经有大量案例证实：只是在群里或者朋友圈里发句牢骚，账号可能就会被腾讯给封禁。而且，封号还算是轻的，有些人更倒霉，只是群里发了关于领导人的一句话，就让警察带走了。  </p><p>由于微信经常关联了大量现实生活的东西，例如身份认证、联系人、零钱、生活工作通信群组等，这些东西都无法做备份（不嫌麻烦的话倒是可以手工备份联系人），所以建议微信只用于日常联系，不转载东西，不发表任何评论，也不发牢骚。真想谈天论地的时候，只把微信当作引流工具，然后去Telegram等软件里面聊。</p><p>那微信语音行不？你想想，既然微信能把你的语音转成文字，而且能翻译个八九不离十，那么语音聊天的时候难道不能顺便给你识别识别吗？</p><h3 id="微信公众号"><a href="#微信公众号" class="headerlink" title="微信公众号"></a>微信公众号</h3><p>微信公众号更严。文章能发出来，说明至少通过了微信程序的敏感词检测。如果用拼音、火星文、图片等手段绕过检测，后面再让审核员审核、“热心网友”举报便是。该炸的内容早晚会炸。</p><p>如果只是一两篇文章，存档就比较简单了。微信公众号也是网页，所以公众号的存档方式与普通网站差不多：截屏、扔互联网档案馆、用电脑点开保存……</p><p>可是，如果想把整个公众号内容都导出来呢？比较麻烦，但<span class="exturl" data-url="aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzIyMTE0NDUx">知乎上有人提供了一些解决方案<i class="fa fa-external-link-alt"></i></span>（<span class="exturl" data-url="aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMjAwNDIzMTMxMzQ0L2h0dHBzOi8vd3d3LnpoaWh1LmNvbS9xdWVzdGlvbi8yMjExNDQ1MQ==">存档<i class="fa fa-external-link-alt"></i></span>）</p><p>自己写导公众号程序的话，大概有两种思路，一种是模拟浏览器访问，另一种是借助工具抓包，然后用程序整理抓包数据。</p><h2 id="微博"><a href="#微博" class="headerlink" title="微博"></a>微博</h2><p>微博也很容易炸！</p><p>不幸的是，微博无法通过互联网档案馆存档。而且，由于微博平台越来越封闭，防爬措施也越来越多，以前能用的导出工具现在可能都失效了。</p><p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmxpdWd1b2ZlbmcuY29tL3AvNTY3MA==">Octoman<i class="fa fa-external-link-alt"></i></span>是目前（2020年2月）能够使用的一款微博导出工具。</p><p>微博评论呢？看起来只能截屏、手工复制粘贴，或者自己写爬虫爬吧。</p><h2 id="音视频网站"><a href="#音视频网站" class="headerlink" title="音视频网站"></a>音视频网站</h2><p>音视频网站比较特殊，不能截图，也不能扔互联网档案馆存档，所以要用一些工具把视频下载到本地，（有需要的话）再找地方重新上传。</p><p>国内主流网站差不多都能用<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3NvaW1vcnQveW91LWdldA==">you-get<i class="fa fa-external-link-alt"></i></span>下载，你可以用该工具碰碰运气。</p><p>假设你使用Windows系统，那么该工具的安装方法如下：</p><ol><li>安装<span class="exturl" data-url="aHR0cHM6Ly93d3cucHl0aG9uLm9yZy9kb3dubG9hZHMv">Python 3<i class="fa fa-external-link-alt"></i></span>。在安装程序中，务必勾选“Add Python 3.x to PATH”。</li><li>打开命令提示符</li><li>输入<code>pip3 install you-get</code>。有时候网络不好，需要反复试几次才能成功。</li><li>安装完成。</li></ol><p>需要下载的时候，也是先打开命令提示符，然后输入<code>you-get 网址</code>（把“网址”二字换成实际的网站的网址。需要粘贴时，要点击右键选择粘贴，不能按Ctrl+V）。下载完成后，去C盘的用户文件夹中即可找到文件。国内很多音视频网站只允许国内访问，下载时尽量不要挂梯子。</p><p>建议每次下载视频之前先升级一下you-get的版本，防止工具失效：<code>pip3 install --upgrade you-get</code></p><h1 id="如何找回已删内容"><a href="#如何找回已删内容" class="headerlink" title="如何找回已删内容"></a>如何找回已删内容</h1><p>删除，通常意味着在中国国内都会消失，所以找回已删内容当然要翻墙去墙外寻找。</p><h2 id="互联网档案馆"><a href="#互联网档案馆" class="headerlink" title="互联网档案馆"></a>互联网档案馆</h2><p>如果你记得网站的网址，可以到<span class="exturl" data-url="aHR0cHM6Ly9hcmNoaXZlLm9yZy8=">archive.org<i class="fa fa-external-link-alt"></i></span>或<span class="exturl" data-url="aHR0cDovL2FyY2hpdmUuaXMv">archive.is<i class="fa fa-external-link-alt"></i></span>等网站碰运气，看有没有人提交过存档。</p><h2 id="Google搜索"><a href="#Google搜索" class="headerlink" title="Google搜索"></a>Google搜索</h2><p>如果你还记得资料的名字或内容，可以将名字或文章中的一两句话用作Google搜索的关键词，查看网上是否还有转载与备份。有时虽然内容已删，但Google自己还留着一个快照，可以在快照失效之前尽快把内容导出来。</p><h2 id="专项计划"><a href="#专项计划" class="headerlink" title="专项计划"></a>专项计划</h2><p>有些网站会专门搜集容易遭到删除，甚至已经遭到删除的信息</p><ul><li><span class="exturl" data-url="aHR0cHM6Ly9jaGluYWRpZ2l0YWx0aW1lcy5uZXQvY2hpbmVzZS8=">中国数字时代<i class="fa fa-external-link-alt"></i></span>：该网站由加州大学伯克利分校信息学院“逆权力实验室”（Counter-Power Lab）提供技术支持，重点关注中国的言论审查，每天会收集一些媒体与自媒体等方面的时政类内容。有时可以在该网站找到一些已经在中国被全网删除的内容或言论。</li><li><span class="exturl" data-url="aHR0cHM6Ly9mcmVld2VpYm8uY29tLw==">自由微博<i class="fa fa-external-link-alt"></i></span>：该网站会专门搜集已经遭到屏蔽的微博内容。</li><li><span class="exturl" data-url="aHR0cHM6Ly9mcmVld2VjaGF0LmNvbS8=">自由微信<i class="fa fa-external-link-alt"></i></span>：该网站专门搜集已经遭到屏蔽的微信公众号内容。</li><li><span class="exturl" data-url="aHR0cHM6Ly90ZXJtaW51czIwNDkuZ2l0aHViLmlvLw==">端点星计划<i class="fa fa-external-link-alt"></i></span>：该网站通过GitHub搭建，也是专门搜集微博微信被删内容的网站。</li></ul><h1 id="分享存档"><a href="#分享存档" class="headerlink" title="分享存档"></a>分享存档</h1><p>如果想做点好事，可以在看到“404”资料还尚未删除时随手存个档，然后再把存档和原始出处（如果还没被404）分享出去，或者单纯地教会别人如何存档。分享时尽量放到有关部门管不到、中国人管不到、在中国也没有重要业务的外国平台，例如：</p><ul><li>普通内容：美国的Facebook、美国的Twitter、美国的Reddit、俄罗斯的VK（不过基本上都是俄国人在用）</li><li>音视频：美国的YouTube、德国的SoundCloud</li><li>文章：美国的Facebook、美国的Blogger、（从俄罗斯跑到）阿联酋的<span class="exturl" data-url="aHR0cHM6Ly90ZWxlZ3JhLnBo">Telegraph<i class="fa fa-external-link-alt"></i></span></li><li>图床（将图片上传上去，网站会生成一个可供分享的链接）：美国的Imgur</li><li>保存到网盘：美国的Dropbox、美国的Google Drive、新西兰的Mega</li><li>自建服务器：使用美国、韩国、日本等公司提供的资源<ul><li>想搞盗版的话得换个地方，找俄罗斯、荷兰、瑞典、保加利亚、罗马尼亚这类对版权管得松的国家</li><li>如果需求更特殊，例如“炼铜”（这个有<span class="exturl" data-url="aHR0cHM6Ly93d3cudW4ub3JnL2NoaW5lc2UvY2hpbGRyZW4vaXNzdWUvY3JjX29wMS5zaHRtbA==">国际公约<i class="fa fa-external-link-alt"></i></span>，基本上去哪里建服务器都算犯罪，包括北朝鲜），那么还是去暗网吧</li><li>建议不要自建服务器，一方面容易被黑，另一方面需要费心思持续运营，如果服务不靠谱，甚至“删库跑路”，会给自己与别人带来麻烦</li></ul></li><li>然后再借助（从俄罗斯跑到）阿联酋的Telegram、美国的Whatsapp、美国的Discord、美国的Signal、日本的LINE等聊天工具分享以上信息</li></ul><p>除了主流平台，还有些另类的点子，比方说上传到加拿大的黄网Pornhub——<span class="exturl" data-url="aHR0cHM6Ly9wb3JuaHViLmNvbS92aWV3X3ZpZGVvLnBocD92aWV3a2V5PXBoNWMwNDkxODk4NDgwZg==">张宇考研数学<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9wb3JuaHViLmNvbS92aWV3X3ZpZGVvLnBocD92aWV3a2V5PXBoNWQ0NmI0YTYxZTQ3Zg==">怒斥港记<i class="fa fa-external-link-alt"></i></span>，或者上传到不属于任何国家的区块链——<span class="exturl" data-url="aHR0cHM6Ly9ldGhlcnNjYW4uaW8vdHgvMHgyZDZhN2IwZjZhZGVmZjM4NDIzZDRjNjJjZDhiNmNjYjcwOGRkYWQ4NWRhNWQzZDA2NzU2YWQ0ZDhhMDRhNmEy">北大岳昕公开信<i class="fa fa-external-link-alt"></i></span>——只要Hash还在，信息就永远不会被消失了。</p><p>虽然以上各渠道全都要翻墙，但是发到普通人进不去的地方总比在网上彻底消失强，对吧。</p><p>如果是敏感或违法信息，分享到外国平台时还要注意两个问题：</p><ol><li>不要暴露自己国内身份，以免被国内执法，或者被各类“低端网民”人肉骚扰。</li><li>不要违反目标网站所在国的法律，例如美国网站版权管得比较严格，不要跑美国网站上分享侵权的东西（特别是音视频），否则会被投诉删除。</li></ol><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li>《<span class="exturl" data-url="aHR0cHM6Ly90ZWxlZ3JhLnBoLyVFNiU4RSVBOCVFOCU4RCU5MCVFOSU5OCU4NSVFOCVBRiVCQiVFNiU5NSVCMCVFNSVBRCU5NyVFNiU5RSU4MSVFNiU5RCU4MyVFNiU5NyVCNiVFNCVCQiVBMyVFNyU5NCU5RiVFNSVBRCU5OCVFNiU4OSU4QiVFOCVBRSVCMC12MTEtMTAtMjg=">数字极权时代生存手记<i class="fa fa-external-link-alt"></i></span>》</li><li>《<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLnNodXppeWltaW4ub3JnLzM2MA==">如何找回被删除的网页/新闻<i class="fa fa-external-link-alt"></i></span>》</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网上的东西很容易消失，而中国网站的东西更容易“404”（“被”消失）。虽然我们无法改变中国“404”的制度，但是我们仍然可以学习一些存档与找回存档的操作方法，养成随手存档的习惯，及时备份对自己有意义的内容，尽量降低损失。&lt;/p&gt;
    
    </summary>
    
    
      <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
      <category term="archive" scheme="https://plusnan.me/tags/archive/"/>
    
  </entry>
  
  <entry>
    <title>如何正确地打日志</title>
    <link href="https://plusnan.me/2020/01/22/logger/"/>
    <id>https://plusnan.me/2020/01/22/logger/</id>
    <published>2020-01-21T16:00:00.000Z</published>
    <updated>2020-05-18T03:36:16.558Z</updated>
    
    <content type="html"><![CDATA[<p>在程序中打日志很简单，<code>logger.debug(&quot;Hello, Happy World!&quot;)</code>，OK。可是，正确地打日志并不简单，需要注意以下几个问题。</p><a id="more"></a><h1 id="日志的目的"><a href="#日志的目的" class="headerlink" title="日志的目的"></a>日志的目的</h1><p><strong>备注：本文中的“日志”专指程序内部日志。</strong></p><p>打日志是为了记录程序的运行情况，这样可以：</p><ul><li>确认事件发生顺序、时间节点</li><li>记录问题，便于在系统发生异常时定位问题、解决问题。</li><li>在多线程、集群等复杂环境中，利用日志分析时序</li><li>监控某些程序的状态</li><li>……</li></ul><p>因此，日志要记好有助于解决问题的各类信息，不要堆积无助于解决问题的垃圾，而且要遵循一定的规范，便于查找、定位。</p><p>在这里向没有开发经验的人强调一下：生产系统的日志量非常大，而且出于性能考虑不会展示调试日志。在海量日志中找信息是件很麻烦的事情，请不要给维护人员挖坑。</p><h1 id="日志的内容"><a href="#日志的内容" class="headerlink" title="日志的内容"></a>日志的内容</h1><p>通过日志，应该能快速地了解“什么时间在哪里大概发生了什么事”，猜到“大概是什么原因导致了问题”，然后进一步定位程序代码，确认问题、解决问题。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">2020-01-02 12:34:56 [UserService] WARN 查询用户不存在，uid &#x3D; 1234567890</span><br><span class="line">2020-01-03 12:45:06 [AuthService] INFO 实名核验成功，uid &#x3D; 1234567899，身份证号 &#x3D; 110101123412341234，耗时 &#x3D; 12ms</span><br><span class="line">2020-01-04 12:56:01 [InfoService] ERROR 用户保存个人信息时发生异常</span><br><span class="line">java.sql.SQLException: ORA-12899: value too large for column &quot;XXXXX&quot;.&quot;YYYYY&quot;.&quot;ZZZZZ&quot; (actual: 60, maximum: 30)</span><br><span class="line">        at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:445)</span><br><span class="line">        at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)</span><br><span class="line">        ......</span><br></pre></td></tr></table></figure><p>一条日志应该包含以下内容：</p><ul><li><strong>时间（“何时”）</strong>：日志要记录事件的发生时间。<ul><li>日志组件记录的实际上是“打日志的时间”，而非“事件发生时间”。不过，通常事件执行时间很短，这个差异可以忽略不计。</li><li>如果事件执行时间比较长，“时间”就要区分为“发生时间”、“结束时间”和“持续时间”。</li></ul></li><li><strong>具体位置（“何地”）</strong>：记录事件于哪个模块、文件、函数等产生。建议至少把模块名打上，以便翻代码。</li><li><strong>事件简要描述（“什么事情”）</strong>：看到日志之后大概能猜到发生了什么事情。语言要简洁。<ul><li>不好的例子：“发生错误”、“数据库异常”、“数据不存在”</li><li>好的例子：“查询用户信息时产生异常”、“执行用户信息保存时数据库异常”、“用户id不存在”</li><li>建议描述文字不要完全相同。比方说，都是“数据查询失败”，其中一处可以写成“数据查询失败了”，而另一处写成“数据查询的失败”，这样便于直接使用全文搜索功能查代码。</li></ul></li><li><strong>日志等级</strong>：把日志等级写好，出问题时就可以根据问题的严重性来找日志。</li><li><strong>上下文</strong>：例如<ul><li>异常的堆栈</li><li>重要参数：有时需要复现问题，可以记录某些重要参数（例如uid）以便还原现场</li><li>重要状态变化：例如线程启动/中断、特殊进程进入/退出等</li></ul></li></ul><p>在开发时要用团队封装好的框架，不要自己造轮子。</p><h1 id="日志的等级"><a href="#日志的等级" class="headerlink" title="日志的等级"></a>日志的等级</h1><p>以Java为例，Java日志通常分为ERROR、WARN、INFO、DEBUG和TRACE。其他语言和框架情况类似。</p><p>这几个级别用法通常如下：</p><ul><li>ERROR：记录影响系统与业务的严重问题，例如系统异常、数据库故障等。</li><li>WARN：记录“确实是问题，不过不耽误使用”的问题，以便后续跟踪检查。</li><li>INFO：比较重要的信息，例如系统参数、线程启动/结束、特殊任务等。</li><li>DEBUG、TRACE：记录开发调试过程中的细节。这类信息只要能方便开发人员调试即可。在生产环境中，这类信息应该被屏蔽掉，不往日志里头打，或者仅在跟踪问题时临时启用，用完之后立刻关掉。</li></ul><h1 id="打日志的位置"><a href="#打日志的位置" class="headerlink" title="打日志的位置"></a>打日志的位置</h1><p>假设信息查询的堆栈如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">QueryController.queryInfo()</span><br><span class="line">    UserService.getUserInfo()</span><br><span class="line">        UserDAO.getUser()</span><br><span class="line">        RoleDAO.getRole()</span><br><span class="line">    InfoService.getInformation()</span><br><span class="line">        InfoDAO.getInfo()</span><br><span class="line">    InfoCommonMethod.generateOutput()</span><br></pre></td></tr></table></figure><p>捕获异常、输出异常日志的操作尽量都交给最外层的调用方，即上面的<code>QueryController.queryInfo()</code>。</p><p>里层的函数（<code>UserService.getUserInfo()</code>、<code>UserDAO.getUser()</code>等）在抛出异常时不要打日志。否则里面打一遍，外面打一遍，日志就重复了。</p><p>像下面这样写函数就是在坑人：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUser</span><span class="params">(String param ...)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 业务逻辑</span></span><br><span class="line">        ...</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        logger.error(<span class="string">"错误"</span>, e);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// 清理</span></span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码存在三个问题：</p><ol><li>发生异常时，异常直接catch掉，未往上抛（<code>throw e;</code>），导致调用者无法捕获异常。</li><li>在此处打日志，调用者捕获异常之后还要打日志，日志信息就重复了。</li><li>如使用数据库事务（例如Spring的@Transactional），那么将无法正确回滚，导致状态错误。</li></ol><h1 id="日志文件"><a href="#日志文件" class="headerlink" title="日志文件"></a>日志文件</h1><p>不要假设日志全部都会输出到屏幕上，或者全部输出到特定的日志文件中！</p><p>日志输出目标是可以调整的，例如直接输出到stdout/stderr（生产环境不会这样干）、输出到特定日志文件、输出到数据库，或输出到特定的日志服务器中。日志不仅可以输出到单个文件，也可以根据子系统、日志级别、日志目的、日期时间等条件将日志拆分成多个文件。</p><p>因此要杜绝用<code>System.out.println()</code>、<code>System.error.println()</code>与<code>e.printStackTrace()</code>打日志！这样打出来的日志，不仅缺乏信息，而且有可能会打错地方，让人找不到。</p><p>第三方接口务必要打日志，而且不仅要记一些关键参数，还要便于查询（例如放入专门的XX公司接口日志文件中），以免出问题时互相踢皮球。</p><h1 id="其他的坑"><a href="#其他的坑" class="headerlink" title="其他的坑"></a>其他的坑</h1><ul><li><code>catch</code>里面不要空着。遇到异常时，如果不处理，不上抛，也不打日志，一旦出现问题，就把大家全都坑了。</li><li>不要只输出<code>e.getMesssage()</code>，要输出整个堆栈，否则难以定位。</li><li>不要把详细信息（特别是堆栈）暴露给用户。<ul><li><em>如果感觉模糊地提示“错误”不利于解决问题，可以设计一个公共函数，将常见错误信息转换成给火星人看的错误代码，就像蓝屏的0x0000021A那样，再告诉用户“系统错误，代码0x0000021A”。这样懂的人自然懂，不懂的人很难懂。</em></li></ul></li><li>再强调一遍，不要<code>System.out.println()</code>、<code>System.error.println()</code>与<code>e.printStackTrace()</code>。这样打，不仅缺乏信息，而且有可能会打错地方，让人找不到。</li><li>生产环境不要打DEBUG日志，否则影响性能。生产系统部署时，应通过配置文件或开关调整日志等级，把DEBUG日志屏蔽掉。<ul><li><em>系统刚上线时，为了便于调整，可能也会把DEBUG日志打出来。此时要留意服务器磁盘空间，别让日志把磁盘撑爆。</em></li></ul></li><li>日志是各线程公用的。需要换行的话，要先使用<code>\n</code>拼接字符串，拼好之后一口气打出来。多次执行打日志语句，日志内容可能会被其他业务打断。</li><li>频繁执行的代码、数据量大的数据要尽量避免打调试日志，同样影响性能。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在程序中打日志很简单，&lt;code&gt;logger.debug(&amp;quot;Hello, Happy World!&amp;quot;)&lt;/code&gt;，OK。可是，正确地打日志并不简单，需要注意以下几个问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="日志" scheme="https://plusnan.me/tags/%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>账号功能需求</title>
    <link href="https://plusnan.me/2020/01/20/user-account-0/"/>
    <id>https://plusnan.me/2020/01/20/user-account-0/</id>
    <published>2020-01-19T16:00:00.000Z</published>
    <updated>2020-04-21T13:52:36.125Z</updated>
    
    <content type="html"><![CDATA[<p>本文提出了一个假想的、通用的需求，因此部分功能需求之间可能存在冲突。不考虑这方面问题的话，看看你的系统能做到什么程度？</p><a id="more"></a> <h1 id="用户注册"><a href="#用户注册" class="headerlink" title="用户注册"></a>用户注册</h1><ul><li>多种注册途径：用户名、邮箱、手机号、证件号等<ul><li>通过邮箱、手机号等途径验证确实由本人注册账号</li><li>考虑前人已注册账号，且手机销号，而后人复得此手机号，想要注册账号时该如何处理</li></ul></li><li>通过第三方登录自动注册：支付宝、微信、QQ、微博等</li><li>账号合并</li><li>实名核验<ul><li>通过证件、手机核验身份</li><li>通过证件、人脸识别核验身份</li><li>借助支付宝等实名核验接口核验身份</li><li>用户自行上传证件信息，进行人工审核</li></ul></li><li>限制注册频率以防刷号</li><li>防止不当用户名</li></ul><h1 id="用户登录"><a href="#用户登录" class="headerlink" title="用户登录"></a>用户登录</h1><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><ul><li>密码/验证码登录</li><li>单点登录</li><li>第三方登录：支付宝、微信等</li><li>双重身份认证（2FA）<ul><li>手机短信</li><li>邮件</li><li>Google Authenticator</li></ul></li><li>账号安全<ul><li>多次登录失败，锁定IP或账号，防止暴力破解</li><li>非常用地点登录，进行身份验证</li><li>未完成实名注册，或使用验证码登录等情况，仅开启有限功能</li><li>防止机器人登录 / 提供机器人API接口</li></ul></li><li>会话<ul><li>记住当前会话</li><li>会话自动过期</li><li>会话互斥：一次只允许在一个地点登录，其他地点会话自动注销</li></ul></li><li>忘记密码<ul><li>进行身份核验、手机或邮箱验证，验证通过后发送重置链接</li></ul></li></ul><h2 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h2><ul><li>用户角色：个人/企业，普通用户/会员等</li><li>最小权限原则</li><li>根据不同角色分配不同功能</li></ul><h1 id="用户注销"><a href="#用户注销" class="headerlink" title="用户注销"></a>用户注销</h1><ul><li>可指定时间后自动注销</li><li>允许一次性注销所有设备上的全部会话</li><li>列举出用户正在登录的设备，允许注销特定设备上的会话</li></ul><h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><h2 id="密码管理"><a href="#密码管理" class="headerlink" title="密码管理"></a>密码管理</h2><ul><li>密码使用高安全性的加密算法来加密存储</li><li>修改密码</li><li>在一定时间之后强制修改密码</li><li>禁止用户重新设置成上次用过的密码</li></ul><h2 id="个人配置"><a href="#个人配置" class="headerlink" title="个人配置"></a>个人配置</h2><ul><li>邮箱、手机、微信、QQ、支付宝、微博等账号解绑 / 重新绑定<ul><li>更换邮箱、手机等，给前一账号留出一些时间，以便（如果是恶意操作则）撤回</li></ul></li><li>查询登录记录</li><li>进行敏感操作之前，再次验证用户账号密码</li><li>查询敏感操作记录</li><li>防止其他人非法访问个人信息</li></ul><h2 id="用户删除"><a href="#用户删除" class="headerlink" title="用户删除"></a>用户删除</h2><ul><li>允许用户自行删除用户</li><li>自动锁定 / 删除长期不活动的账号</li></ul><h2 id="系统管理员的管理"><a href="#系统管理员的管理" class="headerlink" title="系统管理员的管理"></a>系统管理员的管理</h2><ul><li>新建、删除用户</li><li>启用、禁用用户</li><li>用户权限管理</li><li>用户审核</li></ul><h1 id="非功能性需求"><a href="#非功能性需求" class="headerlink" title="非功能性需求"></a>非功能性需求</h1><ul><li>统一账号体系：考虑多个系统如何建设统一账号体系</li><li>审计：注册、登录、注销、重置密码等操作可审计，包含日期、时间、用户、资源等信息</li><li>性能优化：分库、分表处理</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文提出了一个假想的、通用的需求，因此部分功能需求之间可能存在冲突。不考虑这方面问题的话，看看你的系统能做到什么程度？&lt;/p&gt;
    
    </summary>
    
    
      <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="账号" scheme="https://plusnan.me/tags/%E8%B4%A6%E5%8F%B7/"/>
    
  </entry>
  
  <entry>
    <title>基于Docker快速配置V2Ray（WebSocket+TLS+Web）</title>
    <link href="https://plusnan.me/2019/12/10/v2ray/"/>
    <id>https://plusnan.me/2019/12/10/v2ray/</id>
    <published>2019-12-09T16:00:00.000Z</published>
    <updated>2020-04-25T15:05:26.206Z</updated>
    
    <content type="html"><![CDATA[<p>本文用于在紧急情况下快速部署应用，以解决燃眉之急，不过事后需要付钱，请谨慎决定。</p><a id="more"></a><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li>一个VPS服务器，可到<span class="exturl" data-url="aHR0cHM6Ly93d3cuZGlnaXRhbG9jZWFuLmNvbS8=">DigitalOcean<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly93d3cudnVsdHIuY29tLw==">Vultr<i class="fa fa-external-link-alt"></i></span>（支持国内支付方式）、<span class="exturl" data-url="aHR0cHM6Ly93d3cubGlub2RlLmNvbS8=">Linode<i class="fa fa-external-link-alt"></i></span>等网站购买。本文提到的这三个网站有一个好：按实际使用时间收费，而且IP被封的话还可以刷机器，不需要多花钱（与那些换一次IP就要好几美元的主机商比，多花几美分就相当于没花钱了）。</li><li>一个固定域名，可到<span class="exturl" data-url="aHR0cHM6Ly93d3cubmFtZWNoZWFwLmNvbS8=">Namecheap<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9nb2RhZGR5LmNvbS8=">GoDaddy<i class="fa fa-external-link-alt"></i></span>等网站购买。如果不嫌弃实名制，买<span class="exturl" data-url="aHR0cHM6Ly9kbnNwb2QuY2xvdWQudGVuY2VudC5jb20v">腾讯云<i class="fa fa-external-link-alt"></i></span>之类等国内域名也没问题，国内域名国外主机的话不需要备案。</li><li>如果电脑是Windows系统，需安装<span class="exturl" data-url="aHR0cHM6Ly93d3cuc3NoLmNvbS9zc2gvcHV0dHkvZG93bmxvYWQ=">PuTTY<i class="fa fa-external-link-alt"></i></span>等远程连接软件。</li></ol><h1 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h1><p>购买服务器时注意：</p><ol><li>地区选择美国西海岸（洛杉矶、旧金山）或者日本东京。</li><li>价格选择$5款式的。Vultr有时卖$2.5的机器，不要选那个，它只有IPv6，通常情况下你会连不上。</li><li>本文采用Ubuntu 18.04操作系统。该系统内核较新，不需要特意去升级内核。</li></ol><p>买到服务器之后，使用ping命令ping一下IP。如果ping不通，或者SSH连不上，需要换机器，换到能登录进去为止（同时不要忘记把未使用的机器删掉）。</p><h1 id="域名配置"><a href="#域名配置" class="headerlink" title="域名配置"></a>域名配置</h1><p>本文假设购买了<code>the-shirt-is-nine-fifteen.com</code>。</p><p>登录域名控制台，添加一条A记录，主机记录名称为<code>@</code>，IP为你所购买的服务器的IP。</p><h1 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h1><h2 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h2><p>连接服务器（假设用root账号登录），输入以下命令安装Docker并配置BBR加速：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common</span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -</span><br><span class="line">add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"</span><br><span class="line">apt-get update</span><br><span class="line">apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose</span><br><span class="line"></span><br><span class="line">echo "net.core.default_qdisc=fq" &gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo "net.ipv4.tcp_congestion_control=bbr" &gt;&gt; /etc/sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><h2 id="搭建V2Ray-ws-Web"><a href="#搭建V2Ray-ws-Web" class="headerlink" title="搭建V2Ray+ws+Web"></a>搭建V2Ray+ws+Web</h2><p>文件结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">* docker-compose.yml</span><br><span class="line">- v2ray&#x2F;</span><br><span class="line">  * config.json</span><br><span class="line">- caddy&#x2F;</span><br><span class="line">  * Caddyfile</span><br><span class="line">  - html&#x2F;</span><br><span class="line">    * index.html</span><br></pre></td></tr></table></figure><p>文件内容如下：</p><p><code>docker-compose.yml</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">"3"</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">caddy:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">caddy</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">abiosoft/caddy</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"80:80"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"443:443"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./caddy/Caddyfile:/etc/Caddyfile</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./caddy/data:/root/.caddy</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./caddy/html:/var/www/html</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">ACME_AGREE:</span> <span class="string">"true"</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">v2ray:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">v2ray</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">v2ray/official</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./v2ray:/etc/v2ray</span></span><br></pre></td></tr></table></figure><p><code>v2ray/config.json</code>：注意需要修改下面的id部分</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"inbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"port"</span>: <span class="number">8080</span>,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"clients"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"id"</span>: <span class="string">"去 https://1024tools.com/uuid 随便找一个UUID然后替换此处双引号内的文字"</span>,</span><br><span class="line">            <span class="attr">"alterId"</span>: <span class="number">4</span>,</span><br><span class="line">            <span class="attr">"level"</span>: <span class="number">0</span></span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"streamSettings"</span>: &#123;</span><br><span class="line">        <span class="attr">"network"</span>: <span class="string">"ws"</span>,</span><br><span class="line">        <span class="attr">"wsSettings"</span>: &#123;</span><br><span class="line">          <span class="attr">"path"</span>: <span class="string">"/v2rays/"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"freedom"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>caddy/Caddyfile</code>：注意将域名修改成你自己购买的域名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;the-shirt-is-nine-fifteen.com &#123;</span><br><span class="line">  redir https:&#x2F;&#x2F;the-shirt-is-nine-fifteen.com &#123;url&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;the-shirt-is-nine-fifteen.com &#123;</span><br><span class="line">  root &#x2F;var&#x2F;www&#x2F;html</span><br><span class="line">  gzip</span><br><span class="line">  index index.html</span><br><span class="line">  tls a@a.com</span><br><span class="line">  proxy &#x2F;v2rays&#x2F; v2ray:8080 &#123;</span><br><span class="line">    websocket</span><br><span class="line">    header_upstream -Origin</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>caddy/html/index.html</code>：伪装用的，设置成什么内容都行。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Hello Google!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    location.href = <span class="string">'https://google.com'</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>文件写好之后，在docker-compose.yml所在目录输入以下命令启动：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>稍等片刻。在浏览器输入<code>https://the-shirt-is-nine-fifteen.com</code>，如果能看到Hello Google说明启动成功（进一步讲，如果能跳转到Google说明客户端配置成功）。</p><h1 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h1><p>客户端下载（Windows）：<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL0Nlbm1yZXYvVjJSYXlXL3JlbGVhc2Vz">V2RayW<i class="fa fa-external-link-alt"></i></span>、<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tLzJkdXN0L3YycmF5Ti9yZWxlYXNlcw==">v2rayN<i class="fa fa-external-link-alt"></i></span></p><p>客户端配置规则（请根据实际情况填写）：</p><ul><li>地址：<code>the-shirt-is-nine-fifteen.com</code></li><li>端口：<code>443</code></li><li>alterId：<code>4</code></li><li>UUID：需要和服务器那边的id保持一致</li><li>传输方式：<code>WebSocket</code></li><li>路径：<code>/v2rays/</code></li><li>TLS的域名：<code>the-shirt-is-nine-fifteen.com</code></li></ul><p>使用原生V2Ray客户端时的config.json：注意修改域名和id中的说明文字</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"inbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"http"</span>,</span><br><span class="line">      <span class="attr">"port"</span>: <span class="number">1080</span>,</span><br><span class="line">      <span class="attr">"listen"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"http"</span>,</span><br><span class="line">      <span class="attr">"sniffing"</span>: &#123;</span><br><span class="line">        <span class="attr">"enabled"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"destOverride"</span>: [<span class="string">"http"</span>, <span class="string">"tls"</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"outbounds"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"v2ray"</span>,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"vmess"</span>,</span><br><span class="line">      <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"vnext"</span>: [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="attr">"address"</span>: <span class="string">"the-shirt-is-nine-fifteen.com"</span>,</span><br><span class="line">            <span class="attr">"port"</span>: <span class="number">443</span>,</span><br><span class="line">            <span class="attr">"users"</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="attr">"id"</span>: <span class="string">"需要和服务器那边的id保持一致"</span>,</span><br><span class="line">                <span class="attr">"alterId"</span>: <span class="number">4</span></span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"streamSettings"</span>: &#123;</span><br><span class="line">        <span class="attr">"network"</span>: <span class="string">"ws"</span>,</span><br><span class="line">        <span class="attr">"security"</span>: <span class="string">"tls"</span>,</span><br><span class="line">        <span class="attr">"wsSettings"</span>: &#123;</span><br><span class="line">          <span class="attr">"path"</span>: <span class="string">"/v2rays/"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"tag"</span>: <span class="string">"direct"</span>,</span><br><span class="line">      <span class="attr">"protocol"</span>: <span class="string">"freedom"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"routing"</span>: &#123;</span><br><span class="line">    <span class="attr">"domainStrategy"</span>: <span class="string">"IPOnDemand"</span>,</span><br><span class="line">    <span class="attr">"rules"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span>,</span><br><span class="line">        <span class="attr">"ip"</span>: [<span class="string">"geoip:private"</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span>,</span><br><span class="line">        <span class="attr">"domain"</span>: [<span class="string">"geosite:cn"</span>]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"field"</span>,</span><br><span class="line">        <span class="attr">"outboundTag"</span>: <span class="string">"direct"</span>,</span><br><span class="line">        <span class="attr">"ip"</span>: [<span class="string">"geoip:cn"</span>]</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动客户端。有的客户端可自动设置系统代理。如需要手工设置，那么你需要将系统代理设置成HTTP代理，地址127.0.0.1，端口1080。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>电脑系统时间需要保持准确。</li><li>客户端配置文件规则：中国网站直连，其余网站走代理。</li><li>开BT下载东西时不要挂梯子。碰到美剧等内容时容易因为版权问题导致服务器被投诉下线。</li><li>如需让Tor走代理，需修改配置文件中的sniffing，将里面enabled由true改成false。</li><li>HTTPS证书有效期只有三个月，临过期时需要登录服务器输入<code>docker restart caddy</code>。</li></ol><h1 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h1><p>如果服务器比较稳定，就没有必要继续配CDN了。</p><p>CDN需要找支持WebSocket加速的外国厂商（国内需要备案），效果因线路而异。Cloudflare免费套餐虽然免费，而且不会彻底封锁，但起的是“云减速”作用，建议只作应急使用。</p><h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><ol><li>不需要使用的时候记得及时登录VPS网站把机器删掉，然后再登录域名管理网站，别让它自动续费。</li><li>别忘了付钱。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文用于在紧急情况下快速部署应用，以解决燃眉之急，不过事后需要付钱，请谨慎决定。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="V2Ray" scheme="https://plusnan.me/tags/V2Ray/"/>
    
  </entry>
  
  <entry>
    <title>在Web开发中，如果无法回避ActiveX控件——一种让用户在非IE浏览器调用控件的思路</title>
    <link href="https://plusnan.me/2019/11/25/activex-helper/"/>
    <id>https://plusnan.me/2019/11/25/activex-helper/</id>
    <published>2019-11-24T16:00:00.000Z</published>
    <updated>2020-05-21T01:16:46.541Z</updated>
    
    <content type="html"><![CDATA[<p>如果Web系统需要调用特定ActiveX控件才能操作，像身份证阅读器、读卡器、获取电脑网卡MAC地址等，而且预计控件厂商在一段时间内无法解决浏览器兼容性问题，那我们能不能想法让用户在非IE浏览器中也能调用控件呢？</p><p>本文提出一种解决思路：开发一个“控件小助手”代理程序。该程序安装在用户电脑中，负责调用ActiveX控件，并在本地建立一个简易Web Server，而业务系统相关页面则通过Ajax（备注：实际是JSONP）调用代理接口，从而间接地与控件交互。</p><a id="more"></a><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>假设业务系统未开启HTTPS，因为启用HTTPS后问题会变得复杂。</p><h1 id="示意图"><a href="#示意图" class="headerlink" title="示意图"></a>示意图</h1><p>以身份证阅读器为例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">|-----------------------------------|                      |</span><br><span class="line">|              IE浏览器              |      Windows系统      |      外设</span><br><span class="line">|                                   |                      |</span><br><span class="line">|  |------------|   |------------|  |                      |</span><br><span class="line">|  | JavaScript |---| ActiveX控件 |-------身份证阅读器驱动--------身份证阅读器</span><br><span class="line">|  |------------|   |------------|  |                      |</span><br><span class="line">|                                   |                      |</span><br><span class="line">|-----------------------------------|                      |</span><br></pre></td></tr></table></figure><p>ActiveX是微软专利，其他浏览器无法调用。然而，在用户电脑中安装一个代理程序（即“控件小助手”），便可通过代理程序来操作控件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">                             |------------------------------------|                |</span><br><span class="line">|------------------|         |               代理程序              |   Windows系统   |      外设</span><br><span class="line">|   Chrome浏览器    |         |                                    |                |</span><br><span class="line">|                  |         |  |--------------|   |----------|   |                |</span><br><span class="line">|  |------------|  |         |  |     小型      |   | ActiveX  |  |     身份证       |</span><br><span class="line">|  | JavaScript |-----JSONP-----|  Web Server  |---|   控件    |--------阅读器-----------身份证阅读器</span><br><span class="line">|  |------------|  |         |  |--------------|   |----------|   |     驱动        |</span><br><span class="line">|                  |         |                                    |                |</span><br><span class="line">|------------------|         |------------------------------------|                |</span><br></pre></td></tr></table></figure><h1 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h1><p>假设原先的读卡逻辑为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"readCardButton"</span> <span class="attr">onclick</span>=<span class="string">"readCard()"</span>&gt;</span>读取身份证<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">readCard</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (<span class="built_in">window</span>.cardReader.Check) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> check = <span class="built_in">window</span>.cardReader.Check();</span></span><br><span class="line">            if (check &gt; 0) &#123;</span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> ret = <span class="built_in">window</span>.cardReader.ReadCard();</span></span><br><span class="line">                if (ret !== 0) &#123;</span><br><span class="line"><span class="actionscript">                    <span class="comment">// 读取不成功，需要重试</span></span></span><br><span class="line"><span class="actionscript">                    setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line">                        readCard()</span><br><span class="line">                    &#125;, 1000);</span><br><span class="line"><span class="actionscript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">'读卡成功！身份证号码为'</span> + <span class="built_in">window</span>.cardReader.IdCard);</span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="actionscript">            &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">                alert(<span class="string">'无法读取身份证，请检查身份证阅读器是否连接到电脑，驱动是否正确安装！'</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            alert(<span class="string">'无法读取身份证，请检查身份证阅读器控件是否正确安装！'</span>);</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">classid</span>=<span class="string">"clsid:xxxxxx"</span> <span class="attr">id</span>=<span class="string">"cardReader"</span> <span class="attr">width</span>=<span class="string">"0"</span> <span class="attr">height</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="小助手原型"><a href="#小助手原型" class="headerlink" title="小助手原型"></a>小助手原型</h2><p>我们采用C#快速实现原型程序，这样的话需要提前准备好Visual Studio。</p><p>进入Visual Studio，新建“Windows 窗体应用 (.Net Framework)”，命名为ControlHelper，并在NuGet管理器中安装<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL05hbmN5RngvTmFuY3k=">Nancy<i class="fa fa-external-link-alt"></i></span>。在窗体Form1中添加身份证阅读器控件，命名为CardReader。</p><p>Form1.cs代码如下：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Nancy.Hosting.Self;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ControlHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> NancyHost server = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="comment">// 启动Web Server</span></span><br><span class="line">            server = <span class="keyword">new</span> NancyHost(<span class="keyword">new</span> Uri(<span class="string">"http://127.0.0.1:12345"</span>));</span><br><span class="line">            server.Start();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> CheckResult <span class="title">Check</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> ret = CardReader.Check();</span><br><span class="line">            <span class="keyword">var</span> obj = <span class="keyword">new</span> CheckResult();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (ret &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                obj.Result = <span class="number">1</span>;</span><br><span class="line">                obj.Message = <span class="string">"身份证阅读器检测成功！"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                obj.Result = <span class="number">0</span>;</span><br><span class="line">                obj.Message = <span class="string">"无法读取身份证，请检查身份证阅读器是否连接到电脑，驱动是否正确安装！"</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> obj;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;IdCard&gt; <span class="title">ReadIdCard</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> obj = <span class="keyword">new</span> IdCard();</span><br><span class="line"></span><br><span class="line">            obj.result = <span class="number">0</span>;</span><br><span class="line">            obj.message = <span class="string">"无法读取身份证，请重试！"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> retry = <span class="number">3</span>; retry &gt; <span class="number">0</span>; retry--)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">var</span> ret = CardReader.ReadCard();</span><br><span class="line">                    <span class="keyword">if</span> (ret == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        obj.Result = <span class="number">1</span>;</span><br><span class="line">                        obj.Message = <span class="string">"读卡成功"</span>;</span><br><span class="line">                        obj.IdCard = CardReader.IdCard;</span><br><span class="line">                        <span class="comment">// 此处省略其他属性</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    System.Threading.Thread.Sleep(<span class="number">1000</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            &#123;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> obj;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Helper.cs：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Nancy;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ControlHelper</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Helper</span> : <span class="title">NancyModule</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Helper</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Get(<span class="string">"/idcard/check"</span>, param =&gt; Response.AsJson(Program.mainForm.Check()));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读卡不一定能立刻返回结果，使用async</span></span><br><span class="line">            Get(<span class="string">"/idcard/read"</span>, <span class="keyword">async</span> (context, t) =&gt; Response.AsJson(<span class="keyword">await</span> Program.mainForm.ReadIdCard()));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Serializable</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">IdCard</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Result &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Message &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> IdCard &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        <span class="comment">// 其他属性：姓名、性别、民族、出生日期、地址、签发机关、有效期、照片等</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Serializable</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CheckResult</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Result &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Message &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码中的监听端口为12345。为了避免冲突，可以修改成其他端口（最大65535，尽量用五位数）。由于监听地址为127.0.0.1（本机），与业务系统不同，会涉及跨域问题。为了避免离题讨论，本文代码以GET方式提供服务，并返回JSON格式数据，以便业务系统通过JSONP调用，不使用POST。</p><h2 id="Web应用页面代码调整"><a href="#Web应用页面代码调整" class="headerlink" title="Web应用页面代码调整"></a>Web应用页面代码调整</h2><p>调整读卡按钮的逻辑，先判断ActiveX控件是否可用。如果可用，沿用原先的ActiveX操作方式；如果不可用，则尝试通过$.ajax向“小助手”的小型Web Server发送请求。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readCardNew</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'#readCardButton'</span>).prop(<span class="string">'disabled'</span>, <span class="literal">true</span>);</span><br><span class="line">    <span class="comment">// 先尝试调用ActiveX控件，调不通的话就调用辅助程序</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.cardreader.ReadCard) &#123;</span><br><span class="line">        readCard();</span><br><span class="line">        $(<span class="string">'#readCardButton'</span>).prop(<span class="string">'disabled'</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url: <span class="string">'http://127.0.0.1:12345/idcard/check'</span>,</span><br><span class="line">            dataType: <span class="string">'jsonp'</span>,</span><br><span class="line">            timeout: <span class="number">500</span>,</span><br><span class="line">            cache: <span class="literal">false</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">data1</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (data1.Result === <span class="number">0</span>) &#123;</span><br><span class="line">                    alert(data1.Message);</span><br><span class="line">                    $(<span class="string">'#readCardButton'</span>).prop(<span class="string">'disabled'</span>, <span class="literal">false</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $.ajax(&#123;</span><br><span class="line">                        url: <span class="string">'http://127.0.0.1:12345/idcard/read'</span>,</span><br><span class="line">                        dataType: <span class="string">'jsonp'</span>,</span><br><span class="line">                        cache: <span class="literal">false</span>,</span><br><span class="line">                        success: <span class="function"><span class="keyword">function</span> (<span class="params">data2</span>) </span>&#123;</span><br><span class="line">                            $(<span class="string">'#readCardButton'</span>).prop(<span class="string">'disabled'</span>, <span class="literal">false</span>);</span><br><span class="line">                            <span class="keyword">if</span> (data2.Result === <span class="number">0</span>) &#123;</span><br><span class="line">                                alert(data2.Message);</span><br><span class="line">                            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                alert(<span class="string">'读卡成功！身份证号为'</span> + data2.IdCard);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        error: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            alert(<span class="string">'无法读取身份证，请重试！'</span>);</span><br><span class="line">                            $(<span class="string">'#readCardButton'</span>).prop(<span class="string">'disabled'</span>, <span class="literal">false</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                alert(<span class="string">'无法读取身份证，请检查小助手是否启动！'</span>);</span><br><span class="line">                $(<span class="string">'#readCardButton'</span>).prop(<span class="string">'disabled'</span>, <span class="literal">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="投入商业使用之前"><a href="#投入商业使用之前" class="headerlink" title="投入商业使用之前"></a>投入商业使用之前</h1><p>以上是实验用原型，质量粗糙，还需要进行一些功能优化才能交付用户，例如：</p><ul><li>兼顾不同操作系统的兼容性，以及不同版本.Net Framework的兼容性。（建议使用Visual C++重新开发）</li><li>增加校验，检测用户是否已经正确安装驱动和控件，并帮助用户完成安装（需注意遵守驱动和控件的许可协议，以免吃官司）。目前状态下，如控件未正确安装，程序一启动就会崩溃。</li><li>增加开机自启、版本更新等功能。</li></ul><p>如果团队有Windows桌面应用开发经验，或者能够接受研发成本，可以考虑进一步将工具开发出来，满足用户需求，解决实际问题。当然，无论是从解决问题的角度来看，还是从开发成本的角度来看，让控件厂商去做浏览器兼容才是最合适的解决办法。</p><h2 id="关于HTTPS"><a href="#关于HTTPS" class="headerlink" title="关于HTTPS"></a>关于HTTPS</h2><p>在决定开发之前，还需要特别留意一个问题：业务系统若进行HTTPS改造，“小助手”将完全失效，因为浏览器会拒绝HTTPS网站访问HTTP网站。这是浏览器的安全特性，JavaScript脚本无法干预此行为。</p><p>一种解决思路是为“localhost”签发自签名证书，让“小助手”也使用HTTPS服务，并要求用户将该证书添加到系统信任中（注意Firefox有自己的证书库，因此Firefox要单独安装）。</p><h1 id="进一步思考"><a href="#进一步思考" class="headerlink" title="进一步思考"></a>进一步思考</h1><p>从上面代码可以看出，控件读取的身份证号是明文，用户可通过浏览器控制台等途径篡改数据，带来安全隐患，而且这个漏洞无法在前端与控件层面补救。但是，如果全面改用“小助手”，便可在“小助手”一端“动手脚”，用可逆算法加密身份证信息，传到服务器之后才进行解密，从而防止用户在浏览器非法录入信息或篡改数据。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如果Web系统需要调用特定ActiveX控件才能操作，像身份证阅读器、读卡器、获取电脑网卡MAC地址等，而且预计控件厂商在一段时间内无法解决浏览器兼容性问题，那我们能不能想法让用户在非IE浏览器中也能调用控件呢？&lt;/p&gt;
&lt;p&gt;本文提出一种解决思路：开发一个“控件小助手”代理程序。该程序安装在用户电脑中，负责调用ActiveX控件，并在本地建立一个简易Web Server，而业务系统相关页面则通过Ajax（备注：实际是JSONP）调用代理接口，从而间接地与控件交互。&lt;/p&gt;
    
    </summary>
    
    
      <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="ActiveX" scheme="https://plusnan.me/tags/ActiveX/"/>
    
  </entry>
  
  <entry>
    <title>基于第三方CDN的IPv6支持改造实施方案</title>
    <link href="https://plusnan.me/2019/11/17/add-ipv6-support/"/>
    <id>https://plusnan.me/2019/11/17/add-ipv6-support/</id>
    <published>2019-11-16T16:00:00.000Z</published>
    <updated>2020-05-03T14:24:06.857Z</updated>
    
    <content type="html"><![CDATA[<p>为响应国家号召，我们又需要给生产系统增加IPv6支持，而该工作同样可借助（支持IPv6的）CDN来完成。本文为IPv6改造工作的实施方案。</p><a id="more"></a><h1 id="工作内容"><a href="#工作内容" class="headerlink" title="工作内容"></a>工作内容</h1><ol><li>应用程序改造<ul><li>排查程序中涉及IP地址的代码，修改不适用于IPv6地址的逻辑。</li><li>排查数据库中涉及IP地址的字段，如果长度不够，需扩到39或以上。</li></ul></li><li>按<a href="/2019/11/16/http-to-https/">前文方案</a>给应用系统套CDN。</li></ol><p>（完）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为响应国家号召，我们又需要给生产系统增加IPv6支持，而该工作同样可借助（支持IPv6的）CDN来完成。本文为IPv6改造工作的实施方案。&lt;/p&gt;
    
    </summary>
    
    
      <category term="系统运维" scheme="https://plusnan.me/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CDN" scheme="https://plusnan.me/tags/CDN/"/>
    
      <category term="IPv6" scheme="https://plusnan.me/tags/IPv6/"/>
    
  </entry>
  
  <entry>
    <title>基于第三方CDN的HTTPS改造实施方案</title>
    <link href="https://plusnan.me/2019/11/16/http-to-https/"/>
    <id>https://plusnan.me/2019/11/16/http-to-https/</id>
    <published>2019-11-15T16:00:00.000Z</published>
    <updated>2020-05-18T12:17:15.734Z</updated>
    
    <content type="html"><![CDATA[<p>为了提升Web系统安全性，我们需对生产系统进行HTTPS改造，改造实质上可以通过套CDN来实现。本文即整个改造工作的实施方案。</p><a id="more"></a><p>（本文系统架构、域名、IP均为虚构）</p><h1 id="改造目标"><a href="#改造目标" class="headerlink" title="改造目标"></a>改造目标</h1><ol><li>部署CDN</li><li>通过CDN实现HTTPS支持</li></ol><h1 id="系统部署架构"><a href="#系统部署架构" class="headerlink" title="系统部署架构"></a>系统部署架构</h1><p>系统为传统的Web应用部署架构。系统分为PC端和微信端两部分，域名和IP分别为 <span class="exturl" data-url="aHR0cDovL3d3dy54eHguY29t">www.xxx.com<i class="fa fa-external-link-alt"></i></span> (xx.yy.zz.aa) 与 weixin.xxx.com (xx.yy.zz.bb)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Internet        |             机房内网</span><br><span class="line">                |</span><br><span class="line">PC端用户--------网关---负载均衡1---PC端应用服务器（集群）</span><br><span class="line">                |                      ↑           ↖︎</span><br><span class="line">                |                  数据库服务器     某些第三方接口</span><br><span class="line">                |                      ↓           ↙︎</span><br><span class="line">微信用户--微信---网关---负载均衡2---微信端应用服务器（集群）</span><br><span class="line">                |</span><br></pre></td></tr></table></figure><p>加入CDN后将变为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Internet              |             机房内网</span><br><span class="line">                      |</span><br><span class="line">PC端用户------\        |   &#x2F;-负载均衡1---PC端应用服务器（集群）</span><br><span class="line">              \    &#x2F;-网关-&#x2F;                   ↑           ↖︎</span><br><span class="line">              CDN--   |                  数据库服务器     某些第三方接口</span><br><span class="line">              &#x2F;    \-网关-\                   ↓           ↙︎</span><br><span class="line">微信用户--微信-&#x2F;        |   \-负载均衡2---微信端应用服务器（集群）</span><br><span class="line">                      |</span><br></pre></td></tr></table></figure><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="沟通协调"><a href="#沟通协调" class="headerlink" title="沟通协调"></a>沟通协调</h2><p>改造工作，技术不是什么难题，难就难在让不同单位不同部门之间协调一致。实施之前，确认以下各环节具体负责人，提前做好协调沟通工作：</p><ul><li>总负责人（包括业务方面和技术方面的总负责）：汇报改造工作目的、内容、预期效果和实施风险，征求领导同意。</li><li>应用系统负责人：负责应用系统改造，确保切换HTTPS之后系统能正常运行。<ul><li>对接的第三方接口负责人：同步调整应用URL。</li><li>微信公众号负责人：同步调整微信公众号后台API的URL。</li></ul></li><li>HTTPS证书管理员：负责提供HTTPS证书。</li><li>CDN对接人：负责调整CDN设置，包括引入CDN加速、导入HTTPS证书等。</li><li>域名管理员：负责在CDN设置好之后调整域名的CNAME记录。</li></ul><p>约定好实施日期与负责人联系方式，后面部分工作需各方同步进行。</p><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>由于域名已准备好，无需再做准备工作，否则要事先把一二级域名准备好并完成备案。</p><p>务必将 <span class="exturl" data-url="aHR0cDovL3d3dy54eHguY29t">www.xxx.com<i class="fa fa-external-link-alt"></i></span> 与 weixin.xxx.com 解析出的IP记录下来，否则套CDN之后再想找源头IP会很麻烦。</p><h2 id="HTTPS证书"><a href="#HTTPS证书" class="headerlink" title="HTTPS证书"></a>HTTPS证书</h2><p>需购买HTTPS证书。具体内容本文不再讨论。</p><h2 id="CDN服务"><a href="#CDN服务" class="headerlink" title="CDN服务"></a>CDN服务</h2><p>需购买第三方CDN服务，并调好基本设置，准备随时启用。</p><h2 id="应用程序改造"><a href="#应用程序改造" class="headerlink" title="应用程序改造"></a>应用程序改造</h2><p>需对应用程序进行排查和改造，防止协议升级之后无法访问。改造完成后，需使用HTTPS域名进行测试，避免生产环境发生异常。</p><p>注意，由于修改域名解析需要最长24小时才能生效，在切换期间，需保证HTTP和HTTPS都能正常运行。</p><h3 id="URL排查"><a href="#URL排查" class="headerlink" title="URL排查"></a>URL排查</h3><p>浏览器通常会阻止加载Mixed Content（HTTPS页面中的HTTP资源），因此需检查前端代码和后端代码中是否有写死的网址（可用查找功能搜索“http://”），如果有http，需修改成无协议网址（例如<code>//www.xxx.com/static/js/xxx.js</code>）或https。</p><p>需要特别留意AJAX请求和POST请求。改造完成后，访问HTTP，可能会被302到HTTPS页面中，而302跳转不仅对效率有影响，还无法正确处理POST请求。</p><h3 id="安全组件排查"><a href="#安全组件排查" class="headerlink" title="安全组件排查"></a>安全组件排查</h3><p>如果应用中有安全组件（例如<a href="/2019/08/25/security-filter">简单粗暴的那种</a>），需检查URL由HTTP修改为HTTPS之后是否会被错误地拦截。</p><h3 id="接口排查"><a href="#接口排查" class="headerlink" title="接口排查"></a>接口排查</h3><p>如果对接厂商使用了我们的域名，需通知相关厂商同步调整系统URL。</p><h1 id="实施工作"><a href="#实施工作" class="headerlink" title="实施工作"></a>实施工作</h1><h2 id="用户公告"><a href="#用户公告" class="headerlink" title="用户公告"></a>用户公告</h2><p>提前通知用户：系统将进行维护，为避免业务数据丢失，请尽量避免在系统维护时段办理业务。</p><h2 id="系统部署"><a href="#系统部署" class="headerlink" title="系统部署"></a>系统部署</h2><p>分为应用程序部署、CDN部署与域名CNAME记录调整，这三项操作需同步进行。</p><h3 id="应用程序部署"><a href="#应用程序部署" class="headerlink" title="应用程序部署"></a>应用程序部署</h3><p>我们和第三方接口对接厂商需及时将新版应用部署到生产环境。</p><h3 id="CDN部署"><a href="#CDN部署" class="headerlink" title="CDN部署"></a>CDN部署</h3><p>首先，在CDN控制台需开启两个网站的加速：</p><table><thead><tr><th>域名</th><th>回源地址</th><th>端口</th></tr></thead><tbody><tr><td><span class="exturl" data-url="aHR0cDovL3d3dy54eHguY29t">www.xxx.com<i class="fa fa-external-link-alt"></i></span></td><td>xx.yy.zz.aa</td><td>80</td></tr><tr><td>weixin.xxx.com</td><td>xx.yy.zz.bb</td><td>80</td></tr></tbody></table><p>其次需上传HTTPS证书，或通过其他CDN平台支持的方式导入证书，然后再开启HTTPS支持。</p><p>在不同CDN厂商控制台中，HTTPS支持的形式可能不同。可根据自己需要来决定继续提供HTTP访问，还是全部重定向到HTTPS。无论如何调整参数，我们需记住，HTTP到HTTPS的升级是由CDN来实现的，原站没有进行改动，始终是HTTP协议、80端口。</p><h3 id="域名CNAME记录调整"><a href="#域名CNAME记录调整" class="headerlink" title="域名CNAME记录调整"></a>域名CNAME记录调整</h3><p>CDN设置好之后，需登录域名管理控制台，按照CDN平台所提供信息修改 <span class="exturl" data-url="aHR0cDovL3d3dy54eHguY29t">www.xxx.com<i class="fa fa-external-link-alt"></i></span> 和 weixin.xxx.com 的CNAME记录。</p><h2 id="微信后台调整"><a href="#微信后台调整" class="headerlink" title="微信后台调整"></a>微信后台调整</h2><p>登录微信公众号管理界面，修改API的地址，由HTTP改为HTTPS。</p><p>如果公众号有菜单，且菜单中涉及 weixin.xxx.com 的URL，那么需要更新一下公众号菜单。</p><h2 id="网络策略调整"><a href="#网络策略调整" class="headerlink" title="网络策略调整"></a>网络策略调整</h2><p>调整服务器网络策略，放行CDN节点的IP地址。在域名记录修改彻底生效之后，可进一步增加策略，拦截除CDN之外的所有IP访问。</p><h1 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h1><p>由于域名CNAME调整可能不会马上生效，需要通过修改hosts的方式进行访问验证。系统正常运行则说明改造完成。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了提升Web系统安全性，我们需对生产系统进行HTTPS改造，改造实质上可以通过套CDN来实现。本文即整个改造工作的实施方案。&lt;/p&gt;
    
    </summary>
    
    
      <category term="系统运维" scheme="https://plusnan.me/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="CDN" scheme="https://plusnan.me/tags/CDN/"/>
    
      <category term="HTTPS" scheme="https://plusnan.me/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>Web应用出现奇怪故障，原因居然是机房偷偷部署了WAF（Web应用防火墙）……</title>
    <link href="https://plusnan.me/2019/10/07/waf/"/>
    <id>https://plusnan.me/2019/10/07/waf/</id>
    <published>2019-10-06T16:00:00.000Z</published>
    <updated>2020-05-03T14:23:55.177Z</updated>
    
    <content type="html"><![CDATA[<p>近期用户反馈系统出现奇怪故障，根据系统架构对系统的每个环节都进行了排查，却未发现问题。一番折腾之后，才知道是甲方偷偷地部署了WAF（Web应用防火墙）……</p><a id="more"></a><p>（本文根据回忆编写，文中系统架构、URL与代码均为虚构）</p><h1 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a>问题现象</h1><ul><li>业务操作A从某时起突然开始提示“操作失败”，且更换账号、清理缓存、更换浏览器等方案皆无效，用户反馈显示所有人都无法成功办理业务。</li><li>业务操作B从差不多的时间开始出故障，点击按钮没有反应，更换账号或浏览器同样无效。</li><li>其他业务未反馈异常。</li><li>询问实施与运维人员，确认近期没有碰过生产应用、生产数据库或其他相关服务器。</li></ul><h1 id="系统部署架构"><a href="#系统部署架构" class="headerlink" title="系统部署架构"></a>系统部署架构</h1><p>业务系统采用了既经典又传统的Web应用部署架构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  Internet     |                    机房</span><br><span class="line">               |</span><br><span class="line">用户 ← CDN ← 网关 ← 负载均衡 ← 应用服务器（集群） ← 数据库服务器</span><br><span class="line">               |                     ↑</span><br><span class="line">               |                 Redis服务器</span><br><span class="line">               |</span><br></pre></td></tr></table></figure><p>根据架构图，询问各环节是否靠谱：</p><ul><li>用户经常“出故障”，然而本次已确认是系统问题，不是用户环境或操作问题。</li><li>CDN由一家比较靠谱的第三方公司提供，出故障机率不大。</li><li>负载均衡设备由一家比较靠谱的厂商生产，没有故障记录。</li><li>Redis服务器、数据库服务器偶尔出故障，但本次业务问题应该与数据库无关（猜测，需要进一步确认）。</li><li>应用服务器集群，每个节点部署的应用完全相同。应用服务器有故障记录，而且有些不靠谱的开发人员会把bug带到生产系统。</li></ul><h1 id="检查过程"><a href="#检查过程" class="headerlink" title="检查过程"></a>检查过程</h1><p>因故障发生前后未对生产系统服务器进行操作，首先排除自己人操作导致故障的可能性。</p><p>接下来排除集群节点故障，因为集群各节点应用相同，且只有特定功能失败，其他功能正常，不会是节点卡死导致的。</p><p>然后又排除了CDN的原因——通过修改自己电脑的hosts文件绕过了CDN，直接与服务器原始IP连接，问题依旧。</p><p>向开发人员确认两业务的代码：操作A是Ajax请求，操作B是普通的form表单提交。</p><p>下面分别分析A与B两个业务的情况。</p><h2 id="业务A"><a href="#业务A" class="headerlink" title="业务A"></a>业务A</h2><p>使用浏览器控制台观察请求，发现业务A在Networks页面现象如下：</p><p><img src="/img/2019-10-07-waf/a-1.png" alt="a-1"></p><p>其他请求正常，说明应用服务器没挂，唯独这个个别业务可能有bug。需要登录服务器检查应用后台日志。</p><p>登录到服务器，对每个节点的应用日志进行检查，未发现报错。重复操作几遍之后再检查日志，仍然未发现报错。我们怀疑程序未打错误日志。</p><p>然而再仔细观察浏览器抓包的内容：</p><p><img src="/img/2019-10-07-waf/a-2.png" alt="a-2"></p><p>从图中可以发现，在Header里面未找到“Response Headers”，没有返回内容，“General”中也没有找到“Status Code”，说明甚至没有HTTP状态码。看来连接可能是被“掐断”了。</p><p>再用curl测试一下。本地调用的话是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ curl -v -X POST -H &quot;Content-Type: application&#x2F;json&quot; -b &quot;JSESSIONID&#x3D;从服务器拷过来的cookie&quot; -d &quot;从浏览器抓到的AJAX提交的内容&quot; http:&#x2F;&#x2F;www.xxx.com&#x2F;business&#x2F;submit</span><br><span class="line">*   Trying xxx.xxx.xxx.xxx...</span><br><span class="line">* TCP_NODELAY set</span><br><span class="line">* Connected to www.xxx.com (xxx.xxx.xxx.xxx) port 80 (#0)</span><br><span class="line">&gt; POST &#x2F;business&#x2F;submit HTTP&#x2F;1.1</span><br><span class="line">&gt; Host: www.xxx.com</span><br><span class="line">&gt; User-Agent: curl&#x2F;7.58.0</span><br><span class="line">&gt; Accept: *&#x2F;*</span><br><span class="line">&gt; Cookie: JSESSIONID&#x3D;xxxxxxx</span><br><span class="line">&gt; Content-Type: application&#x2F;json</span><br><span class="line">&gt; Content-Length: xxx</span><br><span class="line">&gt;</span><br><span class="line">* upload completely sent off: xxx out of xxx bytes</span><br><span class="line">* Empty reply from server</span><br><span class="line">* Connection #0 to host xxx.xxx.xxx.xxx left intact</span><br><span class="line">curl: (52) Empty reply from server</span><br><span class="line">* Closing connection 0</span><br></pre></td></tr></table></figure><p>未返回任何数据。</p><p>但登录到服务器里面操作就能返回HTTP 200 OK，还能看到JSON串，说明应用能正常响应：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># curl -v -X POST -H &quot;Content-Type: application&#x2F;json&quot; -b &quot;JSESSIONID&#x3D;从服务器拷过来的cookie&quot; -d &quot;从浏览器抓到的AJAX提交的内容&quot; http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;business&#x2F;submit</span><br><span class="line">*   Trying 127.0.0.1...</span><br><span class="line">* TCP_NODELAY set</span><br><span class="line">* Connected to 127.0.0.1 port 8080 (#0)</span><br><span class="line">&gt; POST &#x2F;business&#x2F;submit HTTP&#x2F;1.1</span><br><span class="line">&gt; Host: 127.0.0.1:8080</span><br><span class="line">&gt; User-Agent: curl&#x2F;7.58.0</span><br><span class="line">&gt; Accept: *&#x2F;*</span><br><span class="line">&gt; Cookie: JSESSIONID&#x3D;xxxxxxx</span><br><span class="line">&gt; Content-Type: application&#x2F;json</span><br><span class="line">&gt; Content-Length: xxx</span><br><span class="line">&gt;</span><br><span class="line">&lt; HTTP&#x2F;1.1 200 OK</span><br><span class="line">&lt; Cache-Control: no-cache</span><br><span class="line">&lt; Connection: keep-alive</span><br><span class="line">&lt; Content-Length: xxx</span><br><span class="line">&lt; Content-Type: application&#x2F;json</span><br><span class="line">&lt; Date: xxx, xx xxx xxxx xx:xx:xx GMT</span><br><span class="line">&lt;</span><br><span class="line">一个乱七八糟的JSON串</span><br><span class="line"></span><br><span class="line">* Connection #0 to host 127.0.0.1 left intact</span><br><span class="line">* Closing connection 0</span><br></pre></td></tr></table></figure><p>将127.0.0.1:1080换成负载均衡地址，重复操作几遍，仍然返回200 OK，说明负载均衡设备应该没有问题。另外对JSON串的内容进行检查，发现提示“办理“成功”或“办理失败！请勿重复办理！”，说明数据库也是正常的，否则不可能校验出“重复办理”。</p><h2 id="业务B"><a href="#业务B" class="headerlink" title="业务B"></a>业务B</h2><p>在进入B业务页面时，浏览器控制台显示oper.js有JavaScript语法错误：</p><p><img src="/img/2019-10-07-waf/b.png" alt="oper.js"></p><p>直接用浏览器查看oper.js内容，发现JavaScript脚本并未完整加载。分别在本地和服务器上使用curl命令获取oper.js内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在本地操作：</span><br><span class="line">$ curl http:&#x2F;&#x2F;www.xxx.com&#x2F;static&#x2F;js&#x2F;oper.js</span><br><span class="line">curl: (18) transfer closed with outstanding read data remaining</span><br><span class="line">一堆不完整的js代码</span><br><span class="line"></span><br><span class="line">登录到服务器：</span><br><span class="line"># curl http:&#x2F;&#x2F;127.0.0.1:8080&#x2F;static&#x2F;js&#x2F;oper.js</span><br><span class="line">一堆完整的js代码</span><br></pre></td></tr></table></figure><p>发现：在我们电脑上执行curl，脚本还没加载完整，网络连接就被“掐断”了；在服务器上执行curl（域名分别使用127.0.0.1:8080与负载均衡地址），脚本内容能完整加载。</p><h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>根据上面一系列现象判断，我们确认现有系统与设备未发生故障，可能某个环节调整了安全策略，导致正常请求被错误拦截。</p><p>和甲方负责人员沟通之后，得知机房近期部署了WAF，但甲方既未通知各相关单位，也未派人观察WAF拦截记录。我们直接和WAF负责人员沟通，维护白名单之后问题解决。</p><h1 id="附录：比对本地与生产环境js"><a href="#附录：比对本地与生产环境js" class="headerlink" title="附录：比对本地与生产环境js"></a>附录：比对本地与生产环境js</h1><p>与Ajax相比，对js进行排查比较简单，可以通过脚本实现。</p><p>向实施人员索要WAR包，解压到某个位置，并在终端中cd到那个位置，然后可通过一段shell脚本来进行比对：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">find . -name <span class="string">'*.js'</span> | <span class="keyword">while</span> <span class="built_in">read</span> file; <span class="keyword">do</span></span><br><span class="line">  url=<span class="string">"http://www.xxx.com/<span class="variable">$&#123;file/.\//&#125;</span>"</span></span><br><span class="line"> </span><br><span class="line">  sha_1=`shasum <span class="string">"<span class="variable">$file</span>"</span> | cut -f 1 -d <span class="string">" "</span>`</span><br><span class="line">  sha_2=`curl <span class="string">"<span class="variable">$url</span>"</span> 2&gt;/dev/null | shasum | cut -f 1 -d <span class="string">" "</span>`</span><br><span class="line">  <span class="keyword">if</span> [[ <span class="variable">$sha_1</span> != <span class="variable">$sha_2</span> ]]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"ERROR: <span class="variable">$url</span>"</span> &gt;&amp;2</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>检查报错的URL，如果确实是js文件未完整加载，那么可以拉清单让WAF负责人放行。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近期用户反馈系统出现奇怪故障，根据系统架构对系统的每个环节都进行了排查，却未发现问题。一番折腾之后，才知道是甲方偷偷地部署了WAF（Web应用防火墙）……&lt;/p&gt;
    
    </summary>
    
    
      <category term="系统运维" scheme="https://plusnan.me/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Web" scheme="https://plusnan.me/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>并不简单的基础开发工作（三）：信息录入表单</title>
    <link href="https://plusnan.me/2019/09/21/edit-page/"/>
    <id>https://plusnan.me/2019/09/21/edit-page/</id>
    <published>2019-09-20T16:00:00.000Z</published>
    <updated>2020-01-30T13:08:38.111Z</updated>
    
    <content type="html"><![CDATA[<p>本文继续以“学生信息管理系统”为例，讲述信息录入表单设计与开发中的一些问题。</p><a id="more"></a> <h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><p>在<a href="/2019/02/09/list-page/">前一篇文章所需功能</a>的基础上，实现学生信息录入页面：</p><table>    <tbody>        <tr>            <td>身份证号码：</td>            <td><input type="text"></td>            <td rowspan="5" style="text-align: center;">                <img width="150" src="/img/2019-09-21-edit-page/photo.png">                <a class="btn" href="#"><i class="fa fa-arrow-circle-up fa-fw"></i>&nbsp;上传照片</a>            </td>        </tr>        <tr>            <td>姓名：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>性别：</td>            <td>                <input type="radio" name="gender" id="male">                <label for="male">男</label>                <input type="radio" name="gender" id="female">                <label for="female">女</label>            </td>        </tr>        <tr>            <td>民族：</td>            <td><select><option>请选择</option></select></td>        </tr>        <tr>            <td>户籍地址：</td>            <td><select><option>请选择</option></select><select><option>--</option></select><select><option>--</option></select></td>        </tr>        <tr>            <td>出生日期：</td>            <td colspan="2"><input type="text">年<input type="text">月<input type="text">日</td>        </tr>        <tr>            <td>学院：</td>            <td colspan="2"><select><option>请选择</option></select></td>        </tr>        <tr>            <td>班级：</td>            <td colspan="2"><input type="text"></td>        </tr>        <tr>            <td>学号：</td>            <td colspan="2"><input type="text"></td>        </tr>        <tr>            <td>联系电话：</td>            <td colspan="2"><input type="text"></td>        </tr>        <tr>            <td>未来意向：</td>            <td colspan="2"><select><option>请选择</option></select></td>        </tr>        <tr>            <td>荣誉或奖励：</td>            <td colspan="2"><textarea></textarea></td>        </tr>        <tr>            <td>所受处分：</td>            <td colspan="2"><textarea></textarea></td>        </tr>    </tbody></table><a class="btn" href="#">            <i class="fa fa-save fa-fw"></i>保存          </a><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>当用户点击“保存”按钮时，浏览器会将表单输入内容发送给后台，后台接收到数据（通常由框架实现）之后，需要进行一些校验，校验通过后，将输入内容INSERT到数据库中。</p><p>除了新增内容，用户有时需要对现有内容进行修改。这时候需要由列表页面向表单页面传入现有内容的id。表单页面加载之前，需根据此id去数据库读取记录，并将数据库内容展示到用户页面中。当用户点击保存时，除了页面输入内容，此id也要传到后台，这样后台才能得知用户是修改已有记录并执行UPDATE操作，而不是增加新记录。</p><h1 id="设计方面的问题"><a href="#设计方面的问题" class="headerlink" title="设计方面的问题"></a>设计方面的问题</h1><h2 id="自由输入"><a href="#自由输入" class="headerlink" title="自由输入"></a>自由输入</h2><p>能做成选择题的地方就不要做成填空题！</p><p>如果把可以做成选择题的地方做成填空题，让用户自由输入，会难以规范输入内容，给后续统计、分析等工作带来麻烦。例如填写地址，同样是山东莱芜（莱芜已并入山东省会济南），用户可以填成：</p><ul><li>莱芜</li><li>莱芜市</li><li>山东莱芜</li><li>山东省莱芜市</li><li>山东莱芜市</li><li>山东省莱芜</li><li>山东省济南市莱芜区</li><li>山东省济南市来无区（不小心打错字了）</li><li>山东省济南市莱城区（写成了旧地名，还写错了）</li><li>济南市莱芜区</li><li>山东 莱芜</li><li>山東省濟南市萊蕪區（忘把繁体字开关关掉了）</li><li>……</li></ul><h2 id="页面布局"><a href="#页面布局" class="headerlink" title="页面布局"></a>页面布局</h2><p>录入表单是一件令人不爽的事情，操作时间长了，很容易陷入疲劳。</p><p>如果页面摆放凌乱，该对齐的地方不对齐，字体、字号、间距不一致，用户肯定感到不爽。就算有对齐，各页面风格不一致（甚至同一页面内部风格就不一致）也会让人迷惑。</p><p>如果需要录入的字段很多，页面应适当分组，让用户有“喘气”的时间，例如：</p><table>    <tbody>        <tr>            <th colspan="2">基本信息</th>        </tr>        <tr>            <td>身份证号码：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>姓名：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>性别：</td>            <td>                <input type="radio" name="gender" id="male">                <label for="male">男</label>                <input type="radio" name="gender" id="female">                <label for="female">女</label>            </td>        </tr>        <tr>            <td colspan="2">...</td>        </tr>        <tr>            <th colspan="2">学籍信息</th>        </tr>        <tr>            <td>学院：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>班级：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>学号：</td>            <td><input type="text"></td>        </tr>        <tr>            <td colspan="2">...</td>        </tr>        <tr>            <th colspan="2">学生个人发展信息</th>        </tr>        <tr>            <td>未来意向：</td>            <td><input type="text"></td>        </tr>        <tr>            <td colspan="2">...</td>        </tr>    </tbody></table><p>或者</p><table>    <tbody>        <tr>            <td colspan="2" style="text-align: center;">                <span style="border: 1px solid black; border-radius: 50px; width: 30px; height: 30px; display: inline-block; color: white; background-color: black;">1</span>                基本信息                →                <span style="border: 1px solid black; border-radius: 50px; width: 30px; height: 30px; display: inline-block;;">2</span>                学籍信息                →                <span style="border: 1px solid black; border-radius: 50px; width: 30px; height: 30px; display: inline-block;">3</span>                学生发展情况            </td>        </tr>        <tr>            <td>身份证号码：</td>            <td><input type="text"></td>        </tr>        <tr>            <td>姓名：</td>            <td><input type="text"></td>        </tr>        <tr>            <td colspan="2">...</td>        </tr>        <tr>            <th colspan="2" style="text-align: right;">                <a class="btn" href="#"><i class="fa fa-arrow-circle-right fa-fw"></i>&nbsp;下一步</a>            </th>        </tr>    </tbody></table><h2 id="选填与必填"><a href="#选填与必填" class="headerlink" title="选填与必填"></a>选填与必填</h2><p>如果页面既有必填项，也有选填项，应明确告知用户，这样用户就能及时把必填项填好。如果用户点提交按钮的时候才知道页面开头有个东西是必填项，而且需要自己翻到页面开头把东西填好，心情一定会非常差。</p><p>区分必填和选填也有一些技巧，例如：</p><ul><li>全部为必填项时，不需要特意告知用户字段必填。可以用校验代替。</li><li>必填项比选填项多时，选填项提示<code>（选填）</code>。</li><li>选填项比必填项多时，必填项提示<code>(*)</code>。</li><li>全部是选填项时，需要在业务层面考虑一下必要性。如果确实需要，在页面顶部显眼位置给出提示。</li></ul><p>排布字段时，尽量把必填项放前面，选填项放后面。</p><h2 id="不必要的字段"><a href="#不必要的字段" class="headerlink" title="不必要的字段"></a>不必要的字段</h2><p>尽量减少字段数量。如果字段在业务上没有意义，而技术上又是必需的（例如id、数据有效性等），那么不要暴露给用户，放到后台处理。</p><p>常用字段可以提供默认值，例如“民族”默认值可以设置成“汉族”（通常是汉族人多——如果不是民族学校的话）。能自动填写的字段也尽量做成自动填写，例如自动带出历史数据，或者在填好“身份证号”之后，由系统自动填写“生日”和“性别”。</p><h2 id="提示信息"><a href="#提示信息" class="headerlink" title="提示信息"></a>提示信息</h2><p>提示信息应该简单、明确，并且措辞要考虑实际业务场景，避免产生歧义。举一些不好的例子：</p><ul><li><code>请输入姓名（必填）：[    ]</code>（啰嗦，<code>姓名(*)：</code>就够了）</li><li><code>电话号（格式：xxx-xxxxxxx）：[     ]</code>（应当用input标签的placeholder代替）</li><li><code>类型：[     ]</code>（“类型”、“情况”等词语语意含糊，容易产生歧义，除非业务本身就这么叫）</li></ul><p>对于用户容易犯错误的地方：</p><ul><li>如果能由程序“消化”，例如输入数据包含空格，那么默默地“消化”即可。</li><li>否则给加个显眼的提示，例如提示“2019级”和“2019届”的区别。</li></ul><p>“表单填写注意事项”要放在醒目位置，用醒目的样式书写，以便引起用户重视。许多人经常不在乎注意事项，所以行文更要挑重点，避免占篇幅。值得注意但能让用户在填写时顺便留意的事情可以交给校验处理。</p><h2 id="“下一个”"><a href="#“下一个”" class="headerlink" title="“下一个”"></a>“下一个”</h2><p>需要考虑一下业务场景：在实际操作时，用户需要录入的数据多吗？</p><p>如果数据量比较多，那么建议给用户加个“下一个”按钮，录完一个就直接进下一个（当然别忘了把数据给保存好），节约时间。数量越多，节约效果越好。</p><h1 id="实现方面的问题"><a href="#实现方面的问题" class="headerlink" title="实现方面的问题"></a>实现方面的问题</h1><h2 id="权限问题"><a href="#权限问题" class="headerlink" title="权限问题"></a>权限问题</h2><p>在读取数据和保存数据时应对用户权限进行验证，防止读取或修改无权操作的记录。</p><p>假如编辑的URL是<code>http://127.0.0.1:8080/student/edit/3</code>，而数据库id=2的记录是其他人录入的，我们无权操作，那么在浏览器输入<code>http://127.0.0.1:8080/student/edit/2</code>之后就不应该把数据库里的数据查出来，否则就是一个严重的安全漏洞。</p><h2 id="重复提交问题"><a href="#重复提交问题" class="headerlink" title="重复提交问题"></a>重复提交问题</h2><p>开发环境的网络往往非常好，点完按钮就能跳转到操作成功的页面。但是，用户的网络不一定非常好，他们可能急于操作，担心系统保存不上而反复点击提交按钮，这样会产生多条提交的请求，系统可能也会产生多条相同记录。</p><p>这类问题有两种解决方法：</p><p>一种是在表单中设置隐藏的token，每次进入表单都生成不同的token。一旦重复提交，系统会发现token已经无效而拒绝进一步操作。有一种常见的Web攻击方式是跨站请求伪造攻击（CSRF），Web框架通常会提供基于token的解决方案，顺便就把重复提交问题给解决了。</p><p>还有一种简单粗暴却很有效果的方法：点击提交按钮之后，相关按钮立刻变灰，不允许用户点击，并且由页面给出“正在保存”的反馈信息，使用户能够耐心等待表单提交。当然，一旦保存失败，不要忘记让按钮变回原来可以点击的状态。</p><h2 id="校验问题"><a href="#校验问题" class="headerlink" title="校验问题"></a>校验问题</h2><p>前台校验是不可信任的：如果只在前台进行校验，未在后台进行校验，那么用户就可以先进入浏览器控制台，再输入<code>document.forms[0].submit()</code>来绕过各类校验。出于安全考虑，即使赶工或偷懒，也要先把后台校验给做好。</p><p>校验失败的错误提示不要含糊不清，不要只告诉用户“输入内容有误”，而是要告诉用户“手机号格式错误、学号格式错误”。除此之外，报错要避免像挤牙膏一样一次只提示一种错误，尽量一口气把所有错误都告诉用户，否则用户改了好几遍还提交不上去，心情就是崩溃的了。</p><p>另外，各表单校验风格应当统一：A页面将所有错误用一个弹窗提示出来，而B页面将每个错误字段的提示信息都放在对应字段右边，这样也会让用户困扰。</p><p>为了规避这些问题，建议使用（或自行实现专门的）校验框架来实现校验，既能统一行为，又能简化代码，让后续调整也变得方便些。</p><h2 id="没有反馈"><a href="#没有反馈" class="headerlink" title="没有反馈"></a>没有反馈</h2><p>用户提交完成后，系统不要什么反馈都没有，否则用户容易认为系统有故障。系统要给用户一个明显的信号，例如提示“提交成功”，或者直接进入下一步操作页面。即使又回到了输入页面，也不要让用户输入数据发生变化甚至消失。</p><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ol><li><a href="/2019/02/08/login-page/">登录页面</a></li><li><a href="/2019/02/09/list-page/">信息展示列表</a></li><li><strong>信息录入表单</strong></li><li>业务申办-审批流程</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文继续以“学生信息管理系统”为例，讲述信息录入表单设计与开发中的一些问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="功能设计" scheme="https://plusnan.me/tags/%E5%8A%9F%E8%83%BD%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>实现一个简单粗暴的Java Web安全过滤器</title>
    <link href="https://plusnan.me/2019/08/25/security-filter/"/>
    <id>https://plusnan.me/2019/08/25/security-filter/</id>
    <published>2019-08-24T16:00:00.000Z</published>
    <updated>2020-04-22T14:04:47.366Z</updated>
    
    <content type="html"><![CDATA[<p>对于行业系统来说，如果开发人员水平一般，而且又忙于赶工期，Web安全问题就很容易抛到脑后。然而，在这类系统中，用户输入内容往往是业务相关的，范围可以预测，不会特意输入敏感词语，因此又可以用简单粗暴的方法挡住大部分常见攻击。</p><p>在Java应用中，页面加载之前会先经过过滤器（Filter），我们便可以设置一个安全过滤器SecurityFilter，以“宁可错杀一万，不可放过一个”的方式拦截常见攻击，满足基本的安全需求。</p><a id="more"></a><h1 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h1><p>建立SecurityFilter类，假如包名称为com.testcompany.testapp.utils.filter，骨架如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.testcompany.testapp.utils;</span><br><span class="line"></span><br><span class="line"><span class="comment">//import org.springframework.stereotype.Component;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest httpRequest = (HttpServletRequest) request;</span><br><span class="line">        HttpServletResponse httpResponse = (HttpServletResponse) response;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> intercept = <span class="keyword">false</span>;</span><br><span class="line">        String message = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取请求 URL 和 URI</span></span><br><span class="line">        String url = httpRequest.getRequestURL().toString();</span><br><span class="line">        String uri = httpRequest.getRequestURI();</span><br><span class="line"></span><br><span class="line">        logger.debug(<span class="string">"url: "</span> + url);</span><br><span class="line">        logger.debug(<span class="string">"uri: "</span> + uri);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是否属于白名单，直接放行</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 各种策略</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 结果</span></span><br><span class="line">        <span class="keyword">if</span> (!intercept) &#123;</span><br><span class="line">            <span class="comment">// 正常请求</span></span><br><span class="line">            chain.doFilter(request, response);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 被拦截，转发到报错页面</span></span><br><span class="line">            request.setAttribute(<span class="string">"message"</span>, message);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/error"</span>).forward(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 安全过滤器销毁</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码未进行任何拦截，我们将在后面逐步完善拦截规则。</p><p>如果你的项目有web.xml，那么需要加入以下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>SecurityFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.testcompany.testapp.utils.SecurityFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>SecurityFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果你的项目没有web.xml，例如SpringBoot项目，那么你需要给SecurityFilter增加相关注解（@Component）。</p><h1 id="具体规则"><a href="#具体规则" class="headerlink" title="具体规则"></a>具体规则</h1><h2 id="防止SQL注入、跨站脚本攻击（XSS）"><a href="#防止SQL注入、跨站脚本攻击（XSS）" class="headerlink" title="防止SQL注入、跨站脚本攻击（XSS）"></a>防止SQL注入、跨站脚本攻击（XSS）</h2><p>可考虑采取敏感词的形式来预防SQL注入和XSS攻击。假设敏感词列表（具体词语参见文末）放在了<code>bannedKeywords</code>中，那么可提取GET/POST参数进行匹配：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!intercept) &#123;</span><br><span class="line">    <span class="comment">// 获取GET/POST参数</span></span><br><span class="line">    Map&lt;String, String[]&gt; paramMap = httpRequest.getParameterMap();</span><br><span class="line"></span><br><span class="line">    post_filter:</span><br><span class="line">    <span class="keyword">for</span> (String param: paramMap.keySet()) &#123;</span><br><span class="line">        <span class="keyword">for</span> (String keyword: bannedKeywords) &#123;</span><br><span class="line">            <span class="keyword">if</span> (param.toLowerCase().contains(keyword)) &#123;</span><br><span class="line">                intercept = <span class="keyword">true</span>;</span><br><span class="line">                message = <span class="string">"检测到非法字符【"</span> + keyword + <span class="string">"】，请重新输入！"</span>;</span><br><span class="line">                <span class="keyword">break</span> post_filter;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        String[] values = paramMap.get(param);</span><br><span class="line">        <span class="keyword">if</span> (values != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String value: values) &#123;</span><br><span class="line">                <span class="keyword">for</span> (String keyword: bannedKeywords) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (value.toLowerCase().contains(keyword)) &#123;</span><br><span class="line">                        intercept = <span class="keyword">true</span>;</span><br><span class="line">                        message = <span class="string">"检测到非法字符【"</span> + keyword + <span class="string">"】，请重新输入！"</span>;</span><br><span class="line">                        <span class="keyword">break</span> post_filter;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外再通过设置安全相关HTTP Header来加强防御：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 浏览器拒绝响应MIME类型不正确的资源</span></span><br><span class="line">httpResponse.setHeader(<span class="string">"X-Content-Type-Options"</span>, <span class="string">"nosniff"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 内容安全策略（CSP）设置</span></span><br><span class="line"><span class="comment">// 参见：http://www.ruanyifeng.com/blog/2016/09/csp.html</span></span><br><span class="line"><span class="comment">// httpResponse.setHeader("Content-Security-Policy", "default-src 'self'");</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 浏览器防XSS设置</span></span><br><span class="line"><span class="comment">// 参见：https://www.freebuf.com/articles/web/138769.html</span></span><br><span class="line">httpResponse.addHeader(<span class="string">"X-XSS-Protection"</span>, <span class="string">"1; mode=block"</span>);</span><br></pre></td></tr></table></figure><p>需要注意的是：</p><ol><li>敏感词机制非常容易导致误判（例如拦截<code>AND</code>会把正常的英语内容也给拦截掉），需要增加例外机制，并结合业务进行充分测试。</li><li>敏感词机制无法防止所有注入，例如攻击者仍然可以通过字符编码、加空格、加回车、加注释等方式来绕过拦截。</li><li>上面GET/POST参数检测无法检测Restful API和JSON请求。如果业务有这两种请求，需另外写代码进行处理。</li></ol><h2 id="防止跨站请求伪造（CSRF）"><a href="#防止跨站请求伪造（CSRF）" class="headerlink" title="防止跨站请求伪造（CSRF）"></a>防止跨站请求伪造（CSRF）</h2><p>可以通过两种方式预防CSRF攻击，一个是校验Referer，另一个是在表单中设置并验证token。对于拦截器来说，前一种实现方式比较简单。</p><p>假如Referer域名白名单为<code>hostWhiteList</code>，那么代码可以写成：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">String referer = httpRequest.getHeader(<span class="string">"Referer"</span>);</span><br><span class="line"><span class="keyword">if</span> (!intercept &amp;&amp; referer != <span class="keyword">null</span>) &#123;</span><br><span class="line">    String domain = referer.replaceAll(<span class="string">"^https?:\\/\\/(.*?)\\/.*"</span>, <span class="string">"$1"</span>).toLowerCase();</span><br><span class="line">    <span class="keyword">if</span> (!hostWhiteList.contains(domain)) &#123;</span><br><span class="line">        intercept = <span class="keyword">true</span>;</span><br><span class="line">        message = <span class="string">"检测到未经授权的访问，请从官方网站登录系统，并检查操作是否正常！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为了防止非法提交，可进一步考虑限制POST请求中必须有合法Referer。</p><h2 id="Host头攻击"><a href="#Host头攻击" class="headerlink" title="Host头攻击"></a>Host头攻击</h2><p>此攻击主要针对虚拟主机，换句话说，如果服务器上只有一个站点，Host头攻击实际上没有意义。然而，为了应付甲方检查，可能需要再加一遍限制：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String host = httpRequest.getHeader(<span class="string">"Host"</span>);</span><br><span class="line"><span class="keyword">if</span> (!intercept &amp;&amp; host != <span class="keyword">null</span> &amp;&amp; !hostWhiteList.contains(host.toLowerCase())) &#123;</span><br><span class="line">    intercept = <span class="keyword">true</span>;</span><br><span class="line">    message = <span class="string">"检测到未授权访问，请重新从官方网站登录系统！"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="点击劫持（Clickjacking）漏洞"><a href="#点击劫持（Clickjacking）漏洞" class="headerlink" title="点击劫持（Clickjacking）漏洞"></a>点击劫持（Clickjacking）漏洞</h2><p>加一句话即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 避免点击劫持漏洞</span></span><br><span class="line">httpResponse.addHeader(<span class="string">"X-Frame-Options"</span>, <span class="string">"sameorigin"</span>);</span><br></pre></td></tr></table></figure><h2 id="防止未登录访问、防止越权访问"><a href="#防止未登录访问、防止越权访问" class="headerlink" title="防止未登录访问、防止越权访问"></a>防止未登录访问、防止越权访问</h2><p>应用需要防止用户未登录就直接访问特定功能的URL。由于不同认证组件的管理方式不同，本文不再展开讨论。</p><p>在校验Cookie和会话时，需留意生产环境是否为集群。若配置负载均衡等设备，同一用户的请求不见得会被同一台服务器接收，实现会话机制时要考虑会话共享问题（例如配置Redis服务器）。</p><h2 id="Cookie加固"><a href="#Cookie加固" class="headerlink" title="Cookie加固"></a>Cookie加固</h2><p>Cookie需设置为HttpOnly、Secure，防止前台通过JavaScript获取到Cookie内容。</p><p>使用比较新的中间件，Cookie应该已经是HttpOnly，或者可以很容易设置成HttpOnly。然而，如果Tomcat等软件太老，你需要手工修改Cookie：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HttpSession session = httpRequest.getSession(<span class="keyword">false</span>);</span><br><span class="line"><span class="keyword">if</span> (session != <span class="keyword">null</span>) &#123;</span><br><span class="line">    String sessionId = session.getId();</span><br><span class="line">    String header = <span class="string">"JSESSIONID="</span> + sessionId + <span class="string">"; Secure; HttpOnly; Path=/"</span>;</span><br><span class="line">    httpResponse.setHeader(<span class="string">"Set-Cookie"</span>, header);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="“使用HTTP动词篡改的认证旁路”"><a href="#“使用HTTP动词篡改的认证旁路”" class="headerlink" title="“使用HTTP动词篡改的认证旁路”"></a>“使用HTTP动词篡改的认证旁路”</h2><p>使用AppScan等扫描软件进行扫描，可能会出现这个问题。解决起来很简单，只留一些常用的动词（GET、POST、OPTIONS等），其余全部拦截。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String method = httpRequest.getMethod();</span><br><span class="line"><span class="keyword">if</span> (!intercept &amp;&amp; !<span class="string">"GET,POST,HEAD,OPTIONS,PUT,DELETE"</span>.contains(method)) &#123;</span><br><span class="line">    intercept = <span class="keyword">true</span>;</span><br><span class="line">    message = <span class="string">"检测到未授权的请求方式！"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你的系统使用了PUT、DELETE等浏览器不支持的动词，需要分两种情况讨论：</p><ul><li>浏览器页面：框架往往会进行一些特殊处理（例如将实际请求方式保存在name为_method的隐藏域中），使浏览器以POST方式提交用户请求。这样的话不需要特意放行PUT和DELETE。</li><li>后台接口：由于调用方不是浏览器，可直接使用相应动词，此时过滤器需放行PUT和DELETE等动词。</li></ul><h2 id="限制指定IP访问-获取用户IP地址"><a href="#限制指定IP访问-获取用户IP地址" class="headerlink" title="限制指定IP访问 / 获取用户IP地址"></a>限制指定IP访问 / 获取用户IP地址</h2><p>不建议在Java层面进行控制。下面只给出获取用户IP的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取用户 IP</span></span><br><span class="line"><span class="comment">// 注意：</span></span><br><span class="line"><span class="comment">// （1）X-Real-IP需要反向代理软件进行配合设置才能获取到。</span></span><br><span class="line"><span class="comment">//      如果反向代理软件配置正确，其值可被信任。</span></span><br><span class="line"><span class="comment">// （2）X-Forwarded-For记录了用户真实IP，但该Header能被用户伪造，不可信任。</span></span><br><span class="line"><span class="comment">// （3）getRemoteAddr返回的是直接访问服务器的IP地址。虽然取值可信，</span></span><br><span class="line"><span class="comment">//     但是配置反向代理、负载均衡等设备之后，getRemoteAddr将返回网络设备IP，而不是用户IP。</span></span><br><span class="line"><span class="comment">// 建议：设置nginx等软件，将用户真实IP记录在X-Real-IP头中。</span></span><br><span class="line">String ip = httpRequest.getHeader(<span class="string">"X-Real-IP"</span>);</span><br><span class="line"><span class="keyword">if</span> (StringUtils.isEmpty(ip)) &#123;</span><br><span class="line">    ip = httpRequest.getHeader(<span class="string">"X-Forwarded-For"</span>);</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isNotEmpty(ip)) &#123;</span><br><span class="line">        <span class="comment">// X-Forwarded-For中可能有多个IP地址，第一个IP是用户真实IP。</span></span><br><span class="line">        ip = ip.split(<span class="string">","</span>)[<span class="number">0</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ip = request.getRemoteAddr();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">logger.debug(<span class="string">"ip: "</span> + ip);</span><br></pre></td></tr></table></figure><h2 id="限制指定浏览器访问"><a href="#限制指定浏览器访问" class="headerlink" title="限制指定浏览器访问"></a>限制指定浏览器访问</h2><p>如果应用不应该直接通过浏览器访问，可对浏览器UA进行限制。例如仅允许微信浏览器访问：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取用户 User-Agent</span></span><br><span class="line"><span class="comment">// 注意：用户可以篡改User-Agent，伪装成各种浏览器</span></span><br><span class="line">String ua = httpRequest.getHeader(<span class="string">"User-Agent"</span>);</span><br><span class="line">logger.debug(<span class="string">"ua: "</span> + ua);</span><br><span class="line"><span class="keyword">if</span> (!intercept &amp;&amp; ua != <span class="keyword">null</span> &amp;&amp; !ua.contains(<span class="string">"MicroMessenger"</span>)) &#123;</span><br><span class="line">    intercept = <span class="keyword">true</span>;</span><br><span class="line">    message = <span class="string">"请使用微信访问本页面！"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>另外，出于友好性考虑，可将报错页面换成微信公众号二维码，以便用户扫描关注。</p><h2 id="直接放行"><a href="#直接放行" class="headerlink" title="直接放行"></a>直接放行</h2><p>有些文件格式完全无害，例如服务器本身提供的js、css等静态资源，可考虑直接放行此类扩展名。</p><p>由于重定向之后会再次经过SecurityFilter，而所有已经拦截的请求都重定向到了报错页面，所以报错页面也需要放行，不要再将报错页面forward到报错页面，导致死循环。</p><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>本过滤器功能简单粗暴，然而仍然会有漏网之鱼，例如通过加注释符号便可绕过SQL注入拦截。</p><p>最有效的解决方案，还是要求开发人员平时就注重安全（例如SQL使用参数绑定、页面渲染时进行HTML转义等），测试人员也针对安全问题进行测试，在上线之前就尽量消除隐患。</p><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><p>以Spring框架为例，将上述代码组合到一起，并加入yml配置文件支持，完整代码如下：</p><p>SecurityFilter.java：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.testcompany.testapp.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.ClassPathResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.yaml.snakeyaml.Yaml;</span><br><span class="line"><span class="keyword">import</span> org.yaml.snakeyaml.error.YAMLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Logger logger = LoggerFactory.getLogger(SecurityFilter<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 系统安全参数设置</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SecurityConfig config = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从配置文件读取系统安全参数配置</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        Yaml yaml = <span class="keyword">new</span> Yaml();</span><br><span class="line">        <span class="keyword">try</span> (InputStream inputStream = <span class="keyword">new</span> ClassPathResource(<span class="string">"security.yml"</span>).getInputStream()) &#123;</span><br><span class="line">            config = yaml.loadAs(inputStream, SecurityConfig<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 报错页面加入安全白名单</span></span><br><span class="line">            config.getUriWhiteList().add(config.getErrorPageUrl());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | YAMLException e) &#123;</span><br><span class="line">            logger.error(<span class="string">"加载安全设置失败"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest httpRequest = (HttpServletRequest) request;</span><br><span class="line">        HttpServletResponse httpResponse = (HttpServletResponse) response;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (config == <span class="keyword">null</span>) &#123;</span><br><span class="line">            request.setAttribute(<span class="string">"message"</span>, <span class="string">"系统安全设置加载失败，请检查错误并重新启动系统！"</span>);</span><br><span class="line">            request.getRequestDispatcher(<span class="string">"/error"</span>).forward(request, response);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取请求 URL 和 URI</span></span><br><span class="line">        String url = httpRequest.getRequestURL().toString();</span><br><span class="line">        String uri = httpRequest.getRequestURI();</span><br><span class="line"></span><br><span class="line">        logger.debug(<span class="string">"url: "</span> + url);</span><br><span class="line">        logger.debug(<span class="string">"uri: "</span> + uri);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是否属于不过滤的白名单URI</span></span><br><span class="line">        <span class="keyword">if</span> (config.getUriWhiteList().contains(uri)) &#123;</span><br><span class="line">            chain.doFilter(request, response);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断是否为白名单扩展名</span></span><br><span class="line">        <span class="keyword">int</span> pos = uri.lastIndexOf(<span class="string">"."</span>);</span><br><span class="line">        <span class="keyword">if</span> (pos &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">            String extName = uri.substring(pos + <span class="number">1</span>).toLowerCase();</span><br><span class="line">            <span class="keyword">if</span> (config.extWhiteList.contains(extName)) &#123;</span><br><span class="line">                chain.doFilter(request, response);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> intercept = <span class="keyword">false</span>;</span><br><span class="line">        String message = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 指定输入/输出字符编码</span></span><br><span class="line">        String encoding = config.getEncoding();</span><br><span class="line">        <span class="keyword">if</span> (encoding != <span class="keyword">null</span>) &#123;</span><br><span class="line">            httpRequest.setCharacterEncoding(encoding);</span><br><span class="line">            httpResponse.setCharacterEncoding(encoding);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断用户是否登录（略）</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 验证用户权限（略）</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 增加Cookie安全性：添加HttpOnly和Secure属性，防止Cookie被通过js非法获取</span></span><br><span class="line">        <span class="comment">// 注意：一般是很老的中间件才需要手动设置</span></span><br><span class="line">        HttpSession session = httpRequest.getSession(<span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">if</span> (session != <span class="keyword">null</span>) &#123;</span><br><span class="line">            String sessionId = session.getId();</span><br><span class="line">            String header = <span class="string">"JSESSIONID="</span> + sessionId + <span class="string">"; Secure; HttpOnly; Path=/"</span>;</span><br><span class="line">            httpResponse.setHeader(<span class="string">"Set-Cookie"</span>, header);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 避免点击劫持漏洞</span></span><br><span class="line">        httpResponse.addHeader(<span class="string">"X-Frame-Options"</span>, <span class="string">"sameorigin"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 跨域资源共享CORS</span></span><br><span class="line">        String origin = httpRequest.getHeader(<span class="string">"Origin"</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(origin)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (config.getCorsWhiteList().contains(origin)) &#123;</span><br><span class="line">                httpResponse.setHeader(<span class="string">"Access-Control-Allow-Origin"</span>, origin);</span><br><span class="line">                httpResponse.setHeader(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"POST,GET,OPTIONS"</span>);</span><br><span class="line">                httpResponse.setHeader(<span class="string">"Access-Control-Max-Age"</span>, <span class="string">"86400"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 浏览器拒绝响应MIME类型不正确的资源</span></span><br><span class="line">        httpResponse.setHeader(<span class="string">"X-Content-Type-Options"</span>, <span class="string">"nosniff"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 内容安全策略（CSP）设置</span></span><br><span class="line">        <span class="comment">// 参见：http://www.ruanyifeng.com/blog/2016/09/csp.html</span></span><br><span class="line">        <span class="comment">// httpResponse.setHeader("Content-Security-Policy", "default-src 'self'");</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 浏览器防XSS设置</span></span><br><span class="line">        <span class="comment">// 参见：https://www.freebuf.com/articles/web/138769.html</span></span><br><span class="line">        httpResponse.addHeader(<span class="string">"X-XSS-Protection"</span>, <span class="string">"1; mode=block"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// GET/POST请求参数过滤</span></span><br><span class="line">        <span class="comment">// 主要用于防止各类注入（XSS、SQL注入等）</span></span><br><span class="line">        <span class="keyword">if</span> (!intercept) &#123;</span><br><span class="line">            <span class="comment">// 获取GET参数，实际上不需要</span></span><br><span class="line">            <span class="comment">// String queryString = httpRequest.getQueryString();</span></span><br><span class="line">            <span class="comment">// MultiValueMap&lt;String, String&gt; parameters = UriComponentsBuilder.fromUriString(uri).build().getQueryParams();</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取GET/POST参数</span></span><br><span class="line">            Map&lt;String, String[]&gt; paramMap = httpRequest.getParameterMap();</span><br><span class="line"></span><br><span class="line">            post_filter:</span><br><span class="line">            <span class="keyword">for</span> (String param: paramMap.keySet()) &#123;</span><br><span class="line">                <span class="keyword">for</span> (String keyword: config.getBannedKeywords()) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (param.toLowerCase().contains(keyword)) &#123;</span><br><span class="line">                        intercept = <span class="keyword">true</span>;</span><br><span class="line">                        message = <span class="string">"检测到非法字符【"</span> + keyword + <span class="string">"】，请重新输入！"</span>;</span><br><span class="line">                        <span class="keyword">break</span> post_filter;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                String[] values = paramMap.get(param);</span><br><span class="line">                <span class="keyword">if</span> (values != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    Set&lt;String&gt; whiteList = config.getKeywordWhiteList().get(param.toLowerCase());</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span> (String value: values) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (String keyword: config.getBannedKeywords()) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (value.toLowerCase().contains(keyword) &amp;&amp; !(whiteList != <span class="keyword">null</span> &amp;&amp; whiteList.contains(keyword))) &#123;</span><br><span class="line">                                intercept = <span class="keyword">true</span>;</span><br><span class="line">                                message = <span class="string">"检测到非法字符【"</span> + keyword + <span class="string">"】，请重新输入！"</span>;</span><br><span class="line">                                <span class="keyword">break</span> post_filter;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 注意：如使用Restful风格的URL，还需要考虑检查url本身，并需要防止误判</span></span><br><span class="line">            <span class="comment">// for (String keyword: config.getBannedKeywords()) &#123;</span></span><br><span class="line">            <span class="comment">//     if (uri.toLowerCase().contains(keyword)) &#123;</span></span><br><span class="line">            <span class="comment">//         intercept = true;</span></span><br><span class="line">            <span class="comment">//         message = "检测到非法字符【" + keyword + "】，请重新输入！";</span></span><br><span class="line">            <span class="comment">//         break;</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 注意：上面无法检查JSON格式内容，如有需要，可在下面代码基础上进行完善</span></span><br><span class="line">            <span class="comment">// String contentType = httpRequest.getHeader("Content-Type");</span></span><br><span class="line">            <span class="comment">// if (contentType != null &amp;&amp; contentType.toLowerCase().contains("json")) &#123;</span></span><br><span class="line">            <span class="comment">//     // 获取JSON提交内容</span></span><br><span class="line">            <span class="comment">//     StringBuilder jsonStr = new StringBuilder();</span></span><br><span class="line">            <span class="comment">//     try &#123;</span></span><br><span class="line">            <span class="comment">//         BufferedReader reader = request.getReader();</span></span><br><span class="line">            <span class="comment">//         String line;</span></span><br><span class="line">            <span class="comment">//         while ((line = reader.readLine()) != null) &#123;</span></span><br><span class="line">            <span class="comment">//             jsonStr.append(line);</span></span><br><span class="line">            <span class="comment">//         &#125;</span></span><br><span class="line">            <span class="comment">//     &#125; catch (IOException e) &#123;</span></span><br><span class="line">            <span class="comment">//         logger.error("JSON读取错误", e);</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//     // 测试是否为合法JSON对象</span></span><br><span class="line">            <span class="comment">//     String json = jsonStr.toString();</span></span><br><span class="line">            <span class="comment">//     try &#123;</span></span><br><span class="line">            <span class="comment">//         JSON.parse(json);</span></span><br><span class="line">            <span class="comment">//     &#125; catch (JSONException e) &#123;</span></span><br><span class="line">            <span class="comment">//         intercept = true;</span></span><br><span class="line">            <span class="comment">//         message = "无效JSON";</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//     // 检查是否包含敏感字符</span></span><br><span class="line">            <span class="comment">//     for (String keyword: config.getBannedKeywords()) &#123;</span></span><br><span class="line">            <span class="comment">//         if ("\"".equals(keyword) || "'".equals(keyword)) &#123;</span></span><br><span class="line">            <span class="comment">//             continue;</span></span><br><span class="line">            <span class="comment">//         &#125;</span></span><br><span class="line">            <span class="comment">//         if (json.toLowerCase().contains(keyword)) &#123;</span></span><br><span class="line">            <span class="comment">//             intercept = true;</span></span><br><span class="line">            <span class="comment">//             message = "检测到非法字符【" + keyword + "】，请重新输入！";</span></span><br><span class="line">            <span class="comment">//             break;</span></span><br><span class="line">            <span class="comment">//         &#125;</span></span><br><span class="line">            <span class="comment">//     &#125;</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// "使用HTTP动词篡改的认证旁路"</span></span><br><span class="line">        <span class="comment">// 该策略用于应对甲方的安全扫测，实际无安全风险。</span></span><br><span class="line">        String method = httpRequest.getMethod();</span><br><span class="line">        <span class="keyword">if</span> (!intercept &amp;&amp; !<span class="string">"GET,POST,HEAD,OPTIONS,PUT,DELETE"</span>.contains(method)) &#123;</span><br><span class="line">            intercept = <span class="keyword">true</span>;</span><br><span class="line">            message = <span class="string">"检测到未授权的请求方式！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Host头攻击拦截</span></span><br><span class="line">        <span class="comment">// 该策略用于应对甲方的安全扫测，实际安全风险不大。</span></span><br><span class="line">        String host = httpRequest.getHeader(<span class="string">"Host"</span>);</span><br><span class="line">        <span class="keyword">if</span> (!intercept &amp;&amp; host != <span class="keyword">null</span> &amp;&amp; !config.getHostWhiteList().contains(host.toLowerCase())) &#123;</span><br><span class="line">            intercept = <span class="keyword">true</span>;</span><br><span class="line">            message = <span class="string">"检测到未授权访问，请重新从官方网站登录系统！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Referer拦截</span></span><br><span class="line">        <span class="comment">// 该策略主要用于预防CSRF攻击，并可在一定程度上预防盗链</span></span><br><span class="line">        <span class="comment">// 注意：</span></span><br><span class="line">        <span class="comment">// （1）Referer内容可被用户伪造</span></span><br><span class="line">        <span class="comment">// （2）仅凭Referer拦截的话，防盗链效果有限。如果想有效地防盗链，需要再采取其他措施，这里不再展开讨论。</span></span><br><span class="line">        String referer = httpRequest.getHeader(<span class="string">"Referer"</span>);</span><br><span class="line">        <span class="keyword">if</span> (!intercept) &#123;</span><br><span class="line">            <span class="keyword">if</span> (referer != <span class="keyword">null</span>) &#123;</span><br><span class="line">                String domain = referer.replaceAll(<span class="string">"^https?:\\/\\/(.*?)\\/.*"</span>, <span class="string">"$1"</span>).toLowerCase();</span><br><span class="line">                <span class="keyword">if</span> (!config.getHostWhiteList().contains(domain)) &#123;</span><br><span class="line">                    intercept = <span class="keyword">true</span>;</span><br><span class="line">                    message = <span class="string">"检测到未经授权的访问，请从官方网站登录系统，并检查操作是否正常！"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 要求POST请求中包含Referer，防止非法提交表单</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"POST"</span>.equals(httpRequest.getMethod())) &#123;</span><br><span class="line">                    intercept = <span class="keyword">true</span>;</span><br><span class="line">                    message = <span class="string">"检测到未经授权的访问，请从官方网站登录系统，并检查操作是否正常！"</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 结果</span></span><br><span class="line">        <span class="keyword">if</span> (!intercept) &#123;</span><br><span class="line">            <span class="comment">// 正常请求</span></span><br><span class="line">            chain.doFilter(request, response);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 被拦截，转发到报错页面</span></span><br><span class="line">            request.setAttribute(<span class="string">"message"</span>, message);</span><br><span class="line">            request.getRequestDispatcher(config.getErrorPageUrl()).forward(request, response);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 安全配置文件格式</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Set&lt;String&gt; uriWhiteList;</span><br><span class="line">        <span class="keyword">private</span> Set&lt;String&gt; extWhiteList;</span><br><span class="line">        <span class="keyword">private</span> Set&lt;String&gt; hostWhiteList;</span><br><span class="line">        <span class="keyword">private</span> List&lt;String&gt; bannedKeywords;</span><br><span class="line">        <span class="keyword">private</span> Map&lt;String, Set&lt;String&gt;&gt; keywordWhiteList;</span><br><span class="line">        <span class="keyword">private</span> Set&lt;String&gt; corsWhiteList;</span><br><span class="line">        <span class="keyword">private</span> String encoding;</span><br><span class="line">        <span class="keyword">private</span> String errorPageUrl;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">SecurityConfig</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getUriWhiteList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> uriWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUriWhiteList</span><span class="params">(Set&lt;String&gt; uriWhiteList)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.uriWhiteList = uriWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getExtWhiteList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> extWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setExtWhiteList</span><span class="params">(Set&lt;String&gt; extWhiteList)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.extWhiteList = extWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getHostWhiteList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> hostWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHostWhiteList</span><span class="params">(Set&lt;String&gt; hostWhiteList)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.hostWhiteList = hostWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getBannedKeywords</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> bannedKeywords;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBannedKeywords</span><span class="params">(List&lt;String&gt; bannedKeywords)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.bannedKeywords = bannedKeywords;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Map&lt;String, Set&lt;String&gt;&gt; getKeywordWhiteList() &#123;</span><br><span class="line">            <span class="keyword">return</span> keywordWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setKeywordWhiteList</span><span class="params">(Map&lt;String, Set&lt;String&gt;&gt; keywordWhiteList)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.keywordWhiteList = keywordWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getCorsWhiteList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> corsWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCorsWhiteList</span><span class="params">(Set&lt;String&gt; corsWhiteList)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.corsWhiteList = corsWhiteList;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getEncoding</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> encoding;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEncoding</span><span class="params">(String encoding)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.encoding = encoding;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">getErrorPageUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> errorPageUrl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrorPageUrl</span><span class="params">(String errorPageUrl)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.errorPageUrl = errorPageUrl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>security.yml:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 输入/输出字符编码</span></span><br><span class="line"><span class="attr">encoding:</span> <span class="string">UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 报错页面</span></span><br><span class="line"><span class="attr">errorPageUrl:</span> <span class="string">/error</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不拦截的URI的白名单</span></span><br><span class="line"><span class="attr">uriWhiteList:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">/error</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不拦截的扩展名</span></span><br><span class="line"><span class="attr">extWhiteList:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">jpg</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">gif</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">zip</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">rar</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pdf</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">doc</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">docx</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">xls</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">xlsx</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">ppt</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pptx</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">js</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">css</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可合法访问域名白名单（小写；不写协议；80和443不需要写端口）</span></span><br><span class="line"><span class="comment"># 用于Host和Referer校验</span></span><br><span class="line"><span class="comment"># 注意把自己电脑、测试环境、生产环境等都配置好</span></span><br><span class="line"><span class="attr">hostWhiteList:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8080</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">localhost:8080</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">www.yourdomain.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># XSS、SQL注入字符黑名单（小写）</span></span><br><span class="line"><span class="comment"># 注意：因绕过注入过滤方法很多，安全负责人需持续关注</span></span><br><span class="line"><span class="attr">bannedKeywords:</span></span><br><span class="line">  <span class="comment"># 防SQL注入</span></span><br><span class="line">  <span class="comment"># 各种引号</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"'"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">'"'</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%uff07"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%u0022"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%u0027"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%22"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%27"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%c0%a7"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%c0%27"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># SQL关键字</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"@@"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"select "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" from "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" where "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"delete "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"update "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"exec "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"drop "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"create "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"alter "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" union "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" or "</span>      <span class="comment"># 注意容易误判</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"+or+"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"+or "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" or+"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" and "</span>     <span class="comment"># 注意容易误判</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"+and+"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"+and "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" and+"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" having "</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" sys"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" sp_"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"db_name"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"db_id"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"host_name"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"host_id"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 防XSS</span></span><br><span class="line">  <span class="comment"># 标签</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;a"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;audio"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;iframe"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;img"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;input"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;noscript"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;object"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;script"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;style"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt;title"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; a"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; audio"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; iframe"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; img"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; input"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; noscript"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; object"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; script"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; style"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&lt; title"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3ca"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3caudio"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3ciframe"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3cimg"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3cinput"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3cnoscript"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3cobject"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3cscript"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3cstyle"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%3ctitle"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">" src="</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%20src="</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"style="</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"style ="</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"style%20="</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&amp;lt;"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&amp;gt;"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&amp;amp;lt;"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"&amp;amp;gt;"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%0a"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"%0d"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># JavaScript</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onclick"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"ondblclick"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onmousedown"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onmousemove"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onmouseout"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onmouseover"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onmouseup"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onkeydown"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onkeyup"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onkeypress"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onchange"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onselect"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onfocus"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onblur"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onerror"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onhelp"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onload"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"onunload"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"javascript"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"vbscript"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"jscript"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"window."</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"window["</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"document."</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">".do("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">".do ("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">".do%20("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"expression("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"expression ("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"expression%20("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"eval("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"eval ("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"eval%20("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"function("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"function ("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"function%20("</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"=&gt;"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 恶意脚本（应付检查的成分更多一些）</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">".bak"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">".php"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">".asp"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">".source"</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 其他注入</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"$&#123;"</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"#&#123;"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 防注入例外字段名单</span></span><br><span class="line"><span class="comment"># 例如公司英文名字段（company_name）中出现"联合跨国公司"，英文名中带有" UNION "，可加入例外）</span></span><br><span class="line"><span class="attr">keywordWhiteList:</span></span><br><span class="line">  <span class="attr">company_name:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">" union "</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">" and "</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许跨域资源共享白名单（需要完整URL）</span></span><br><span class="line"><span class="attr">corsWhiteList:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://www.theirdomain.com</span></span><br></pre></td></tr></table></figure><p>pom.xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.52<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.yaml<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>snakeyaml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>build.gradle：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">    implementation <span class="string">'org.apache.commons:commons-lang3'</span></span><br><span class="line">    implementation <span class="string">'com.alibaba:fastjson:1.2.52'</span></span><br><span class="line">    implementation <span class="string">'org.yaml:snakeyaml:1.25'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于行业系统来说，如果开发人员水平一般，而且又忙于赶工期，Web安全问题就很容易抛到脑后。然而，在这类系统中，用户输入内容往往是业务相关的，范围可以预测，不会特意输入敏感词语，因此又可以用简单粗暴的方法挡住大部分常见攻击。&lt;/p&gt;
&lt;p&gt;在Java应用中，页面加载之前会先经过过滤器（Filter），我们便可以设置一个安全过滤器SecurityFilter，以“宁可错杀一万，不可放过一个”的方式拦截常见攻击，满足基本的安全需求。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Web" scheme="https://plusnan.me/tags/Web/"/>
    
      <category term="安全" scheme="https://plusnan.me/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>风险提示：请使用正版！</title>
    <link href="https://plusnan.me/2019/08/16/genius-software/"/>
    <id>https://plusnan.me/2019/08/16/genius-software/</id>
    <published>2019-08-15T16:00:00.000Z</published>
    <updated>2020-01-20T13:25:32.796Z</updated>
    
    <content type="html"><![CDATA[<p>道理大家都懂，其中的坑大家却不一定都清楚。</p><p>在中国，使用盗版软件已经是习以为常的事情。即使你去公安局自首，说自己电脑上装了一堆破解版，警察叔叔也不会把你抓起来，只会把你轰回家。但是请注意，给公司工作就是另一码事了——律师函警告！</p><p>希望借本文给大家提个醒，挣钱不易，务必小心！</p><a id="more"></a><h1 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h1><p>在公司上班，使用盗版可能会给自己和公司招来严重后果。</p><h2 id="后门安全问题"><a href="#后门安全问题" class="headerlink" title="后门安全问题"></a>后门安全问题</h2><ul><li>2012年1月31日，<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXRob21lLmNvbS9odG1sL2l0LzEwMDY4Lmh0bQ==">部分汉化版PuTTY、WinSCP、SSH Secure等软件存在后门<i class="fa fa-external-link-alt"></i></span>。</li><li>2015年，<span class="exturl" data-url="aHR0cHM6Ly93d3cuYW50aXkuY29tL3Jlc3BvbnNlL3hjb2RlZ2hvc3QuaHRtbA==">XcodeGhost事件<i class="fa fa-external-link-alt"></i></span>：中国网络环境问题，促进了恶意版本编程软件的传播。</li><li>2016年11月，<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXFuaXUuY29tL3RocmVhdC1hbGVydC8yMTEzNi5odG1s">有人在CSDN等地散布含有勒索软件的PL/SQL Developer<i class="fa fa-external-link-alt"></i></span>。</li></ul><h2 id="律师函警告"><a href="#律师函警告" class="headerlink" title="律师函警告"></a>律师函警告</h2><ul><li><span class="exturl" data-url="aHR0cDovL2ZpbmFuY2Uuc2luYS5jb20uY24vY2hhbmppbmcvZ3NuZXdzLzIwMTQwODAxLzAxNTAxOTg3OTc4My5zaHRtbA==">公司遭到工商部门“突袭”检查盗版<i class="fa fa-external-link-alt"></i></span></li><li><span class="exturl" data-url="aHR0cHM6Ly93d3cuaXRob21lLmNvbS8wLzQxMi80NzYuaHRt">2019年3月，某公司实习生使用盗版Photoshop和字体，使公司陷入诉讼和巨额赔偿<i class="fa fa-external-link-alt"></i></span>。</li><li>“版权流氓”苏州思杰马克丁：在网上散布假破解版，查到企业使用后发真律师函；国内代理价格高于官方渠道……被这家代理“污染”的软件列表可见<span class="exturl" data-url="aHR0cDovL3d3dy5tYWtlZGluZy5jb20vcHJvZHVjdHMuaHRtbA==">其官网介绍<i class="fa fa-external-link-alt"></i></span>（注意其中有常用的Photoshop、TeamViewer、Xshell）。</li><li><del>任天堂最强法务部、迪士尼最强法务部、蔡徐坤律师函警告</del></li></ul><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="破财消灾"><a href="#破财消灾" class="headerlink" title="破财消灾"></a>破财消灾</h2><p>从道理上讲，花钱买正版天经地义，权益遭到侵害，维权也天经地义。如果软件真的在用，其地位不可替代，那么当然应该去买正版（虽然公司不见得能同意花钱），否则吃官司赔钱也是活该。</p><p>然而，有些厂商发律师函索要赔偿，更多是为了讹钱，甚至会“放长线钓大鱼”，在你们公司创业阶段视而不见，等你们公司挣到钱了再发律师函。对于这类公司，事先买些正版授权，把钱给够，没准以后用多少盗版他们也会视而不见了。</p><h2 id="金盆洗手"><a href="#金盆洗手" class="headerlink" title="金盆洗手"></a>金盆洗手</h2><p>别急着付钱！</p><p>如果软件不是很常用，而且官方喜欢打官司，读完本文之后，尽快把软件和软件的使用痕迹清除掉，或者采取一些防范措施，别让人用技术手段给查出来，成为日后对方发律师函和起诉的证据。</p><p>假如真的有律师函发过来，你可以先评估一下他们是真的掌握证据了，还是“敲诈勒索”（有的真是敲诈勒索）。想一想自己早在几个月前就把东西给删得干干净净的，就算各种部门现在马上来突击检查，也查不到任何证据，那么就可以理所当然地不鸟他们了，甚至怼他们一下：你说我们用你家盗版，你的证据呢？（小心反告你们敲诈勒索……）</p><h2 id="使用免费-开源替代品"><a href="#使用免费-开源替代品" class="headerlink" title="使用免费/开源替代品"></a>使用免费/开源替代品</h2><p>钱不是白来的，实在不想花钱的话，也可以使用免费或开源替代品（至少要让别人觉得你有替代品）。</p><p>不过需要注意的是，有些软件个人使用免费，商业使用收费。在安装之前，要先阅读许可协议，别看都不看就直接点同意，除非你确定对方厂商懒得管。</p><h2 id="加强教育"><a href="#加强教育" class="headerlink" title="加强教育"></a>加强教育</h2><p>有新入职员工时，要及时提醒注意版权问题。特别要留意喜欢“折腾”的人，要么要求他们买正版，要么要求使用无版权风险的软件，要么要求放弃个人喜好，使用与开发团队一样的软件（别集体翻车就行）。</p><p>除所用软件外，各种资料，例如程序代码、多媒体素材、字体等也要注意版权。要不然的话，即使躲过代理Photoshop的思杰马克丁，可能又会因应用登录页面的一张背景图片<span class="exturl" data-url="aHR0cDovL3d3dy54aW5odWFuZXQuY29tLzIwMTktMDQvMTIvY18xMjEwMTA3Mjg2Lmh0bQ==">让视觉中国找上门<i class="fa fa-external-link-alt"></i></span>（毕竟连国旗国徽的版权都是视觉中国的）。</p><p>即使是免费软件，也要到正规渠道下载，不要随便找“绿色版”、“汉化版”。谁知道里头有没有藏着删库（却让你跑不了路）的后门呢？</p><h1 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h1><h2 id="树大招风"><a href="#树大招风" class="headerlink" title="树大招风"></a>树大招风</h2><p>除了使用盗版软件，抄袭别人成果也是有风险的：</p><ul><li>汉芯：<span class="exturl" data-url="aHR0cHM6Ly9uZXdzLm15ZHJpdmVycy5jb20vMS82MTYvNjE2NzM3Lmh0bQ==">被一家装修公司“出卖”<i class="fa fa-external-link-alt"></i></span></li><li>银河麒麟：<span class="exturl" data-url="aHR0cHM6Ly93d3cud2lsbGlhbWxvbmcuaW5mby9hcmNoaXZlcy81MDguaHRtbA==">被发现是改版FreeBSD<i class="fa fa-external-link-alt"></i></span>。</li><li>红芯浏览器：<span class="exturl" data-url="aHR0cHM6Ly93d3cudGhlcGFwZXIuY24vbmV3c0RldGFpbF9mb3J3YXJkXzIzNTUyMzk=">被发现是换了壳的Chrome<i class="fa fa-external-link-alt"></i></span></li><li>木兰编程语言：<span class="exturl" data-url="aHR0cHM6Ly93d3cuaXRob21lLmNvbS8wLzQ2OS8yMDUuaHRt">改名“素贞编程语言”才更符合其性质<i class="fa fa-external-link-alt"></i></span></li></ul><p>未经蔡徐坤本人同意就制作打篮球视频也是有风险的。</p><h2 id="在中国没遭到迫害，出国之后却吃了牢饭"><a href="#在中国没遭到迫害，出国之后却吃了牢饭" class="headerlink" title="在中国没遭到迫害，出国之后却吃了牢饭"></a>在中国没遭到迫害，出国之后却吃了牢饭</h2><p>本文开头提到，你去公安局自首，警察会把你直接轰回家。然而，换成重视版权的国家，结局会沦为吃官司和吃牢饭。因此，如果你有机会去发达国家，无论是出游、出差还是出逃，建议稍微注意一下。</p><p>不过，像非洲那类地方就无所谓了，比起挣多少钱或者用什么软件，你更需要担心自己能不能活着回国。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;道理大家都懂，其中的坑大家却不一定都清楚。&lt;/p&gt;
&lt;p&gt;在中国，使用盗版软件已经是习以为常的事情。即使你去公安局自首，说自己电脑上装了一堆破解版，警察叔叔也不会把你抓起来，只会把你轰回家。但是请注意，给公司工作就是另一码事了——律师函警告！&lt;/p&gt;
&lt;p&gt;希望借本文给大家提个醒，挣钱不易，务必小心！&lt;/p&gt;
    
    </summary>
    
    
      <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>从Eclipse切换到IDEA（三）：传统Web项目转为Gradle项目</title>
    <link href="https://plusnan.me/2019/08/03/switch-to-idea-3/"/>
    <id>https://plusnan.me/2019/08/03/switch-to-idea-3/</id>
    <published>2019-08-02T16:00:00.000Z</published>
    <updated>2020-04-26T15:58:22.639Z</updated>
    
    <content type="html"><![CDATA[<p>除了在IDEA手工配置项目，也可考虑将传统Web项目转为Gradle项目，以便简化项目依赖管理、实现标准化构建等，也便于后续结合Jenkins等进一步实现自动化。</p><a id="more"></a><h1 id="项目目录结构"><a href="#项目目录结构" class="headerlink" title="项目目录结构"></a>项目目录结构</h1><p>我们以下面项目为例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&gt; WebProj1                      ----&gt; Web模块1</span><br><span class="line">    &gt; src                       ----&gt; Java源代码1</span><br><span class="line">    .   &gt; com</span><br><span class="line">    .       ...</span><br><span class="line">    &gt; config                    ----&gt; 模块配置文件1，部署时计划放到 WEB-INF&#x2F;classes 目录中</span><br><span class="line">    .   SpringMVC-servlet.xml</span><br><span class="line">    .   ...</span><br><span class="line">    &gt; WebContent                ----&gt; Web文件目录</span><br><span class="line">        &gt; WEB-INF</span><br><span class="line">        .   &gt; lib               ----&gt; 所需jar包</span><br><span class="line">        .       ...</span><br><span class="line">        .   web.xml</span><br><span class="line">        .   ...</span><br><span class="line">        index.jsp</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">&gt; WebProj2                      ----&gt; Web模块2</span><br><span class="line">    &gt; src                       ----&gt; Java源代码2</span><br><span class="line">    .   &gt; com</span><br><span class="line">    .       ...</span><br><span class="line">    &gt; config                    ----&gt; 模块配置文件2</span><br><span class="line">    .   SpringMVC-servlet.xml</span><br><span class="line">    .   ...</span><br><span class="line">    &gt; WebContent                ----&gt; Web文件目录</span><br><span class="line">        &gt; WEB-INF</span><br><span class="line">        .   &gt; lib               ----&gt; 所需jar包</span><br><span class="line">        .       ...</span><br><span class="line">        .   web.xml</span><br><span class="line">        .   ...</span><br><span class="line">        index.jsp</span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">&gt; CommonProj                    ----&gt; 公共代码，另外两个Project的依赖项</span><br><span class="line">    &gt; src                       ----&gt; Java源代码</span><br><span class="line">    .   &gt; com</span><br><span class="line">    .       ...</span><br><span class="line">    &gt; commonConfig              ----&gt; 全局配置文件</span><br><span class="line">        log4j.xml</span><br><span class="line">        ...</span><br></pre></td></tr></table></figure><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol><li>安装JDK 8：本文所用的Gradle 5.4既不支持古老的JDK 6，也不支持崭新的JDK 10。后文会解释如何保证不同版本JDK的兼容性。</li><li>检查各模块是否存在循环依赖：例如WebProj1依赖CommonProj，而CommonProj反过来又依赖WebProj1。这种情况在Eclipse里面能正常打包，然而切换到Gradle之后会出错，需要通过代码重构来消除错误。</li><li>统一java文件的字符编码（java就行，其他文件类型无妨）。假如一部分java代码文件是UTF-8，另一部分java代码文件用GBK，要么会出现编译错误，要么会产生乱码。</li><li>团队开发时，要提前和团队其他成员打好招呼，让大家有所准备。改造工作需要调整代码结构，因此在正式切换之前需要让大家理清未提交的代码，并保证配置文件能够正确构建。</li></ol><h1 id="开始改造"><a href="#开始改造" class="headerlink" title="开始改造"></a>开始改造</h1><h2 id="项目文件结构调整"><a href="#项目文件结构调整" class="headerlink" title="项目文件结构调整"></a>项目文件结构调整</h2><p>Maven和Gradle有很多约定俗成的要求，例如Java代码存放位置。我们需要按照这些约定来调整我们的代码结构：</p><ul><li>src（Java代码） → src/main/java</li><li>test（Java代码） → test/main/java</li><li>config（需要拷到 WEB-INF/classes 下面的配置文件） → src/main/resources</li><li>WebContent（Web文件内容，例如jsp等） → src/main/webapp</li><li>增加gradle相关配置文件，后文将介绍如何编写这些文件。</li></ul><p>调整效果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&gt; WebProj1                      ----&gt; Web模块1</span><br><span class="line">    &gt; src                       </span><br><span class="line">    .   &gt; 【main】</span><br><span class="line">    .   .   &gt; 【java】          ----&gt; Java源代码1挪到此处</span><br><span class="line">    .   .   .   &gt; com</span><br><span class="line">    .   .   .       ...</span><br><span class="line">    .   .   &gt; 【resources】     ----&gt; 模块配置文件1（原config）挪到此处</span><br><span class="line">    .   .   .   SpringMVC-servlet.xml</span><br><span class="line">    .   .   .   ...</span><br><span class="line">    .   .   &gt; 【webapp】        ----&gt; Web文件目录（原WebContent）挪到此处</span><br><span class="line">    .   .       &gt; WEB-INF</span><br><span class="line">    .   .       .   &gt; lib       ----&gt; 所需jar包</span><br><span class="line">    .   .       .       ...</span><br><span class="line">    .   .       .   web.xml</span><br><span class="line">    .   .       index.jsp</span><br><span class="line">    .   .       ...</span><br><span class="line">    .   &gt; 【test】              ----&gt; 即使未编写测试代码，也建议保留目录结构</span><br><span class="line">    .       &gt; java</span><br><span class="line">    .       &gt; resources</span><br><span class="line">    【build.gradle】            ----&gt; 新增的构建脚本</span><br><span class="line"></span><br><span class="line">&gt; WebProj2                      ----&gt; Web模块2</span><br><span class="line">    &gt; src                       </span><br><span class="line">    .   &gt; 【main】</span><br><span class="line">    .   .   &gt; 【java】          ----&gt; Java源代码2挪到此处</span><br><span class="line">    .   .   .   &gt; com</span><br><span class="line">    .   .   .       ...</span><br><span class="line">    .   .   &gt; 【resources】     ----&gt; 模块配置文件2（原config）挪到此处</span><br><span class="line">    .   .   .   SpringMVC-servlet.xml</span><br><span class="line">    .   .   .   ...</span><br><span class="line">    .   .   &gt; 【webapp】        ----&gt; Web文件目录（原WebContent）挪到此处</span><br><span class="line">    .   .       &gt; WEB-INF</span><br><span class="line">    .   .       .   &gt; lib       ----&gt; 所需jar包</span><br><span class="line">    .   .       .       ...</span><br><span class="line">    .   .       .   web.xml</span><br><span class="line">    .   .       index.jsp</span><br><span class="line">    .   .       ...</span><br><span class="line">    .   &gt; 【test】</span><br><span class="line">    .       &gt; java</span><br><span class="line">    .       &gt; resources</span><br><span class="line">    【build.gradle】            ----&gt; 新增的构建脚本</span><br><span class="line"></span><br><span class="line">&gt; CommonProj                    ----&gt; 公共代码，另外两个Project的依赖项</span><br><span class="line">    &gt; src                       </span><br><span class="line">    .   &gt; 【main】</span><br><span class="line">    .   .   &gt; 【java】          ----&gt; Java源代码挪到此处</span><br><span class="line">    .   .   .   &gt; com</span><br><span class="line">    .   .   .       ...</span><br><span class="line">    .   .   &gt; 【resources】     ----&gt; 全局配置文件挪到此处</span><br><span class="line">    .   .   .   log4j.xml</span><br><span class="line">    .   .   .   ...</span><br><span class="line">    .   &gt; test</span><br><span class="line">    .       &gt; java</span><br><span class="line">    .       &gt; resources</span><br><span class="line">    &gt; lib                      ----&gt; 为了消除编译错误，这里需要准备一份CommonProj必需的jar包</span><br><span class="line">    .   ...</span><br><span class="line">    【build.gradle】            ----&gt; 新增的构建脚本</span><br><span class="line"></span><br><span class="line">&gt; gradle                       ----&gt; Gradle Wrapper，后面会用命令来生成该目录及文件。</span><br><span class="line">    &gt; wrapper</span><br><span class="line">        gradle-wrapper.jar</span><br><span class="line">        gradle-wrapper.properties</span><br><span class="line">build.gradle                   ----&gt; 新增的构建脚本。此脚本范围为整个项目。</span><br><span class="line">settings.gradle</span><br><span class="line">gradle.properties</span><br></pre></td></tr></table></figure><h2 id="配置Gradle"><a href="#配置Gradle" class="headerlink" title="配置Gradle"></a>配置Gradle</h2><ol><li><span class="exturl" data-url="aHR0cHM6Ly93d3cueWlpYmFpLmNvbS9ncmFkbGUvaG93LWluc3RhbGwtZ3JhZGxlLXdpbmRvd3MuaHRtbA==">安装Gradle<i class="fa fa-external-link-alt"></i></span></li><li>放置Gradle Wrapper：打开终端，进入项目所在的根目录，输入<code>gradle wrapper</code>。以后其他成员只要在终端中直接输入“./gradlew”就能自动下载相同版本的Gradle。</li></ol><p>考虑到国内网络情况，需要进行两种额外处理步骤（二选一）：</p><ol><li>将gradle-5.4-all.zip分发给团队其他成员，让大家都按照上面方法手工安装Gradle。</li><li>上传到国内或公司内的服务器，例如<code>http://10.11.22.33:8088/gradle-5.4-all.zip</code>，然后修改你项目中的 gradle/wrapper/gradle-wrapper.properties 文件，将 distributionUrl 修改成该地址。后续其他成员只要执行gradlew就会自动从这个URL下载Gradle。</li></ol><p>假如需要代理才能访问网络，可在自己电脑 ~/.gradle/gradle.properties（C:\Users\xxx\.gradle\gradle.properties）中配置网络代理。</p><p>若使用HTTP代理，地址为<code>http://127.0.0.1:1081</code>，可加入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemProp.http.proxyHost&#x3D;127.0.0.1</span><br><span class="line">systemProp.http.proxyPort&#x3D;1081</span><br><span class="line">systemProp.https.proxyHost&#x3D;127.0.0.1</span><br><span class="line">systemProp.https.proxyPort&#x3D;1081</span><br></pre></td></tr></table></figure><p>若使用SOCKS5代理，地址为<code>127.0.0.1:1080</code>，则是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">org.gradle.jvmargs&#x3D;-DsocksProxyHost&#x3D;127.0.0.1 -DsocksProxyPort&#x3D;1080</span><br></pre></td></tr></table></figure><p>配置代理之后，个别情况下会出现<code>Error 403 Forbidden</code>报错，这种情况说明仓库屏蔽了你的代理，你只能换梯子或换国内源了。</p><h2 id="编写Gradle构建脚本"><a href="#编写Gradle构建脚本" class="headerlink" title="编写Gradle构建脚本"></a>编写Gradle构建脚本</h2><h3 id="build-gradle"><a href="#build-gradle" class="headerlink" title="/build.gradle"></a>/build.gradle</h3><p>build.gradle是构建脚本的核心。由于本文的案例是多模块项目，build.gradle也就分成了两层，外层是项目整体的，内层是各模块的。本小节是整体的配置。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    group = <span class="string">'com.yourcompany.xxx'</span></span><br><span class="line">    version = <span class="string">'1.0'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// subprojects是各模块的统一配置</span></span><br><span class="line">subprojects &#123;</span><br><span class="line">    apply <span class="string">plugin:</span> <span class="string">'java'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Java 版本</span></span><br><span class="line">    sourceCompatibility = <span class="number">1.8</span></span><br><span class="line">    targetCompatibility = <span class="number">1.8</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用Maven库管理部分依赖</span></span><br><span class="line">    repositories &#123;</span><br><span class="line">        mavenCentral()</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用阿里镜像</span></span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">'http://maven.aliyun.com/nexus/content/groups/public/'</span></span><br><span class="line">        &#125;</span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">'http://maven.aliyun.com/nexus/content/repositories/jcenter'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认编译器是javac，如果构建所用JDK与生产环境JDK版本不一致，可能会产生兼容性问题。</span></span><br><span class="line">    <span class="comment">// 将javac换成Eclipse编译器可避免问题。</span></span><br><span class="line">    configurations &#123;</span><br><span class="line">        ecj</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dependencies &#123;</span><br><span class="line">        ecj <span class="string">'org.eclipse.jdt.core.compiler:ecj:4.6.1'</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    compileJava &#123;</span><br><span class="line">        options.fork = <span class="literal">true</span></span><br><span class="line">        options.forkOptions.with &#123;</span><br><span class="line">            executable = <span class="string">'java'</span></span><br><span class="line">            jvmArgs = [<span class="string">'-classpath'</span>, project.configurations.ecj.asPath, <span class="string">'org.eclipse.jdt.internal.compiler.batch.Main'</span>, <span class="string">'-nowarn'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构建系统</span></span><br><span class="line">task myproj() &#123;</span><br><span class="line">    dependsOn <span class="string">':WebProj1:build'</span>, <span class="string">':WebProj2:build'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果java代码采用GBK编码，那么需要下面的调整：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">subprojects &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    compileJava &#123;</span><br><span class="line">        <span class="comment">// 字符编码</span></span><br><span class="line">        options.encoding = <span class="string">'GBK'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="settings-gradle"><a href="#settings-gradle" class="headerlink" title="/settings.gradle"></a>/settings.gradle</h3><p>该文件用于表示项目有哪些子模块（subproject）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rootProject.name &#x3D; &#39;myproj&#39;</span><br><span class="line"></span><br><span class="line">include &#39;CommonProj&#39;</span><br><span class="line">include &#39;WebProj1&#39;</span><br><span class="line">include &#39;WebProj2&#39;</span><br></pre></td></tr></table></figure><h3 id="gradle-properties"><a href="#gradle-properties" class="headerlink" title="/gradle.properties"></a>/gradle.properties</h3><p>该文件用于配置Gradle本身的环境，例如JVM参数等：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 内存设置</span><br><span class="line">org.gradle.jvmargs&#x3D;-Xmx1280m</span><br><span class="line"># 允许并行</span><br><span class="line">org.gradle.parallel&#x3D;true</span><br></pre></td></tr></table></figure><p>如果项目文件使用的字符编码是GBK，可加入（其中Xmx与字符编码无关，需要根据自己电脑情况设置）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemProp.file.encoding&#x3D;GBK</span><br><span class="line">org.gradle.jvmargs&#x3D;-Xmx1280m -Dfile.encoding&#x3D;GBK</span><br></pre></td></tr></table></figure><h3 id="WebProj1-build-gradle"><a href="#WebProj1-build-gradle" class="headerlink" title="/WebProj1/build.gradle"></a>/WebProj1/build.gradle</h3><p>该文件负责WebProj1模块的构建。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">'war'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">// 依赖模块：CommonProj</span></span><br><span class="line">    implementation(project(<span class="string">':CommonProj'</span>)) &#123;</span><br><span class="line">        <span class="comment">// 不要引入CommonProj的jar包，否则打包时依赖jar包会被打两遍</span></span><br><span class="line">        <span class="comment">// 但这样做你需要保证WebProj1和WebProj2中有必需的jar包，否则运行应用时会报错</span></span><br><span class="line">        transitive = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 本地jar包</span></span><br><span class="line">    providedCompile fileTree(<span class="string">dir:</span> <span class="string">'src/main/webapp/WEB-INF/lib'</span>, <span class="string">include:</span> <span class="string">'*.jar'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Servlet API，部署到生产环境时实际由Tomcat等中间件提供</span></span><br><span class="line">    providedCompile <span class="string">'javax.servlet:servlet-api:2.5'</span></span><br><span class="line">    providedCompile <span class="string">'javax.servlet.jsp:jsp-api:2.1'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传统项目的jar包需要手动管理，在切换成Gradle之后，可转交Gradle管理，例如删除SpringMVC相关jar包删除，并修改build.gradle：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    implementation <span class="string">'org.springframework:spring-webmvc:4.1.6.RELEASE'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WebProj2/build.gradle内容相同，不再赘述。</p><h3 id="CommonProj-build-gradle"><a href="#CommonProj-build-gradle" class="headerlink" title="/CommonProj/build.gradle"></a>/CommonProj/build.gradle</h3><p>内容比较简单。实际构建时会被打成jar包并放在其他模块的WEB-INF/lib中。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation fileTree(<span class="string">dir:</span> <span class="string">'lib'</span>, <span class="string">include:</span> <span class="string">'*.jar'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Servlet API</span></span><br><span class="line">    implementation <span class="string">'javax.servlet:servlet-api:2.5'</span></span><br><span class="line">    implementation <span class="string">'javax.servlet.jsp:jsp-api:2.1'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="gitignore"><a href="#gitignore" class="headerlink" title="/.gitignore"></a>/.gitignore</h3><p>需要让版本控制软件忽略Gradle产生的中间文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.gradle</span><br><span class="line"></span><br><span class="line">&#x2F;WebProj1&#x2F;build&#x2F;</span><br><span class="line">&#x2F;WebProj2&#x2F;build&#x2F;</span><br><span class="line">&#x2F;CommonProj&#x2F;build&#x2F;</span><br><span class="line"></span><br><span class="line"># 不要忽略gradle-wrapper.jar</span><br><span class="line">!gradle-wrapper.jar</span><br></pre></td></tr></table></figure><p>虽然gitignore只适用于Git，不过其他版本控制软件要做的事情也是相似的。</p><h1 id="验证测试"><a href="#验证测试" class="headerlink" title="验证测试"></a>验证测试</h1><p>打开终端，进入到项目所在目录，输入<code>gradle myproj</code>或<code>./gradlew myproj</code>。</p><p>如果构建成功，Gradle会生成一个jar包和两个WAR包，分别位于<code>CommonProj/build/libs</code>、<code>WebProj1/build/libs</code>和<code>WebProj2/build/libs</code>。其中CommonProj是jar包，并且会被加到另外两个WAR包中（WEB-INF/lib）。</p><p>接下来你需要展开两个WAR包，并与传统方式编译生成出来的内容进行比较。重点检查WEB-INF、WEB-INF/lib和WEB-INF/classes，如果二者一致，就说明打包打出来的内容是对的，否则需要根据实际情况来挪动源代码的文件。</p><p>可以确定的是，打出来的包缺少CommonProj模块中的class及配置文件，因为它们都在WEB-INF/lib/CommonProj-1.0.jar中。另外WEB-INF/classes中会缺少config目录，然而事实上也不需要这个目录（将config中的内容摊到WEB-INF/classes下面才是正确的）。如果部署测试之后未发现问题，那么可以忽略这两点差异。</p><p>项目能够正确打包，并且部署到Tomcat等中间件之后应用也能正常使用，你就可以把改动提交到版本控制系统，让同事也开始使用Gradle。</p><h1 id="其他需求（待补完）"><a href="#其他需求（待补完）" class="headerlink" title="其他需求（待补完）"></a>其他需求（待补完）</h1><h2 id="不要改变项目目录结构"><a href="#不要改变项目目录结构" class="headerlink" title="不要改变项目目录结构"></a>不要改变项目目录结构</h2><p>考虑到实际生产过程中开发团队的学习成本与切换成本，可能无法要求团队全部切换到Gradle，也不能改变代码目录结构。这样的话Gradle配置文件需要进行以下额外的调整：</p><p>根目录的build.gradle：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">subprojects &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 手动指定路径</span></span><br><span class="line">    sourceSets &#123;</span><br><span class="line">        main &#123;</span><br><span class="line">            java &#123;</span><br><span class="line">                srcDirs = [<span class="string">'src'</span>]</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            resources &#123;</span><br><span class="line">                srcDirs = [<span class="string">'src/config'</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        test &#123;</span><br><span class="line">            java &#123;</span><br><span class="line">                srcDirs = [<span class="string">'test'</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>WebProj1/build.gradle 和 WebProj2/build.gradle 需在文件中加入：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 手动指定Web文件路径</span></span><br><span class="line">webAppDirName = <span class="string">'WebRoot'</span></span><br></pre></td></tr></table></figure><p>CommonProj/build.gradle不用调整，然而你仍然需要建立/CommonProj/lib目录，并把CommonProj所需的jar包放进去。</p><h2 id="不要将CommonProj打成jar包"><a href="#不要将CommonProj打成jar包" class="headerlink" title="不要将CommonProj打成jar包"></a>不要将CommonProj打成jar包</h2><p>从上面的项目结构中可以看出，CommonProj中有一些公共的配置文件，将其打成jar包之后可能无法正确加载。为避免这种情况发生，可在打WAR包时将CommonProj的内容展开。</p><p>在根目录的build.gradle中进行如下调整：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">subprojects &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    processCommonProj = &#123; excludes = <span class="literal">null</span> -&gt;</span><br><span class="line">        war.from(zipTree(<span class="string">"$&#123;project(':CommonProj').buildDir&#125;/libs/CommonProj.jar"</span>)) &#123;</span><br><span class="line">            into <span class="string">'WEB-INF/classes'</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// WEB-INF/classes/META-INF 是解压之后出现的多余的东西，需要删除</span></span><br><span class="line">            exclude <span class="string">'META-INF/**'</span></span><br><span class="line">            <span class="keyword">if</span> (excludes != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (String <span class="string">s:</span> excludes) &#123;</span><br><span class="line">                    exclude s</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        war.rootSpec.exclude <span class="string">'CommonProj.jar'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在CommonProj/build.gradle中追加：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将jar包名字固定下来，以便后面处理</span></span><br><span class="line">jar &#123;</span><br><span class="line">    archiveName = <span class="string">'CommonProj.jar'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在两个WebProj的build.gradle中追加：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">war &#123;</span><br><span class="line">    processCommonProj()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行（待补完）"><a href="#运行（待补完）" class="headerlink" title="运行（待补完）"></a>运行（待补完）</h2><p><code>TODO</code></p><h2 id="按不同环境打包不同的配置文件（待补完）"><a href="#按不同环境打包不同的配置文件（待补完）" class="headerlink" title="按不同环境打包不同的配置文件（待补完）"></a>按不同环境打包不同的配置文件（待补完）</h2><p><code>TODO</code></p><h1 id="关于IDEA"><a href="#关于IDEA" class="headerlink" title="关于IDEA"></a>关于IDEA</h1><p>使用IDEA打开配置好的项目之后，IDEA会发现这是一个Gradle项目，并提示是否“Import”。点击屏幕右下角的“Enable Import”，并等Sync操作完成后，便可以直接在IDEA中执行Gradle任务。</p><h1 id="本系列目录"><a href="#本系列目录" class="headerlink" title="本系列目录"></a>本系列目录</h1><ul><li><a href="/2018/12/12/switch-to-idea-0/">为什么进行切换</a></li><li><a href="/2018/12/13/switch-to-idea-1/">切换的基本操作</a></li><li><a href="/2019/01/27/switch-to-idea-2">传统Web项目在IDEA的Project Structure</a></li><li><strong>传统Web项目转为Gradle项目</strong></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;除了在IDEA手工配置项目，也可考虑将传统Web项目转为Gradle项目，以便简化项目依赖管理、实现标准化构建等，也便于后续结合Jenkins等进一步实现自动化。&lt;/p&gt;
    
    </summary>
    
    
      <category term="教程" scheme="https://plusnan.me/categories/%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Gradle" scheme="https://plusnan.me/tags/Gradle/"/>
    
  </entry>
  
  <entry>
    <title>那些容易遗忘的非功能性需求</title>
    <link href="https://plusnan.me/2019/07/25/non-functional-requirement/"/>
    <id>https://plusnan.me/2019/07/25/non-functional-requirement/</id>
    <published>2019-07-24T16:00:00.000Z</published>
    <updated>2020-04-21T13:56:51.159Z</updated>
    
    <content type="html"><![CDATA[<p>非功能性需求不会给项目带来收益，然而非功能性需求不仅要在需求阶段考虑好，而且在设计与开发过程中也要多加留意，否则都会成为项目的坑……</p><p>本文以一个政府的Web应用项目为例，讨论一些容易遗忘的非功能性需求。</p><a id="more"></a><h2 id="易用性"><a href="#易用性" class="headerlink" title="易用性"></a>易用性</h2><p>用户界面应当设计友好，操作简洁，而且讲好现代标准汉语。</p><p>近些年来，各级政府正在大力推行政务改革，实现“一网通办”，达到“一网受理、只跑一次、一次办成”的目标。我们对用户办件条件进行校验时也要尽量做到“只跑一次”：例如用户不满足3个办件条件，我们尽量一次性把这3个条件都提示给用户，而不是挤牙膏式一项一项提醒，让用户录入三四遍才能成功申报。</p><p>团队开发时，每个人负责的功能都应当保持“画风一致”。要是A业务界面风格与操作方式像《喜羊羊与灰太狼》，而B业务的界面风格与操作方式像《熊出没》，这样太“沙雕”了。</p><h2 id="可靠性"><a href="#可靠性" class="headerlink" title="可靠性"></a>可靠性</h2><p>输入数据要进行有效性检查，并给出准确友好的错误提示。虽然这样说，有些问题还是容易忽略掉，例如：</p><ul><li>过度检查：<ul><li>姓名：有些民族的人名中没有姓氏，系统不能强制要求这些人录入姓氏。</li><li>手机号：“虚拟运营商”开始运营之后，中国已有170开头的手机号。2017年底，中国电信又推出了199开头的手机号……</li></ul></li><li>最大长度不够长：<ul><li>姓名：阿不都热依木·伊盖木拜尔迪</li><li>地址：新疆维吾尔自治区伊犁哈萨克自治州塔城地区和布克赛尔蒙古自治县教育学院买依墩卡萨克能科特奈分校（虽然这只是个网上流传的段子）</li><li>考虑长度时，不光要考虑字数，还要考虑字节数。例如Oracle里面一个汉字占3字节，设计表结构时要留得足够长。</li></ul></li><li>串号：登录A用户，办完业务之后注销，再以B用户身份登录，结果用户因浏览器窗口没关干净就操作而串号。</li></ul><p>为避免让用户承担不必要的责任，系统应防止用户在关键节点上误操作，例如：</p><ul><li>点击申报、删除等按钮时，弹出确认提示框，避免意外提交、丢失数据。</li><li>点击查询、保存等按钮之后，立刻让按钮变灰，避免让用户再次点击，否则网速不好的时候用户容易多次操作，导致系统负载增加、产生重复数据等。</li></ul><p>需要考虑系统整体的可靠性，以及故障恢复的能力。以缴费为例，假如用户网络出现故障，或者服务器系统故障，而用户实际上未完成缴费，系统需要能够回滚支付状态，不能给工作单标记成“已缴费”，更不能让银行扣用户的钱。</p><h2 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h2><p>关于安全，国家有一个专门的安全等保制度要求（可搜索“等保2.0”了解详细情况）。本文只讨论一些容易遗忘的需求。</p><h3 id="抵御常见攻击"><a href="#抵御常见攻击" class="headerlink" title="抵御常见攻击"></a>抵御常见攻击</h3><p>系统需要能够抵挡常见的攻击，例如XSS、SQL注入、CSRF、暴力破解口令等。</p><h3 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h3><p>考虑功能需求时，很容易就想到要判断哪些角色能够办理哪些业务。然而以下情况就容易忽略了：</p><ul><li>如果用户没有业务办理权限，却知道相应系统功能的URL，那么系统需要防止用户直接在浏览器录入URL来进行操作。</li><li>系统需要防止对其他账号（不应该接触到的）信息进行查询和操作，增加业务数据与用户身份关系的校验。举个例子，开发期间大家都用广东的账号来操作，那么你需要确认广西的账号里不会出现这些不该碰到的信息。<ul><li>接上一条，在URL和&lt;form&gt;层面也要加以防范，否则用户只要修改网址上面的id与页面里的隐藏域就能操作别人的信息了。</li></ul></li></ul><h3 id="审计"><a href="#审计" class="headerlink" title="审计"></a>审计</h3><p>系统登录注销、业务办理等操作要有跟踪记录，例如什么人、什么时间、用什么IP（注意预留IPv6支持）做了什么操作，以便在出事之后追查责任人。与第三方公司对接时更要做好日志记录，否则出问题时大家就要互相踢皮球了。</p><p>系统需要能够防范一些恶意操作，如猜测密码、频繁查询、构造恶意查询条件（分页每页显示10000条记录）等。</p><p>除应用层面，在数据库层面也要考虑审计记录，例如建立触发器和跟踪表，记录数据变化情况。</p><h3 id="处理敏感信息"><a href="#处理敏感信息" class="headerlink" title="处理敏感信息"></a>处理敏感信息</h3><p>证件号码、手机号等敏感信息应考虑加密，例如“130****5678”，更要防止被人导出。</p><p>允许用户生产内容的地方（例如意见反馈）需考虑敏感词过滤和人工审核。假如用户利用你的系统发表了《<span class="exturl" data-url="aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3dpa2kvJUU4JUE2JTgxJUU2JUIxJTgyJUU0JUI5JUEwJUU4JUJGJTkxJUU1JUI5JUIzJUU4JUJFJTlFJUU0JUJCJUJCJUU2JTgwJUJCJUU0JUI5JUE2JUU4JUFFJUIwJUU1JTg1JUFDJUU1JUJDJTgwJUU0JUJGJUExJUU0JUJBJThCJUU0JUJCJUI2">关于要求xxx同志辞去党和国家领导职务的公开信<i class="fa fa-external-link-alt"></i></span>》，而且还登上了你的系统首页，你就等着被有关部门处理吧。当然，政府项目还好，自己做产品的时候要更加注意。</p><p>除了输入输出，数据传输过程也要考虑安全，例如HTTP协议是明文传输，无论是GET还是POST请求，用户与服务器之间交互的数据都能被监听和篡改，而HTTPS协议解决了此问题。建议只要有条件就使用HTTPS。</p><h2 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h2><p>设计系统时，需考虑性能指标，例如响应时间、并发用户数、资源利用率等，另外也要考虑未来上线之后的业务规模与增长情况，性能和容量（包括网络带宽）都要足够才行。</p><p>计算性能需求时，需要留意的是“并发数”和“在线数”的区别。最大在线2000人并不等于最大并发2000，在功能上面的操作时间会“冲淡”并发数。一般场景主要是“最大在线数”，而抢票那种特殊场景要更加注重“最大并发数”。</p><p>设计系统架构时，需要考虑是否采用集群部署、负载均衡，考虑采用传统的单应用还是微服务架构，而且上线之前就要想好业务量增长以后该怎么办，不要等系统真的扛不住之后才想起来调整架构。</p><p>未来用户数大幅增长，或者会产生高并发时，则要考虑负载均衡、读写分离、分表、分库等机制。这里面每一项都是大坑，早准备少吃亏。</p><h2 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h2><p>以浏览器为例。目前的开发框架基本上都能兼容主流浏览器，然而我们需要额外考虑</p><ul><li>老版本IE：有些政府部门的电脑仍然是XP系统、IE6/7/8，我们需要考虑是否兼容这些电脑。</li><li>新版本IE：同上。</li><li>移动设备：确认是否需要兼容移动设备，例如Android、iOS等。</li><li>“国产化”：国家已命令各政府部门和公共机构三年内实现国产化替代。对于开发人员来说，这项要求实质上就是“页面能够在龙芯处理器电脑、老版本Linux系统的个位数版本Firefox上正确展示和操作”（没错，我们说的就是中标麒麟。如果连中标麒麟都能正常使用，那么能冲进<span class="exturl" data-url="aHR0cHM6Ly9kaXN0cm93YXRjaC5jb20v">DistroWatch<i class="fa fa-external-link-alt"></i></span>前十名的深度操作系统就更没问题了）。</li></ul><p>兼容性问题必须一开始就考虑好。一旦开始开发，后面就很难再做调整了。</p><p>另一个例子是字符编码。字符编码一定要用UTF-8，不要用别的，否则一个名字带生僻字、拒绝去派出所改名（因为改名牵涉人事、财务等诸多问题，很麻烦）而且还经常办业务的人可以让政府部门用户与系统开发人员集体崩溃。</p><h2 id="扩展性"><a href="#扩展性" class="headerlink" title="扩展性"></a>扩展性</h2><p>系统的硬件资源、软件资源、软件功能等应便于进行扩展调整。</p><p>需求不是一成不变的，甲方日后可能会提出需求变更，甚至自己打自己脸，推翻以前提出的需求。设计和开发时要提前考虑提高代码可复用性，降低需求变更成本：能参数化的地方增加参数化配置，能形成组件的东西做成组件，能避免copy-paste的地方就避免copy-paste（封装成公共类或公共函数），这样后面真发生需求变更时你能相对舒服一些。</p><p>开发业务系统时，还需考虑到“一网通办”的时代背景，留意未来有可能会与其他政府部门的系统进行对接。想象一下，假如你的业务逻辑代码是通过copy-paste写到不同平台的，而且Controller也夹杂着业务逻辑，没有使用服务，也没有形成公共方法或组件，那么一旦甲方提出需求变更，你就需要挨个检查PC端、移动端、自助服务终端、上海市政府一网通办接口、国家政务服务平台接口的代码然后再考虑如何修改……</p><h2 id="容易忽略的真·功能性需求"><a href="#容易忽略的真·功能性需求" class="headerlink" title="容易忽略的真·功能性需求"></a>容易忽略的真·功能性需求</h2><p>有一些功能需求，即使用户没提，我们也有必要加以考虑。</p><h3 id="查询统计"><a href="#查询统计" class="headerlink" title="查询统计"></a>查询统计</h3><p>领导们都喜欢“讲大局”，这样就会产生定期或不定期的统计需求，例如用户注册量、平均访问量、高峰时期访问量、业务办理量、退单率等。实现业务功能时要记得顺便做好信息记录与数据采集，不要等到领导提统计需求时才发现系统连原始数据记录都没有。</p><h3 id="待办查询和提醒"><a href="#待办查询和提醒" class="headerlink" title="待办查询和提醒"></a>待办查询和提醒</h3><p>很多用户工作繁忙，无法兼顾系统所有业务，而且也有个别用户神经大条，经常健忘。建议为这类用户开发一个“待办事项查询”功能，一个页面展示所有未完成的工作，并且对未及时处理的业务作出提醒，以免遗忘。</p><h3 id="系统公告"><a href="#系统公告" class="headerlink" title="系统公告"></a>系统公告</h3><p>遇到紧急情况，可通过系统功能向用户发出公告，否则找页面文件、增加alert代码、申请修改生产系统等一系列步骤容易耽误事。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;非功能性需求不会给项目带来收益，然而非功能性需求不仅要在需求阶段考虑好，而且在设计与开发过程中也要多加留意，否则都会成为项目的坑……&lt;/p&gt;
&lt;p&gt;本文以一个政府的Web应用项目为例，讨论一些容易遗忘的非功能性需求。&lt;/p&gt;
    
    </summary>
    
    
      <category term="项目开发经验" scheme="https://plusnan.me/categories/%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="需求分析" scheme="https://plusnan.me/tags/%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>使用Puppeteer制作微信消息通知机器人</title>
    <link href="https://plusnan.me/2019/06/03/wechat-bot/"/>
    <id>https://plusnan.me/2019/06/03/wechat-bot/</id>
    <published>2019-06-02T16:00:00.000Z</published>
    <updated>2020-01-14T18:15:06.675Z</updated>
    
    <content type="html"><![CDATA[<p>微信机器人是一个比较难搞的东西，因为微信登录比较麻烦，而且官方不仅不提供API，还积极封杀机器人和“非法登录”的途径，导致研发风险较大。目前比较成熟的两种方式是模拟微信网页版以及程序控制微信PC版应用。</p><p>本文采用Puppeteer框架，借助真实的浏览器访问微信网页版，模拟浏览器的正常操作，以降低被封杀的风险。</p><a id="more"></a><h2 id="大致思路"><a href="#大致思路" class="headerlink" title="大致思路"></a>大致思路</h2><ul><li>使用Express框架提供对外接口，让其他程序能够调用。</li><li>使用Puppeteer来访问微信网页版。由于微信网页版需要扫码登录，需要设计接口来暴露二维码（这里直接提供网页截图）。另外二维码会过期，因此需要刷新机制（本文程序的话，重启就行，不需要再另行实现）。</li><li>通过操作DOM来判断页面的状态。</li><li>通过模拟按键来寻找好友或群组、输入消息和发送消息。</li><li>通过捕获浏览器AJAX请求来获取新消息内容（本文未实现）。</li><li>实现敏感词和敏感言论过滤机制，以防无意或有意的攻击。</li></ul><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>详细参见<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2luZm5hbi9TaW1wbGVOb3RpZnlCb3Q=">https://github.com/infnan/SimpleNotifyBot<i class="fa fa-external-link-alt"></i></span>。</p><p>开启浏览器：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开启无头浏览器</span></span><br><span class="line"><span class="keyword">const</span> browser = <span class="keyword">await</span> puppeteer.launch(&#123;</span><br><span class="line">    headless: <span class="literal">true</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> page = (<span class="keyword">await</span> browser.pages())[<span class="number">0</span>];                 <span class="comment">// 取浏览器第一个Tab页</span></span><br><span class="line"><span class="keyword">await</span> page.setViewport(&#123; <span class="attr">width</span>: <span class="number">1366</span>, <span class="attr">height</span>: <span class="number">768</span> &#125;);    <span class="comment">// 浏览器窗口大小</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用简体中文界面</span></span><br><span class="line"><span class="keyword">await</span> page.goto(<span class="string">'https://wx.qq.com/?lang=zh_CN'</span>);</span><br></pre></td></tr></table></figure><p>发送消息的过程：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sendMessage = <span class="keyword">async</span> (target, message) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 判断是否登录</span></span><br><span class="line">    <span class="keyword">const</span> unloginTest = <span class="keyword">await</span> page.$(<span class="string">'body.unlogin'</span>);</span><br><span class="line">    <span class="keyword">if</span> (unloginTest) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> MessageError(<span class="string">'Not login'</span>, <span class="string">'NOLOGIN'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!target) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> MessageError(<span class="string">'Target not found'</span>, <span class="string">'NOTARGET'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果当前聊天就是目标，那么不用搜了，直接蹦到聊天框</span></span><br><span class="line">    <span class="keyword">const</span> testEle1 = <span class="keyword">await</span> page.$(<span class="string">'#chatArea a.title_name'</span>);</span><br><span class="line">    <span class="keyword">const</span> test1 = <span class="keyword">await</span> (<span class="keyword">await</span> testEle1.getProperty(<span class="string">'textContent'</span>)).jsonValue();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (test1 !== target) &#123;</span><br><span class="line">        <span class="keyword">const</span> searchEle = <span class="keyword">await</span> page.$(<span class="string">'#search_bar &gt; input'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清空搜索框和搜索结果</span></span><br><span class="line">        <span class="keyword">await</span> page.$<span class="built_in">eval</span>(<span class="string">'#search_bar input'</span>, node =&gt; node.value = <span class="string">''</span>);</span><br><span class="line">        <span class="keyword">await</span> searchEle.focus();</span><br><span class="line">        <span class="keyword">await</span> searchEle.type(<span class="string">' '</span>);</span><br><span class="line">        <span class="keyword">await</span> searchEle.press(<span class="string">'Backspace'</span>);</span><br><span class="line">        <span class="comment">// 延时，使页面上原有的搜索结果消失</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> timeout = <span class="number">40</span>; timeout &gt;= <span class="number">0</span>; timeout--) &#123;</span><br><span class="line">            <span class="keyword">const</span> testEle2 = <span class="keyword">await</span> page.$(<span class="string">'#search_bar div.mmpop'</span>);</span><br><span class="line">            <span class="keyword">if</span> (!testEle2) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">await</span> sleep(<span class="number">50</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 输入目标群组名称</span></span><br><span class="line">        <span class="keyword">await</span> searchEle.type(target);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 等待出现搜索结果，最长等待5秒</span></span><br><span class="line">        <span class="keyword">let</span> ok = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> timeout = <span class="number">100</span>; timeout &gt;= <span class="number">0</span>; timeout--) &#123;</span><br><span class="line">            <span class="keyword">const</span> testEle3 = <span class="keyword">await</span> page.$(<span class="string">'#search_bar div.mmpop h4.contact_title'</span>);</span><br><span class="line">            <span class="keyword">if</span> (testEle3) &#123;</span><br><span class="line">                <span class="keyword">const</span> test3 = <span class="keyword">await</span> (<span class="keyword">await</span> testEle3.getProperty(<span class="string">'textContent'</span>)).jsonValue();</span><br><span class="line">                <span class="keyword">if</span> (test3 === <span class="string">'找不到匹配的结果'</span>) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> MessageError(<span class="string">'Target not found'</span>, <span class="string">'NOTARGET'</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    ok = <span class="literal">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">await</span> sleep(<span class="number">50</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!ok) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> MessageError(<span class="string">'WeChat not responding'</span>, <span class="string">'NORESPONSE'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历搜索结果</span></span><br><span class="line">        <span class="comment">// 由于overflow数字不大，且翻页需要消耗操作和等待网络请求的时间，建议目标名称独一无二，免得不好找。</span></span><br><span class="line">        <span class="keyword">const</span> pop = <span class="keyword">await</span> page.$(<span class="string">'#search_bar div.mmpop'</span>);</span><br><span class="line">        <span class="keyword">let</span> lastname = <span class="string">''</span>;</span><br><span class="line">        ok = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> overflow = <span class="number">100</span>; overflow &gt;= <span class="number">0</span>; overflow--) &#123;</span><br><span class="line">            <span class="keyword">const</span> nowEle = <span class="keyword">await</span> pop.$(<span class="string">'div.contact_item.on'</span>);</span><br><span class="line">            <span class="comment">// 说明正在loading</span></span><br><span class="line">            <span class="keyword">if</span> (!nowEle) &#123;</span><br><span class="line">                <span class="keyword">await</span> sleep(<span class="number">50</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">let</span> currname = <span class="keyword">await</span> (<span class="keyword">await</span> (<span class="keyword">await</span> nowEle.$(<span class="string">'h4'</span>)).getProperty(<span class="string">'textContent'</span>)).jsonValue();</span><br><span class="line">            <span class="keyword">if</span> (lastname === currname) &#123;</span><br><span class="line">                <span class="comment">// 未找到目标，结束</span></span><br><span class="line">                ok = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            lastname = currname;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果没找到而且能往下翻那么就继续往下翻</span></span><br><span class="line">            <span class="comment">// 找到的话按一下回车键，进入聊天界面</span></span><br><span class="line">            <span class="keyword">if</span> (currname === target) &#123;</span><br><span class="line">                ok = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">await</span> searchEle.press(<span class="string">'Enter'</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">await</span> searchEle.press(<span class="string">'ArrowDown'</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 等待微信响应</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> timeout = <span class="number">10</span>; timeout &gt;= <span class="number">0</span>; timeout--) &#123;</span><br><span class="line">                    <span class="keyword">const</span> nowEle2 = <span class="keyword">await</span> pop.$(<span class="string">'div.contact_item.on'</span>);</span><br><span class="line">                    <span class="keyword">if</span> (nowEle2) &#123;</span><br><span class="line">                        <span class="keyword">let</span> currname2 = <span class="keyword">await</span> (<span class="keyword">await</span> (<span class="keyword">await</span> nowEle2.$(<span class="string">'h4'</span>)).getProperty(<span class="string">'textContent'</span>)).jsonValue();</span><br><span class="line">                        <span class="keyword">if</span> (currname !== currname2) &#123;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">await</span> sleep(<span class="number">20</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="comment">// 暂时到底了，需要loading</span></span><br><span class="line">                        <span class="keyword">await</span> sleep(<span class="number">200</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!ok) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> MessageError(<span class="string">'Target not found'</span>, <span class="string">'NOTARGET'</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 等待进入聊天界面</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> timeout = <span class="number">50</span>; timeout &gt;= <span class="number">0</span>; timeout--) &#123;</span><br><span class="line">            <span class="keyword">const</span> titleEle = <span class="keyword">await</span> page.$(<span class="string">'#chatArea a.title_name'</span>);</span><br><span class="line">            <span class="keyword">const</span> title = <span class="keyword">await</span> (<span class="keyword">await</span> titleEle.getProperty(<span class="string">'textContent'</span>)).jsonValue();</span><br><span class="line">            <span class="keyword">if</span> (title === target) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">await</span> sleep(<span class="number">20</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> testEle4 = <span class="keyword">await</span> page.$(<span class="string">'#chatArea a.title_name'</span>);</span><br><span class="line">    <span class="keyword">const</span> test4 = <span class="keyword">await</span> (<span class="keyword">await</span> testEle4.getProperty(<span class="string">'textContent'</span>)).jsonValue();</span><br><span class="line">    <span class="keyword">if</span> (test4 === target) &#123;</span><br><span class="line">        <span class="comment">// 输入消息</span></span><br><span class="line">        <span class="keyword">await</span> page.$<span class="built_in">eval</span>(<span class="string">'#editArea'</span>, node =&gt; node.textContent = <span class="string">''</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> editEle = <span class="keyword">await</span> page.$(<span class="string">'#editArea'</span>);</span><br><span class="line">        <span class="keyword">await</span> editEle.focus();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">const</span> [i, line] <span class="keyword">of</span> message.split(<span class="string">'\n'</span>).entries()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 发送多行消息时需要用 Ctrl+Enter 换行</span></span><br><span class="line">                <span class="keyword">await</span> page.keyboard.down(<span class="string">'Control'</span>);</span><br><span class="line">                <span class="keyword">await</span> page.keyboard.press(<span class="string">'Enter'</span>);</span><br><span class="line">                <span class="keyword">await</span> page.keyboard.up(<span class="string">'Control'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">await</span> editEle.type(line);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 按下发送按钮</span></span><br><span class="line">        <span class="keyword">await</span> page.keyboard.press(<span class="string">'Enter'</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> MessageError(<span class="string">'Target not confirmed'</span>, <span class="string">'NORESPONSE'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="保号注意事项"><a href="#保号注意事项" class="headerlink" title="保号注意事项"></a>保号注意事项</h2><p>为确保安全，使用机器人时需要多加注意，以免封号甚至招致牢狱之灾。以下皆为网友经验，仅供参考。</p><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><ul><li>使用真实手机注册，避免用模拟器或双开软件。<ul><li>使用模拟器的话需要先用xprivacy控制好微信的权限，否则会无法登录或被微信封禁。</li><li>使用双开之前先调查靠不靠谱，例如有些双开会被微信识别，导致账号被封，而小米手机的双开就比较安全。</li></ul></li><li>使用真实手机号注册，并进行实名认证，然后绑定一张银行卡，再往微信钱包里头存一块钱。</li><li>手机和手机号尽量专用，一个设备或手机号不要拿着注册很多微信号，也不要拿着频繁登录注销。</li><li>新注册的账号要在真实的手机上挂15至30天，然后再进行其他操作，以免让系统“大数据”识别。</li><li>不要忘记设置昵称、地区和头像。</li><li>至少保持三个真实好友。</li><li>一天之内不要加太多好友。</li><li>好友不要超过5000。</li></ul><h3 id="发送消息"><a href="#发送消息" class="headerlink" title="发送消息"></a>发送消息</h3><ul><li>注意消息发送频率不要太高。几秒钟就发一大堆消息（例如像<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL2F2Mzk0MjgxLw==">脸滚键盘<i class="fa fa-external-link-alt"></i></span>那样），这样很容易被封号。</li><li>不定期往“filehelper”或专用群发送keepalive消息，以防掉线。</li><li>注意设计监控和报警机制，掉线之后能及时去恢复连接。</li><li>要特别注意控制消息发送内容！尤其是接受用户输入的程序，一定要做好言论控制，以免他人无意或有意触发政治敏感话题，导致你的账号被封，甚至让你被警方请去喝茶。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;微信机器人是一个比较难搞的东西，因为微信登录比较麻烦，而且官方不仅不提供API，还积极封杀机器人和“非法登录”的途径，导致研发风险较大。目前比较成熟的两种方式是模拟微信网页版以及程序控制微信PC版应用。&lt;/p&gt;
&lt;p&gt;本文采用Puppeteer框架，借助真实的浏览器访问微信网页版，模拟浏览器的正常操作，以降低被封杀的风险。&lt;/p&gt;
    
    </summary>
    
    
      <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
      <category term="Puppeteer" scheme="https://plusnan.me/tags/Puppeteer/"/>
    
      <category term="微信" scheme="https://plusnan.me/tags/%E5%BE%AE%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>文档/知识库软件推荐</title>
    <link href="https://plusnan.me/2019/06/02/document-management/"/>
    <id>https://plusnan.me/2019/06/02/document-management/</id>
    <published>2019-06-01T16:00:00.000Z</published>
    <updated>2020-05-04T04:31:10.524Z</updated>
    
    <content type="html"><![CDATA[<p>我们曾经使用源代码版本控制软件来组织文档，然而版本控制软件的长项是管理代码，而非管理文档。用作档案库还算凑合，但是管理和检索知识并不方便，因此考虑了一些文档软件。大家可根据实际需求选用不同的系统。</p><a id="more"></a><p>本文有很多系统需要自行搭建。从信息安全的角度讲，建议内部文档不要使用现成的服务，而是自行准备服务器，并做好安全防范措施。从操作的角度上将，建议使用Docker部署，操作便捷。</p><h2 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h2><p>博客的特点是“流水账”，文章主题不固定，彼此之间关系也不紧密，访问也没有限制（当然你仍然可以在服务器上面进行限制），适合公开分享个人/项目经历以及经验教训之类的内容。</p><h3 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h3><ul><li>格式：富文本</li><li>官网：<span class="exturl" data-url="aHR0cHM6Ly93b3JkcHJlc3Mub3Jn">https://wordpress.org<i class="fa fa-external-link-alt"></i></span>和<span class="exturl" data-url="aHR0cHM6Ly93b3JkcHJlc3MuY29t">https://wordpress.com<i class="fa fa-external-link-alt"></i></span>（前者是软件，后者是把软件搭好的现成服务）</li><li>部署：需自行搭建</li><li>最流行的博客系统，不需要再详细叙述。文档可以直接在系统里面维护和发布，操作非常便捷。</li></ul><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><ul><li>格式：Markdown</li><li>官网：<span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlv">https://hexo.io<i class="fa fa-external-link-alt"></i></span></li><li>部署：需自行搭建Web Server，或者放到GitHub Pages/GitLab Pages等里面。每次更改文档需要重新生成代码和部署。</li><li>本博客就是用Hexo搭建的。但是，为了使博客运行，需要至少准备一个Web Server。想要玩得转的话，需要把源代码放在Git上面，还要需要配置CI，使用时还要先Git Pull再Git Push，对于大家来说实在太麻烦，不推荐。</li></ul><h2 id="维基和书籍类"><a href="#维基和书籍类" class="headerlink" title="维基和书籍类"></a>维基和书籍类</h2><p>这两类适合存放成体系的内容，检索起来也比较方便，可以用来建设知识库、资料库等。</p><h3 id="MediaWiki"><a href="#MediaWiki" class="headerlink" title="MediaWiki"></a>MediaWiki</h3><ul><li>格式：富文本（需使用MediaWiki语法）</li><li>官网：<span class="exturl" data-url="aHR0cHM6Ly9tZWRpYXdpa2kub3Jn">https://mediawiki.org<i class="fa fa-external-link-alt"></i></span></li><li>部署：需自行搭建</li><li>该软件最初就用于维基百科，适合构建百科类网站，组织知识零碎、有一定范围但各内容彼此之间关系不密切的内容。</li><li>软件有三个值得注意的缺点：<ul><li>学习成本比较高，需要熟悉维基语法和系统；</li><li>从零开始构建比较麻烦，需要设计一些模板，即使从维基百科导入工作也不轻松；</li><li>使用时需要明确内容编写与分类规范，否则很容易就写乱套了。</li></ul></li></ul><h3 id="BookStack"><a href="#BookStack" class="headerlink" title="BookStack"></a>BookStack</h3><ul><li>格式：富文本或Markdown，取决于网站设置</li><li>官网：<span class="exturl" data-url="aHR0cHM6Ly9ib29rc3RhY2thcHAuY29t">https://bookstackapp.com<i class="fa fa-external-link-alt"></i></span></li><li>部署：需自行搭建</li><li>该软件适合存放成体系、内容彼此之间关联密切的内容，例如书籍、手册等。我们目前正在使用此软件管理资料库。</li></ul><h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><p>Evernote、OneNote、Notable等软件的重点是个人笔记，本文不再介绍。</p><h3 id="Etherpad"><a href="#Etherpad" class="headerlink" title="Etherpad"></a>Etherpad</h3><ul><li>类型：纯文本或富文本（取决于网站设置）</li><li>官网：<span class="exturl" data-url="aHR0cHM6Ly9ldGhlcnBhZC5vcmc=">https://etherpad.org<i class="fa fa-external-link-alt"></i></span></li><li>部署：需自行搭建。个人建议直接放自己电脑上跑，需要的时候才启动。</li><li>该软件适合多人同时编辑同一个文件，而且彼此之间可以看到谁在修改哪些内容，建议协作时使用。</li></ul><h2 id="粘贴箱类"><a href="#粘贴箱类" class="headerlink" title="粘贴箱类"></a>粘贴箱类</h2><p>粘贴箱类适合临时分享一些小东西。</p><h3 id="Ubuntu-Pastebin"><a href="#Ubuntu-Pastebin" class="headerlink" title="Ubuntu Pastebin"></a>Ubuntu Pastebin</h3><ul><li>类型：仅纯文本（代码）</li><li>网站：<span class="exturl" data-url="aHR0cHM6Ly9wYXN0ZS51YnVudHUuY29t">https://paste.ubuntu.com<i class="fa fa-external-link-alt"></i></span></li><li>该网站适合临时分享一些文字或代码。想象一下用聊天软件给对方发东西时，是发一大坨代码（有时候系统可能还给自动转成表情符号）好看呢，还是发个小链接（网站顺便会给格式化一下）好看呢？</li></ul><h3 id="GitHub-Gist"><a href="#GitHub-Gist" class="headerlink" title="GitHub Gist"></a>GitHub Gist</h3><ul><li>类型：一个或多个代码文件</li><li>网站：<span class="exturl" data-url="aHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20=">https://gist.github.com<i class="fa fa-external-link-alt"></i></span></li><li>该网站适合分享一些零碎的代码片段，或者一些小到不值得开repo的程序。不过该网站已经被墙，所以分享时需要保证他人也能访问该网站。</li></ul><h3 id="img-vim-cn-com"><a href="#img-vim-cn-com" class="headerlink" title="img.vim-cn.com"></a>img.vim-cn.com</h3><ul><li>类型：图片</li><li>网站：<span class="exturl" data-url="aHR0cHM6Ly9pbWcudmltLWNuLmNvbS8=">https://img.vim-cn.com/<i class="fa fa-external-link-alt"></i></span></li><li>该网站可用于临时分享图片。如果处于不能或者不便发图的场合，可以先把图片传到这里，再去发图片的链接。</li></ul><h3 id="Firefox-Send"><a href="#Firefox-Send" class="headerlink" title="Firefox Send"></a>Firefox Send</h3><ul><li>类型：文件</li><li>网站：<span class="exturl" data-url="aHR0cHM6Ly9zZW5kLmZpcmVmb3guY29tLw==">https://send.firefox.com/<i class="fa fa-external-link-alt"></i></span></li><li>该网站可用于临时分享文件。同样是发送成功之后取一个下载链接。</li></ul><h2 id="其他软件附带的功能"><a href="#其他软件附带的功能" class="headerlink" title="其他软件附带的功能"></a>其他软件附带的功能</h2><h3 id="GitHub-GitLab"><a href="#GitHub-GitLab" class="headerlink" title="GitHub/GitLab"></a>GitHub/GitLab</h3><ul><li>GitHub Pages可以通过Git仓库运行静态网站，这样的话，你可以利用Hexo等软件维护一个博客，然后部署到GitHub上，从而运行文档库。另外请注意GitHub Pages的内容是公开的。</li><li>每个Git项目都有Wiki功能，使用Markdown语法，但只适合存放规模不大、层次简单的文档。</li></ul><p>GitLab也有类似的功能。</p><h3 id="Phabricator"><a href="#Phabricator" class="headerlink" title="Phabricator"></a>Phabricator</h3><p>Phabricator是一个项目管理平台，包含了很多模块，而且各模块之间可以无缝衔接。然而，我们认为这些都是Phabricator顺带的东西，不值得专门为了管理文档而新搭Phabricator。</p><p>以下是Phabricator中与文档相关的几个模块：</p><ul><li>Phame：博客</li><li>Phriction：Wiki，适合分享规模不大、内容有组织的文档</li><li>Paste：代码粘贴箱</li><li>File：文件分享（备注：一般附件也会自动保存在该应用中）</li></ul><p>这些功能全部使用Phabricator自己的语法，另外可以直接和P站其他资源链接，例如在Blog中直接输入T145就能自动链接到该任务。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们曾经使用源代码版本控制软件来组织文档，然而版本控制软件的长项是管理代码，而非管理文档。用作档案库还算凑合，但是管理和检索知识并不方便，因此考虑了一些文档软件。大家可根据实际需求选用不同的系统。&lt;/p&gt;
    
    </summary>
    
    
      <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
      <category term="文档管理" scheme="https://plusnan.me/tags/%E6%96%87%E6%A1%A3%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>日区、美区和港区Apple ID</title>
    <link href="https://plusnan.me/2019/06/01/apple-id/"/>
    <id>https://plusnan.me/2019/06/01/apple-id/</id>
    <published>2019-05-31T16:00:00.000Z</published>
    <updated>2020-03-02T13:54:46.086Z</updated>
    
    <content type="html"><![CDATA[<p>为了能在iOS设备上连接互联网，为了能在iOS设备上玩原生游戏而非国内黑心代理版本，为了能在iOS设备上安装已下架应用，我们需要把Apple ID的地区修改成中国以外的地方。</p><a id="more"></a><p><strong>本文写于2019年6月，内容不保证长期有效。当你阅读本文的时候，操作方法可能已经失效了。</strong></p><h2 id="为什么要换区"><a href="#为什么要换区" class="headerlink" title="为什么要换区"></a>为什么要换区</h2><ol><li>国区没有翻墙软件，即使有，也只是“有关部门”暂未发现的“漏网之鱼”，说不定哪天就下架了。</li><li>除了翻墙软件，其他软件与游戏也有莫名奇妙下架的风险。即使“自查”、“整改”，也不能保证有重新上线的机会。</li><li>有些软件和游戏会锁区，或者因中国方面审核等原因，其内容与服务逊于其他地区。</li><li>国区买不到购买特定区域的音乐、电影、电子书等内容。</li><li>云上贵州服务不值得信任（进一步讲，凡是中国的网络服务都不值得信任）。</li><li>……</li></ol><h2 id="重要前提"><a href="#重要前提" class="headerlink" title="重要前提"></a>重要前提</h2><p>如果没有前往境外的机会，那么你需要：</p><ol><li>翻墙<ul><li>翻墙之后，需要使用IP查询网站查询自己所在地址。美区要用美国IP，日区要用日本IP，港区要用香港IP，台区要用台湾IP，以此类推。</li></ul></li><li>信用卡（非必需）<ul><li>如果准备转美区，可以办一张Visa/Mastercard信用卡（注意，国内的卡无法直接绑定Apple ID，后面会讲解如何“迂回”绑定）或America Express卡（笔者未测试过）；</li><li>如果准备转日区，可以办一张JCB信用卡；</li><li>如果准备转港区/台区，则不需要准备信用卡。只要不是香港本地信用卡，办几张都没用。</li></ul></li></ol><h3 id="问题一：如果无法办理信用卡"><a href="#问题一：如果无法办理信用卡" class="headerlink" title="问题一：如果无法办理信用卡"></a>问题一：如果无法办理信用卡</h3><p>如果能够确保全程处于美国/日本/香港/台湾等地IP，在选择支付方式时会看到“无”（None/無/なし）的选项，而这个看起来不起眼的“无”实际上意味着“胜利”。尽管如此，还是建议提前多做准备，没什么坏处。</p><h3 id="问题二：如果iOS设备上装不了翻墙软件，怎么办"><a href="#问题二：如果iOS设备上装不了翻墙软件，怎么办" class="headerlink" title="问题二：如果iOS设备上装不了翻墙软件，怎么办"></a>问题二：如果iOS设备上装不了翻墙软件，怎么办</h3><ul><li>方法一：去网上搜索能用的公共Apple ID，虽然账号不会长久，至少能拿来安一下翻墙软件。</li><li>方法二：如果有电脑，电脑上安装了可用的翻墙软件，并提供了类似“HTTP代理”形式的代理，可将电脑的代理分享给手机使用。<ul><li>将iOS设备与电脑连接到同一路由器上。</li><li>调整电脑的翻墙软件的设置，找到类似“局域网分享”的选项。</li><li>进入iOS设备的无线局域网设置，在Wi-Fi的详细设置中可以看到“代理”的参数。将IP和端口设置成电脑的IP和端口，例如IP通常会类似192.168.1.100，而端口经常是1080之类的数字。</li></ul></li><li>方法三：在电脑上进行换区的工作，换好了之后再用手机登录。</li></ul><h3 id="其他选项"><a href="#其他选项" class="headerlink" title="其他选项"></a>其他选项</h3><p>可以尝试在网上搜一下公用的Apple ID，然而用的人太多的话肯定会被封杀。所以能不能用完全凭运气。</p><h2 id="换区操作"><a href="#换区操作" class="headerlink" title="换区操作"></a>换区操作</h2><p>操作步骤比较简单：</p><ul><li>挂好梯子，保证<strong>全程代理操作</strong>。</li><li>登录或注册新Apple ID<ul><li>如果访问appleid.apple.com出现“502 Bad Gateway”，那么需要更换浏览器，或者使用iOS设备操作。</li></ul></li><li>编辑个人资料</li><li>将地区更换成需要的地区，美国，日本或者香港等。</li><li><strong>接下来才是关键步骤：支付方式</strong>。只有提前做好准备，才能通过“考验”，成功换区。</li></ul><p>下面讨论美日港三区的支付方式的问题。</p><h3 id="日区"><a href="#日区" class="headerlink" title="日区"></a>日区</h3><p>如果没有信用卡，那么需要保证全程日本IP操作，这样切换支付方式时才有可能看到“无”的选项。</p><p>目前（2019年6月）日区注册比较简单，系统未对JCB信用卡的发卡国家进行校验，因此准备好日本IP的全局代理，然后输入招商银行等银行发行的JCB信用卡即可搞定。</p><h3 id="美区"><a href="#美区" class="headerlink" title="美区"></a>美区</h3><p>如果没有信用卡，那么需要保证全程美国IP，这样切换支付方式时才有可能看到“无”的选项。</p><p>如果看不到“无”，那么要做好充分准备：系统会检查Visa/Mastercard的发卡行，并且会拒绝中国的信用卡，因此只能通过美区PayPal迂回绑定。然而，<strong>PayPal操作容不得一丁点差错</strong>！任何一点小失误都会导致PayPal账号、手机号和信用卡永久“报废”。</p><h4 id="美区PayPal准备工作"><a href="#美区PayPal准备工作" class="headerlink" title="美区PayPal准备工作"></a>美区PayPal准备工作</h4><p>请确认以下东西全部准备好之后再开始注册。</p><ul><li>准备好<strong>美国IP全局代理</strong>。如果你无法确定自己是不是全局代理，那么有两种办法：<ul><li>用百度搜索“ip”，若出现你的代理地址，说明可能是全局代理了，因为翻墙软件或配置通常不会让百度也跟着翻墙。</li><li>不放心的话，买台美国服务器，装个桌面环境和浏览器，然后在上面进行操作。</li></ul></li><li>准备好Visa/Mastercard信用卡。虽然可以用中国发的卡，但请使用真实卡片，避免用他人银行卡。</li><li>准备一个<strong>可以长期持有</strong>的美国手机号。可以是实体号码，也可以是虚拟号码（例如Google Voice），但是你需要留意手机号的有效期，<strong>绝对不能让手机号被回收</strong>，否则以后无法再登进PayPal。<ul><li>美国的免税州：阿拉斯加州（Alaska）、特拉华州（Delaware）、蒙大拿州（Montana）、新罕布什尔州（New Hampshire）、俄勒冈州（Oregon）。在这些州消费可以免消费税，注册账号时可以考虑用这些州的手机号和地址。</li></ul></li></ul><h4 id="美区PayPal注册步骤"><a href="#美区PayPal注册步骤" class="headerlink" title="美区PayPal注册步骤"></a>美区PayPal注册步骤</h4><ol><li>去<span class="exturl" data-url="aHR0cHM6Ly93d3cucGF5cGFsLmNvbS91cy8=">PayPal官网<i class="fa fa-external-link-alt"></i></span>进行注册。注意：必须使用<strong>美国IP</strong>访问PayPal，保证网站处于<strong>美国地区</strong>。国区以及其他国家账号都无法用来绑定美区Apple ID。</li><li>注册时候要填写和信用卡一致的姓名。住址无所谓，去Google地图上随便找一个就行，建议填免税州。</li><li>注册完成之后需要验证身份：用事先准备的美国手机号收验证码即可。</li><li>然后需要绑定信用卡：注意信用卡姓名和账号姓名一致，否则PayPal会要求你上传各类证明文件（你没有美国的证明文件，对吧），对你的账号进行人工审核。</li><li>PayPal验证成功之后，<strong>等24小时之后</strong>再去关联Apple ID。新账号无法立刻绑定。</li><li>手机号要保持可用。如果换号，记得把PayPal上面的绑定的手机号也换掉。</li><li>无论什么时候登录PayPal，都必须保证使用美国IP。若不小心用中国IP登美区账号，账号可能会锁定，而且你会因为没有美国身份证件而无法申诉。</li></ol><p>另外还要注意一件事情：<strong>在账号完全验证成功之前，即身份验证和银行卡验证都成功之前，账号会处于受限状态</strong>。此时你无法修改账号信息，无法解绑填错的卡，也无法删除账号，还不能走人工申诉通道解锁（除非你有美国的身份证明文件），所以务必慎重操作。</p><h3 id="港区"><a href="#港区" class="headerlink" title="港区"></a>港区</h3><p>港区也对信用卡发卡地区进行了校验，不能使用内地银行卡，不支持PayPal，甚至港区PayPal都不行，而且，虽然香港是中国领土，在内地却很难办理香港的信用卡。</p><p>两种解决思路：</p><ul><li>全程香港代理，支付方式中会出现“无”，然后你就不需要绑卡了。</li><li>使用虚拟信用卡碰运气，例如<span class="exturl" data-url="aHR0cHM6Ly93d3cudGFwbmdvLmNvbS5oay9jaGkvYXBwbHkuaHRtbA==">拍住赏<i class="fa fa-external-link-alt"></i></span>。</li></ul><p>关于拍住赏的坑：</p><ul><li>建议用Gift Card充值而不是用拍住赏，办护照和淘宝代充值会多花“冤枉”钱。</li><li>注册拍住赏之前，需要准备护照或港澳通行证（还要年满18周岁），但护照或通行证不是白办的，护照工本费120，港澳通行证60。</li><li>注册成功之后，需要充值才能消费，然而中国内地的银行卡无法用来充值，所以还需要找万能的淘宝才行。</li></ul><p>台湾类似。</p><h2 id="其他注意事项"><a href="#其他注意事项" class="headerlink" title="其他注意事项"></a>其他注意事项</h2><ul><li>苹果未限制一个人持有多个Apple ID，也没限制一个人持有多个区的Apple ID，而且允许设备Apple ID与商店Apple ID不一致。<ul><li>可以在每个有能力注册的区里面注册一个账号（中国大陆、香港/台湾、日本、美国），分别使用合适的账号登录设备和商店，例如“学习强国”只有国区App Store才能下载得到，切换成美区之后反倒没有了。</li><li>尽管如此，不要频繁登录注销，否则会被苹果视为异常登录而封号。对于你账号所属地区来说，中国才是“外国”。</li><li>不要随便把账号借给别人，原因同上。授人以鱼不如授人以渔。</li></ul></li><li>使用当地IP切换地区，支付方式不一定能看到“无”，但是不使用当地IP，你一定看不到“无”。手机和电脑操作效果相同。</li><li>如果未绑定支付方式，但还需要消费，可以去<span class="exturl" data-url="aHR0cHM6Ly93d3cuYXBwbGUuY29tL3Nob3AvZ2lmdC1jYXJkcy9pdHVuZXMtZWxlY3Ryb25pYw==">苹果官网<i class="fa fa-external-link-alt"></i></span>购买充值的Gift Card（注意是App Store，不是Apple Store，后者是买机器用的）。充值时需选择“by Email”，用邮箱接收充值码。美区充一次最低$10，等至少4小时之后才能到账。</li><li>注册新Apple ID时需要验证手机，但系统未限制地区，可使用+86的中国手机号。</li><li>注册新Apple ID时需要填写地址，去Google地图上随便找个地方就行（例如<code>東京都世田谷区北沢3丁目23−14</code>，邮编<code>155-0031</code>）。</li></ul><h2 id="其他资料"><a href="#其他资料" class="headerlink" title="其他资料"></a>其他资料</h2><ul><li><span class="exturl" data-url="aHR0cHM6Ly9hcHBsZWNlbnNvcnNoaXAuY29tLw==">Apple Censorship<i class="fa fa-external-link-alt"></i></span>：列举各地区App Store里面少了哪些应用。需要说明的是，有些应用并不是下架“消失”，而是锁区或其他原因根本没上过线。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了能在iOS设备上连接互联网，为了能在iOS设备上玩原生游戏而非国内黑心代理版本，为了能在iOS设备上安装已下架应用，我们需要把Apple ID的地区修改成中国以外的地方。&lt;/p&gt;
    
    </summary>
    
    
      <category term="闲谈" scheme="https://plusnan.me/categories/%E9%97%B2%E8%B0%88/"/>
    
    
  </entry>
  
</feed>
